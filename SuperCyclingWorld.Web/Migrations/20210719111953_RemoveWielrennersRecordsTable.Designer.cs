// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210719111953_RemoveWielrennersRecordsTable")]
    partial class RemoveWielrennersRecordsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("a1c85648-f1fd-42f8-98e9-e2dfaa586aea"), AantalRecords = 0, Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("88fed016-5609-4006-9de8-09c69833c256"), AantalRecords = 0, Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("cf90cfc4-6153-4fdb-88eb-bc5588af1141"), AantalRecords = 0, Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("7a340b75-cb76-4471-920e-b63233a7efdc"), AantalRecords = 0, Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("79f1e9d4-2dc0-4f99-9b08-9ecb94f211bc"), AantalRecords = 0, Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("cf90cfc4-6153-4fdb-88eb-bc5588af1141"), SupporterId = new Guid("78316075-a1c5-4c0f-ac83-48f8fb90dc56") },
                        new { ClubId = new Guid("a1c85648-f1fd-42f8-98e9-e2dfaa586aea"), SupporterId = new Guid("7939fb25-ff5c-4aa1-9b5d-2596d3fafa0a") },
                        new { ClubId = new Guid("88fed016-5609-4006-9de8-09c69833c256"), SupporterId = new Guid("7939fb25-ff5c-4aa1-9b5d-2596d3fafa0a") },
                        new { ClubId = new Guid("cf90cfc4-6153-4fdb-88eb-bc5588af1141"), SupporterId = new Guid("7939fb25-ff5c-4aa1-9b5d-2596d3fafa0a") },
                        new { ClubId = new Guid("7a340b75-cb76-4471-920e-b63233a7efdc"), SupporterId = new Guid("7939fb25-ff5c-4aa1-9b5d-2596d3fafa0a") },
                        new { ClubId = new Guid("79f1e9d4-2dc0-4f99-9b08-9ecb94f211bc"), SupporterId = new Guid("7939fb25-ff5c-4aa1-9b5d-2596d3fafa0a") },
                        new { ClubId = new Guid("88fed016-5609-4006-9de8-09c69833c256"), SupporterId = new Guid("3471faca-e02d-45c3-a1c7-6c2bf2147828") },
                        new { ClubId = new Guid("cf90cfc4-6153-4fdb-88eb-bc5588af1141"), SupporterId = new Guid("35bf04a3-da73-409f-82b9-dc93ef4fbdd9") },
                        new { ClubId = new Guid("a1c85648-f1fd-42f8-98e9-e2dfaa586aea"), SupporterId = new Guid("78316075-a1c5-4c0f-ac83-48f8fb90dc56") },
                        new { ClubId = new Guid("a1c85648-f1fd-42f8-98e9-e2dfaa586aea"), SupporterId = new Guid("3471faca-e02d-45c3-a1c7-6c2bf2147828") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("7939fb25-ff5c-4aa1-9b5d-2596d3fafa0a"), WielrennerId = new Guid("1a29e061-ca47-480f-bcab-26f868e63ebd") },
                        new { SupporterId = new Guid("35bf04a3-da73-409f-82b9-dc93ef4fbdd9"), WielrennerId = new Guid("99ce9a58-389d-485e-b450-014da8902080") },
                        new { SupporterId = new Guid("7939fb25-ff5c-4aa1-9b5d-2596d3fafa0a"), WielrennerId = new Guid("4c8c1247-7648-4a4b-99d7-3b2b05b6ea6a") },
                        new { SupporterId = new Guid("78316075-a1c5-4c0f-ac83-48f8fb90dc56"), WielrennerId = new Guid("1a29e061-ca47-480f-bcab-26f868e63ebd") },
                        new { SupporterId = new Guid("35bf04a3-da73-409f-82b9-dc93ef4fbdd9"), WielrennerId = new Guid("9ee1adb1-3de1-4a71-b156-85d4d43a5e04") },
                        new { SupporterId = new Guid("3471faca-e02d-45c3-a1c7-6c2bf2147828"), WielrennerId = new Guid("99ce9a58-389d-485e-b450-014da8902080") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("97154dd9-a4b2-4416-9215-ba6efa370623"), Merk = "B-Twin", WielrennerId = new Guid("1a29e061-ca47-480f-bcab-26f868e63ebd"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("7d0a8502-7c41-4dcb-b6d8-acb3b345b66f"), Merk = "Moldava", WielrennerId = new Guid("4c8c1247-7648-4a4b-99d7-3b2b05b6ea6a"), Zadel = "Geel zadel" },
                        new { Id = new Guid("aadf0221-453c-413e-bf6a-4c89b28162ee"), Merk = "Merckx", WielrennerId = new Guid("9ee1adb1-3de1-4a71-b156-85d4d43a5e04"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<string>("Thropy");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aankomst");

                    b.Property<string>("Name");

                    b.Property<Guid>("PersoonId");

                    b.Property<string>("Start");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Ritten");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("7939fb25-ff5c-4aa1-9b5d-2596d3fafa0a"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("78316075-a1c5-4c0f-ac83-48f8fb90dc56"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("3471faca-e02d-45c3-a1c7-6c2bf2147828"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("35bf04a3-da73-409f-82b9-dc93ef4fbdd9"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("cfee5a6c-35e6-40ea-800f-40552650bbd5"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("5c78e5ff-bbd6-48e3-9138-e1636f207913"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("cacb9a9d-8c10-45e4-a18a-48b25fa9a6fd"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("97c7d0d7-afbb-4ae2-ab29-63b269354b1c"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("3ce32128-2be8-4e97-8376-36cbc5fd1768"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("0eca18e3-dc69-47f6-9a05-9c9f16d8e01e"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("a0c17220-4b0f-45f9-92b6-1f8e63ba46e3"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("cd3896ce-9e40-4f59-93b2-e41930b0afa4"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<double>("GemiddeldKm_h");

                    b.Property<int>("GemiddeldeKM_Rit");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("9ee1adb1-3de1-4a71-b156-85d4d43a5e04"), AantalRecords = 0, Achternaam = "Franckaert", ClubId = new Guid("79f1e9d4-2dc0-4f99-9b08-9ecb94f211bc"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 15.5, GemiddeldeKM_Rit = 110, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Robin" },
                        new { Id = new Guid("1a29e061-ca47-480f-bcab-26f868e63ebd"), AantalRecords = 0, Achternaam = "Jansma", ClubId = new Guid("a1c85648-f1fd-42f8-98e9-e2dfaa586aea"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 33.8, GemiddeldeKM_Rit = 203, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 260, Voornaam = "Johanna" },
                        new { Id = new Guid("4c8c1247-7648-4a4b-99d7-3b2b05b6ea6a"), AantalRecords = 0, Achternaam = "Vissers", ClubId = new Guid("79f1e9d4-2dc0-4f99-9b08-9ecb94f211bc"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 22.6, GemiddeldeKM_Rit = 150, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 301, Voornaam = "Bert" },
                        new { Id = new Guid("99ce9a58-389d-485e-b450-014da8902080"), AantalRecords = 0, Achternaam = "Depardieu", ClubId = new Guid("cf90cfc4-6153-4fdb-88eb-bc5588af1141"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.5, GemiddeldeKM_Rit = 206, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 85, Voornaam = "Gerard" },
                        new { Id = new Guid("d4fc7bc7-e1fb-46c6-9a8d-0eb273672a74"), AantalRecords = 0, Achternaam = "Van Overmeire", ClubId = new Guid("a1c85648-f1fd-42f8-98e9-e2dfaa586aea"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 41.5, GemiddeldeKM_Rit = 190, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 256, Voornaam = "Marc" },
                        new { Id = new Guid("5ed74120-8322-483b-b71b-104900b005da"), AantalRecords = 0, Achternaam = "Camara", ClubId = new Guid("cf90cfc4-6153-4fdb-88eb-bc5588af1141"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.51, GemiddeldeKM_Rit = 156, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 504, Voornaam = "Herdy" },
                        new { Id = new Guid("72e17e68-1766-48d4-bdad-3ed8ec97bbc9"), AantalRecords = 0, Achternaam = "Donckerwolcke", ClubId = new Guid("79f1e9d4-2dc0-4f99-9b08-9ecb94f211bc"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.5, GemiddeldeKM_Rit = 202, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1100, Voornaam = "Thomas" },
                        new { Id = new Guid("6c57cc9f-0d0d-48a8-8a3d-1bee1b76e1bd"), AantalRecords = 0, Achternaam = "Garnaal", ClubId = new Guid("7a340b75-cb76-4471-920e-b63233a7efdc"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 42.1, GemiddeldeKM_Rit = 166, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 250, Voornaam = "Sofie" },
                        new { Id = new Guid("d6413a35-6940-4720-8a52-39086e4b3f1e"), AantalRecords = 0, Achternaam = "Brokkenpap", ClubId = new Guid("7a340b75-cb76-4471-920e-b63233a7efdc"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.5, GemiddeldeKM_Rit = 185, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 125, Voornaam = "Berend" },
                        new { Id = new Guid("929c45bf-ab34-4e97-a327-da733233852e"), AantalRecords = 0, Achternaam = "Mega", ClubId = new Guid("79f1e9d4-2dc0-4f99-9b08-9ecb94f211bc"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 42.15, GemiddeldeKM_Rit = 230, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 568, Voornaam = "Mindy" },
                        new { Id = new Guid("96d497eb-92e3-40ca-ba2a-376d374fb6cf"), AantalRecords = 0, Achternaam = "Scarlet", ClubId = new Guid("7a340b75-cb76-4471-920e-b63233a7efdc"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 22.5, GemiddeldeKM_Rit = 111, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 308, Voornaam = "Johanson" },
                        new { Id = new Guid("05baa842-d974-4908-802a-1f264346dfa5"), AantalRecords = 0, Achternaam = "Beukelaer", ClubId = new Guid("a1c85648-f1fd-42f8-98e9-e2dfaa586aea"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 23.6, GemiddeldeKM_Rit = 232, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Koekjes" },
                        new { Id = new Guid("c7618859-c1d0-40ee-86f2-af4f4b8a29c9"), AantalRecords = 0, Achternaam = "Mertens", ClubId = new Guid("cf90cfc4-6153-4fdb-88eb-bc5588af1141"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 22.65, GemiddeldeKM_Rit = 155, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Evelyne" },
                        new { Id = new Guid("866f6f07-7f9c-4cb6-a39a-9fcc62c7e534"), AantalRecords = 0, Achternaam = "VanHoof", ClubId = new Guid("cf90cfc4-6153-4fdb-88eb-bc5588af1141"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 29.55, GemiddeldeKM_Rit = 136, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 306, Voornaam = "Emily" },
                        new { Id = new Guid("e6927028-b287-4935-901b-d0649ee0e772"), AantalRecords = 0, Achternaam = "Vanderplas", ClubId = new Guid("cf90cfc4-6153-4fdb-88eb-bc5588af1141"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 33.6, GemiddeldeKM_Rit = 163, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 59, Voornaam = "Sonja" },
                        new { Id = new Guid("45235ec5-5833-40e7-80c3-99ca0cc9c084"), AantalRecords = 0, Achternaam = "Bambino", ClubId = new Guid("79f1e9d4-2dc0-4f99-9b08-9ecb94f211bc"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 44.2, GemiddeldeKM_Rit = 159, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 257, Voornaam = "Salvatore" },
                        new { Id = new Guid("1867dbef-ffaa-4ce2-9a66-64b9fef97718"), AantalRecords = 0, Achternaam = "Zalinski", ClubId = new Guid("7a340b75-cb76-4471-920e-b63233a7efdc"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 31.6, GemiddeldeKM_Rit = 174, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 233, Voornaam = "Wosznjeck" },
                        new { Id = new Guid("27207fc4-7c0e-4cce-ab54-6a3c9a393847"), AantalRecords = 0, Achternaam = "Debruyne", ClubId = new Guid("79f1e9d4-2dc0-4f99-9b08-9ecb94f211bc"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 15.9, GemiddeldeKM_Rit = 165, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 450, Voornaam = "Kevin" },
                        new { Id = new Guid("0a89a1a9-9e0f-4cb0-8d5b-62e8cf0b3c53"), AantalRecords = 0, Achternaam = "Hazard", ClubId = new Guid("cf90cfc4-6153-4fdb-88eb-bc5588af1141"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 44.2, GemiddeldeKM_Rit = 166, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 23, Voornaam = "Eden" },
                        new { Id = new Guid("f9a23758-1cdf-4480-a4c1-9be6007900a3"), AantalRecords = 0, Achternaam = "Evenepoel", ClubId = new Guid("88fed016-5609-4006-9de8-09c69833c256"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 12.53, GemiddeldeKM_Rit = 166, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Ritten")
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
