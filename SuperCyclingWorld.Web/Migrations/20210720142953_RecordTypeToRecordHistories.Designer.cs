// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210720142953_RecordTypeToRecordHistories")]
    partial class RecordTypeToRecordHistories
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("367cfc0a-c910-485f-a905-43133d10d1b6"), AantalRecords = 0, Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("55c66dff-692d-429d-95ae-a14a4e0b43e9"), AantalRecords = 0, Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("bea36d49-508a-41d1-9508-0209303bd5fc"), AantalRecords = 0, Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("132f1034-6f3c-4b50-ab35-c3a8c9591f76"), AantalRecords = 0, Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("7d8bf1e6-b435-42b6-9e19-9d1f931cac82"), AantalRecords = 0, Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("bea36d49-508a-41d1-9508-0209303bd5fc"), SupporterId = new Guid("25fa693e-5de5-4062-9de6-6bbad8c77f9d") },
                        new { ClubId = new Guid("367cfc0a-c910-485f-a905-43133d10d1b6"), SupporterId = new Guid("9670a0a8-eca8-42b5-a76c-dcac39c61709") },
                        new { ClubId = new Guid("55c66dff-692d-429d-95ae-a14a4e0b43e9"), SupporterId = new Guid("9670a0a8-eca8-42b5-a76c-dcac39c61709") },
                        new { ClubId = new Guid("bea36d49-508a-41d1-9508-0209303bd5fc"), SupporterId = new Guid("9670a0a8-eca8-42b5-a76c-dcac39c61709") },
                        new { ClubId = new Guid("132f1034-6f3c-4b50-ab35-c3a8c9591f76"), SupporterId = new Guid("9670a0a8-eca8-42b5-a76c-dcac39c61709") },
                        new { ClubId = new Guid("7d8bf1e6-b435-42b6-9e19-9d1f931cac82"), SupporterId = new Guid("9670a0a8-eca8-42b5-a76c-dcac39c61709") },
                        new { ClubId = new Guid("55c66dff-692d-429d-95ae-a14a4e0b43e9"), SupporterId = new Guid("31279284-f485-4a35-9f5f-1a7430f00466") },
                        new { ClubId = new Guid("bea36d49-508a-41d1-9508-0209303bd5fc"), SupporterId = new Guid("561f7456-e29c-4be7-a19b-111a3f59ef80") },
                        new { ClubId = new Guid("367cfc0a-c910-485f-a905-43133d10d1b6"), SupporterId = new Guid("25fa693e-5de5-4062-9de6-6bbad8c77f9d") },
                        new { ClubId = new Guid("367cfc0a-c910-485f-a905-43133d10d1b6"), SupporterId = new Guid("31279284-f485-4a35-9f5f-1a7430f00466") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("9670a0a8-eca8-42b5-a76c-dcac39c61709"), WielrennerId = new Guid("06980df0-ba30-4bbf-8c9a-1471d4569fa8") },
                        new { SupporterId = new Guid("561f7456-e29c-4be7-a19b-111a3f59ef80"), WielrennerId = new Guid("94a9c7de-8434-4604-bc0a-1fab5f07e4be") },
                        new { SupporterId = new Guid("9670a0a8-eca8-42b5-a76c-dcac39c61709"), WielrennerId = new Guid("6873fcf8-137e-46b5-b4f6-e10446879d9a") },
                        new { SupporterId = new Guid("25fa693e-5de5-4062-9de6-6bbad8c77f9d"), WielrennerId = new Guid("06980df0-ba30-4bbf-8c9a-1471d4569fa8") },
                        new { SupporterId = new Guid("561f7456-e29c-4be7-a19b-111a3f59ef80"), WielrennerId = new Guid("4f8c98f7-97bb-49d0-a0d8-8032ff3aaa46") },
                        new { SupporterId = new Guid("31279284-f485-4a35-9f5f-1a7430f00466"), WielrennerId = new Guid("94a9c7de-8434-4604-bc0a-1fab5f07e4be") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("39fe173b-4d7a-42e8-8645-eeba00647857"), Merk = "B-Twin", WielrennerId = new Guid("06980df0-ba30-4bbf-8c9a-1471d4569fa8"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("6a220082-ce12-4adc-b8bf-299a99ee3b8a"), Merk = "Moldava", WielrennerId = new Guid("6873fcf8-137e-46b5-b4f6-e10446879d9a"), Zadel = "Geel zadel" },
                        new { Id = new Guid("b06bb235-b44d-4f69-b24b-04641b264f1f"), Merk = "Merckx", WielrennerId = new Guid("4f8c98f7-97bb-49d0-a0d8-8032ff3aaa46"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aankomst");

                    b.Property<string>("Name");

                    b.Property<Guid>("PersoonId");

                    b.Property<string>("Start");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Ritten");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("9670a0a8-eca8-42b5-a76c-dcac39c61709"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("25fa693e-5de5-4062-9de6-6bbad8c77f9d"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("31279284-f485-4a35-9f5f-1a7430f00466"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("561f7456-e29c-4be7-a19b-111a3f59ef80"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("133a1822-c693-4f39-a46a-ee32bf66edf7"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("2a5af7a1-1a6d-4950-a803-129c2c99147c"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("cb57efbd-68c6-4d9c-a335-86d8c3e4e59b"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("1dcd15c1-7c1d-4b96-a28c-d5ba25de9183"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("76f44a3c-7875-4c05-8588-67a246a95655"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("e03ac4c6-f3f5-40b4-bc36-701f9e5be66d"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("57d8cc6c-b093-4354-9224-61eac040e672"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("d1f40896-f653-4d1f-8edd-30ac045c660d"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<double>("GemiddeldKm_h");

                    b.Property<int>("GemiddeldeKM_Rit");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.Property<int>("WattageRecord");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("4f8c98f7-97bb-49d0-a0d8-8032ff3aaa46"), AantalRecords = 0, Achternaam = "Franckaert", ClubId = new Guid("367cfc0a-c910-485f-a905-43133d10d1b6"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 31.0, GemiddeldeKM_Rit = 10, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 100, Voornaam = "Robin", WattageRecord = 55 },
                        new { Id = new Guid("06980df0-ba30-4bbf-8c9a-1471d4569fa8"), AantalRecords = 0, Achternaam = "Jansma", ClubId = new Guid("55c66dff-692d-429d-95ae-a14a4e0b43e9"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 32.0, GemiddeldeKM_Rit = 20, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 101, Voornaam = "Johanna", WattageRecord = 66 },
                        new { Id = new Guid("6873fcf8-137e-46b5-b4f6-e10446879d9a"), AantalRecords = 0, Achternaam = "Vissers", ClubId = new Guid("7d8bf1e6-b435-42b6-9e19-9d1f931cac82"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 33.0, GemiddeldeKM_Rit = 30, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 102, Voornaam = "Bert", WattageRecord = 77 },
                        new { Id = new Guid("94a9c7de-8434-4604-bc0a-1fab5f07e4be"), AantalRecords = 0, Achternaam = "Depardieu", ClubId = new Guid("7d8bf1e6-b435-42b6-9e19-9d1f931cac82"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 34.0, GemiddeldeKM_Rit = 40, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Gerard", WattageRecord = 88 },
                        new { Id = new Guid("f17bf21d-18d3-406b-b8fc-e8b1a922be2b"), AantalRecords = 0, Achternaam = "Van Overmeire", ClubId = new Guid("bea36d49-508a-41d1-9508-0209303bd5fc"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 35.0, GemiddeldeKM_Rit = 50, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 104, Voornaam = "Marc", WattageRecord = 99 },
                        new { Id = new Guid("d732fbba-05a9-462f-9678-0f7ecf9639fc"), AantalRecords = 0, Achternaam = "Camara", ClubId = new Guid("132f1034-6f3c-4b50-ab35-c3a8c9591f76"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 36.0, GemiddeldeKM_Rit = 60, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 105, Voornaam = "Herdy", WattageRecord = 41 },
                        new { Id = new Guid("2eb680a6-ff08-4655-807b-c528aa7764cf"), AantalRecords = 0, Achternaam = "Donckerwolcke", ClubId = new Guid("367cfc0a-c910-485f-a905-43133d10d1b6"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 37.0, GemiddeldeKM_Rit = 70, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 106, Voornaam = "Thomas", WattageRecord = 105 },
                        new { Id = new Guid("cf6a2c27-d01e-4520-ad12-22331f407996"), AantalRecords = 0, Achternaam = "Garnaal", ClubId = new Guid("132f1034-6f3c-4b50-ab35-c3a8c9591f76"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 38.0, GemiddeldeKM_Rit = 80, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 107, Voornaam = "Sofie", WattageRecord = 50 },
                        new { Id = new Guid("705b8e4b-a892-4a89-870a-b1c178386052"), AantalRecords = 0, Achternaam = "Brokkenpap", ClubId = new Guid("bea36d49-508a-41d1-9508-0209303bd5fc"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 39.0, GemiddeldeKM_Rit = 90, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 108, Voornaam = "Berend", WattageRecord = 30 },
                        new { Id = new Guid("5c5b4fe4-1d39-4c37-b4c3-c1edefde1785"), AantalRecords = 0, Achternaam = "Mega", ClubId = new Guid("7d8bf1e6-b435-42b6-9e19-9d1f931cac82"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 40.0, GemiddeldeKM_Rit = 5, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 109, Voornaam = "Mindy", WattageRecord = 31 },
                        new { Id = new Guid("535e478c-4d4b-473c-993b-354ac0e962be"), AantalRecords = 0, Achternaam = "Scarlet", ClubId = new Guid("132f1034-6f3c-4b50-ab35-c3a8c9591f76"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 41.0, GemiddeldeKM_Rit = 6, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Johanson", WattageRecord = 32 },
                        new { Id = new Guid("cf866f89-f81b-402b-8ebb-c8e10424ba61"), AantalRecords = 0, Achternaam = "Beukelaer", ClubId = new Guid("132f1034-6f3c-4b50-ab35-c3a8c9591f76"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 42.0, GemiddeldeKM_Rit = 7, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Koekjes", WattageRecord = 33 },
                        new { Id = new Guid("d400b16a-c696-4105-b4e9-01dae83ed00c"), AantalRecords = 0, Achternaam = "Mertens", ClubId = new Guid("bea36d49-508a-41d1-9508-0209303bd5fc"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 43.0, GemiddeldeKM_Rit = 8, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 112, Voornaam = "Evelyne", WattageRecord = 34 },
                        new { Id = new Guid("2ca3a38a-a556-4626-bdb0-3b8bac945e02"), AantalRecords = 0, Achternaam = "VanHoof", ClubId = new Guid("132f1034-6f3c-4b50-ab35-c3a8c9591f76"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 44.0, GemiddeldeKM_Rit = 9, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 113, Voornaam = "Emily", WattageRecord = 35 },
                        new { Id = new Guid("33fde466-a4b4-4c7e-8c29-f218048dfaab"), AantalRecords = 0, Achternaam = "Vanderplas", ClubId = new Guid("7d8bf1e6-b435-42b6-9e19-9d1f931cac82"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 45.0, GemiddeldeKM_Rit = 10, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 114, Voornaam = "Sonja", WattageRecord = 36 },
                        new { Id = new Guid("b0835b25-abff-470b-a8ec-4229868073fc"), AantalRecords = 0, Achternaam = "Bambino", ClubId = new Guid("bea36d49-508a-41d1-9508-0209303bd5fc"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 46.0, GemiddeldeKM_Rit = 11, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 115, Voornaam = "Salvatore", WattageRecord = 37 },
                        new { Id = new Guid("75abdafc-3192-4a1e-b974-9659581b4404"), AantalRecords = 0, Achternaam = "Zalinski", ClubId = new Guid("55c66dff-692d-429d-95ae-a14a4e0b43e9"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 47.0, GemiddeldeKM_Rit = 12, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 116, Voornaam = "Wosznjeck", WattageRecord = 38 },
                        new { Id = new Guid("bd945087-4e9f-426a-903f-b930f042eb1e"), AantalRecords = 0, Achternaam = "Debruyne", ClubId = new Guid("bea36d49-508a-41d1-9508-0209303bd5fc"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 48.0, GemiddeldeKM_Rit = 13, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 117, Voornaam = "Kevin", WattageRecord = 39 },
                        new { Id = new Guid("426a1b16-5c53-4a6e-aa3d-4ffce22b2d85"), AantalRecords = 0, Achternaam = "Hazard", ClubId = new Guid("55c66dff-692d-429d-95ae-a14a4e0b43e9"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 49.0, GemiddeldeKM_Rit = 14, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 118, Voornaam = "Eden", WattageRecord = 21 },
                        new { Id = new Guid("8be76248-7ae9-4c73-a88d-9c8fd2ab0d13"), AantalRecords = 0, Achternaam = "Evenepoel", ClubId = new Guid("bea36d49-508a-41d1-9508-0209303bd5fc"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 50.0, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 119, Voornaam = "Remco", WattageRecord = 12 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Web.RecordZoeker.RecordHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<Guid>("RecordId");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<DateTime>("Timestamp");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("Id");

                    b.ToTable("RecordHistories");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Ritten")
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
