// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710224639_replaceNullInAantalRecordsTableClubsTo0")]
    partial class replaceNullInAantalRecordsTableClubsTo0
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("9dd4aee6-bd28-435b-bfd8-3fa00bfacf8e"), AantalRecords = 0, Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("ecb91ae6-e1b7-4941-a777-94ce6cc92589"), AantalRecords = 0, Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("a99471fe-df5a-4741-bf8a-25001d32f736"), AantalRecords = 0, Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("e9a29e5f-c3de-4bd1-96b4-712c99d71606"), AantalRecords = 0, Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("2fdac0a6-c7a2-4330-951e-7f94e9bf3192"), AantalRecords = 0, Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("a99471fe-df5a-4741-bf8a-25001d32f736"), SupporterId = new Guid("0a28b4cd-9901-4809-a25c-5f11415cd72d") },
                        new { ClubId = new Guid("9dd4aee6-bd28-435b-bfd8-3fa00bfacf8e"), SupporterId = new Guid("81476747-22ef-4ad1-8b20-4726f53b69dc") },
                        new { ClubId = new Guid("ecb91ae6-e1b7-4941-a777-94ce6cc92589"), SupporterId = new Guid("25c8bafa-3c6b-4a42-a310-53708001f391") },
                        new { ClubId = new Guid("a99471fe-df5a-4741-bf8a-25001d32f736"), SupporterId = new Guid("f4b9e0f7-44ba-4071-93c9-06e9abcfa32f") },
                        new { ClubId = new Guid("9dd4aee6-bd28-435b-bfd8-3fa00bfacf8e"), SupporterId = new Guid("0a28b4cd-9901-4809-a25c-5f11415cd72d") },
                        new { ClubId = new Guid("2fdac0a6-c7a2-4330-951e-7f94e9bf3192"), SupporterId = new Guid("f4b9e0f7-44ba-4071-93c9-06e9abcfa32f") },
                        new { ClubId = new Guid("e9a29e5f-c3de-4bd1-96b4-712c99d71606"), SupporterId = new Guid("81476747-22ef-4ad1-8b20-4726f53b69dc") },
                        new { ClubId = new Guid("9dd4aee6-bd28-435b-bfd8-3fa00bfacf8e"), SupporterId = new Guid("25c8bafa-3c6b-4a42-a310-53708001f391") },
                        new { ClubId = new Guid("2fdac0a6-c7a2-4330-951e-7f94e9bf3192"), SupporterId = new Guid("0a28b4cd-9901-4809-a25c-5f11415cd72d") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("81476747-22ef-4ad1-8b20-4726f53b69dc"), WielrennerId = new Guid("d58663c5-480d-4972-a1c7-41279b5629b8") },
                        new { SupporterId = new Guid("f4b9e0f7-44ba-4071-93c9-06e9abcfa32f"), WielrennerId = new Guid("c53539b6-7052-43fc-9904-43dec517109f") },
                        new { SupporterId = new Guid("81476747-22ef-4ad1-8b20-4726f53b69dc"), WielrennerId = new Guid("2ab491cd-9677-46c2-be8a-5d9b151d4536") },
                        new { SupporterId = new Guid("0a28b4cd-9901-4809-a25c-5f11415cd72d"), WielrennerId = new Guid("d58663c5-480d-4972-a1c7-41279b5629b8") },
                        new { SupporterId = new Guid("f4b9e0f7-44ba-4071-93c9-06e9abcfa32f"), WielrennerId = new Guid("8a649fc6-2c9d-48c3-99d2-01285de1b5e2") },
                        new { SupporterId = new Guid("25c8bafa-3c6b-4a42-a310-53708001f391"), WielrennerId = new Guid("c53539b6-7052-43fc-9904-43dec517109f") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("69e138a1-cda0-46c4-bd3b-7e9cd3bfc3d7"), Merk = "B-Twin", WielrennerId = new Guid("d58663c5-480d-4972-a1c7-41279b5629b8"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("70f9c5ed-ca91-4613-819d-3582c8f44d59"), Merk = "Moldava", WielrennerId = new Guid("2ab491cd-9677-46c2-be8a-5d9b151d4536"), Zadel = "Geel zadel" },
                        new { Id = new Guid("267aa54d-642d-4ee0-a0de-0ce2432da23f"), Merk = "Merckx", WielrennerId = new Guid("8a649fc6-2c9d-48c3-99d2-01285de1b5e2"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("81476747-22ef-4ad1-8b20-4726f53b69dc"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("0a28b4cd-9901-4809-a25c-5f11415cd72d"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("25c8bafa-3c6b-4a42-a310-53708001f391"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("f4b9e0f7-44ba-4071-93c9-06e9abcfa32f"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("47d04e37-4de9-4a46-9869-ea460c47f8af"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("23e640f1-2fe4-472e-8769-cee566dd3f8f"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("78b4f8c5-b7ab-48a7-a221-78e300fdbde2"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("e3192694-659d-4023-8d98-1ae0cff16581"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("6d353a6c-4815-433f-b6f0-6d3e56b5dd79"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("16297bba-af01-4512-89bf-e96382a7c16e"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("588c4892-ef3d-4226-8407-8079ca405d0e"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("4933c2eb-350b-4217-b657-a7858f5b75bd"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("8a649fc6-2c9d-48c3-99d2-01285de1b5e2"), Achternaam = "Franckaert", ClubId = new Guid("e9a29e5f-c3de-4bd1-96b4-712c99d71606"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Robin" },
                        new { Id = new Guid("d58663c5-480d-4972-a1c7-41279b5629b8"), Achternaam = "Jansma", ClubId = new Guid("9dd4aee6-bd28-435b-bfd8-3fa00bfacf8e"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 260, Voornaam = "Johanna" },
                        new { Id = new Guid("2ab491cd-9677-46c2-be8a-5d9b151d4536"), Achternaam = "Vissers", ClubId = new Guid("2fdac0a6-c7a2-4330-951e-7f94e9bf3192"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 301, Voornaam = "Bert" },
                        new { Id = new Guid("c53539b6-7052-43fc-9904-43dec517109f"), Achternaam = "Depardieu", ClubId = new Guid("2fdac0a6-c7a2-4330-951e-7f94e9bf3192"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 85, Voornaam = "Gerard" },
                        new { Id = new Guid("0c03c760-4f46-47f8-a68f-c44ca3bb4033"), Achternaam = "Van Overmeire", ClubId = new Guid("9dd4aee6-bd28-435b-bfd8-3fa00bfacf8e"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 256, Voornaam = "Marc" },
                        new { Id = new Guid("e9b5a5c2-5355-4ae9-a33c-d51359e6d87f"), Achternaam = "Camara", ClubId = new Guid("2fdac0a6-c7a2-4330-951e-7f94e9bf3192"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 504, Voornaam = "Herdy" },
                        new { Id = new Guid("59a36da6-8d4f-4402-a664-2c18626aeba2"), Achternaam = "Donckerwolcke", ClubId = new Guid("ecb91ae6-e1b7-4941-a777-94ce6cc92589"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1100, Voornaam = "Thomas" },
                        new { Id = new Guid("853223ee-ed78-4337-aa76-708402e63b47"), Achternaam = "Garnaal", ClubId = new Guid("ecb91ae6-e1b7-4941-a777-94ce6cc92589"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 250, Voornaam = "Sofie" },
                        new { Id = new Guid("4fe826ae-d931-4b35-9874-f4f7040d91a2"), Achternaam = "Brokkenpap", ClubId = new Guid("a99471fe-df5a-4741-bf8a-25001d32f736"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 125, Voornaam = "Berend" },
                        new { Id = new Guid("ed75c951-dbbd-4bbc-8240-760d2e9a399c"), Achternaam = "Mega", ClubId = new Guid("2fdac0a6-c7a2-4330-951e-7f94e9bf3192"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 568, Voornaam = "Mindy" },
                        new { Id = new Guid("a97df5a7-6d20-414f-8432-2a47fcf2a61f"), Achternaam = "Scarlet", ClubId = new Guid("ecb91ae6-e1b7-4941-a777-94ce6cc92589"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 308, Voornaam = "Johanson" },
                        new { Id = new Guid("5930de5d-cac0-4ac6-8ffb-40d712e63c64"), Achternaam = "Beukelaer", ClubId = new Guid("2fdac0a6-c7a2-4330-951e-7f94e9bf3192"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Koekjes" },
                        new { Id = new Guid("7337c55a-159e-4a9c-ab86-c2a0af7fe188"), Achternaam = "Mertens", ClubId = new Guid("9dd4aee6-bd28-435b-bfd8-3fa00bfacf8e"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Evelyne" },
                        new { Id = new Guid("bb9990a1-af16-447e-bc2f-d1592c98cca8"), Achternaam = "VanHoof", ClubId = new Guid("2fdac0a6-c7a2-4330-951e-7f94e9bf3192"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 306, Voornaam = "Emily" },
                        new { Id = new Guid("177ce8bf-7a85-4acc-9b1e-71f970777ef5"), Achternaam = "Vanderplas", ClubId = new Guid("e9a29e5f-c3de-4bd1-96b4-712c99d71606"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 59, Voornaam = "Sonja" },
                        new { Id = new Guid("7f288331-e21d-46f4-849e-7a03ce997007"), Achternaam = "Bambino", ClubId = new Guid("e9a29e5f-c3de-4bd1-96b4-712c99d71606"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 257, Voornaam = "Salvatore" },
                        new { Id = new Guid("4bece46d-cc32-4e45-8e39-c0c90773c603"), Achternaam = "Zalinski", ClubId = new Guid("2fdac0a6-c7a2-4330-951e-7f94e9bf3192"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 233, Voornaam = "Wosznjeck" },
                        new { Id = new Guid("9d1f45fc-090e-4317-9cb0-14d89d1ecf07"), Achternaam = "Debruyne", ClubId = new Guid("ecb91ae6-e1b7-4941-a777-94ce6cc92589"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 450, Voornaam = "Kevin" },
                        new { Id = new Guid("495ead54-0b1c-4c9a-a331-40c55546743a"), Achternaam = "Hazard", ClubId = new Guid("e9a29e5f-c3de-4bd1-96b4-712c99d71606"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 23, Voornaam = "Eden" },
                        new { Id = new Guid("e0d3c513-ab26-4a0e-9b4c-41d11e462ffb"), Achternaam = "Evenepoel", ClubId = new Guid("e9a29e5f-c3de-4bd1-96b4-712c99d71606"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.Property<Guid>("RecordId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("RecordId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("WielrennerRecords");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany("WielrennerRecords")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Records")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
