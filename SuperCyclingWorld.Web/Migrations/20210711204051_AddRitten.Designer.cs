// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210711204051_AddRitten")]
    partial class AddRitten
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("ce7556d5-82cd-47ad-a8f8-501e7fd1f7d3"), AantalRecords = 0, Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("7e6be5fb-2524-4b26-b350-48f9e947fe2c"), AantalRecords = 0, Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("df422ec0-1900-49f8-8b50-8423dc1224e1"), AantalRecords = 0, Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("c6aae2d6-c276-4a9b-811a-ca190df1da6a"), AantalRecords = 0, Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("971167c3-59e5-4f01-b11f-748a42ba2ac2"), AantalRecords = 0, Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("df422ec0-1900-49f8-8b50-8423dc1224e1"), SupporterId = new Guid("e24c574e-3f1e-4732-b7cc-edfca581a3e0") },
                        new { ClubId = new Guid("ce7556d5-82cd-47ad-a8f8-501e7fd1f7d3"), SupporterId = new Guid("e31b3afb-bbb9-445b-b1b4-e500f2e4edae") },
                        new { ClubId = new Guid("7e6be5fb-2524-4b26-b350-48f9e947fe2c"), SupporterId = new Guid("e31b3afb-bbb9-445b-b1b4-e500f2e4edae") },
                        new { ClubId = new Guid("df422ec0-1900-49f8-8b50-8423dc1224e1"), SupporterId = new Guid("e31b3afb-bbb9-445b-b1b4-e500f2e4edae") },
                        new { ClubId = new Guid("c6aae2d6-c276-4a9b-811a-ca190df1da6a"), SupporterId = new Guid("e31b3afb-bbb9-445b-b1b4-e500f2e4edae") },
                        new { ClubId = new Guid("971167c3-59e5-4f01-b11f-748a42ba2ac2"), SupporterId = new Guid("e31b3afb-bbb9-445b-b1b4-e500f2e4edae") },
                        new { ClubId = new Guid("7e6be5fb-2524-4b26-b350-48f9e947fe2c"), SupporterId = new Guid("0371212d-7292-40a1-a5b7-a904bebebfc3") },
                        new { ClubId = new Guid("df422ec0-1900-49f8-8b50-8423dc1224e1"), SupporterId = new Guid("be9603fc-7e3c-48ba-83ad-136caef9dafb") },
                        new { ClubId = new Guid("ce7556d5-82cd-47ad-a8f8-501e7fd1f7d3"), SupporterId = new Guid("e24c574e-3f1e-4732-b7cc-edfca581a3e0") },
                        new { ClubId = new Guid("ce7556d5-82cd-47ad-a8f8-501e7fd1f7d3"), SupporterId = new Guid("0371212d-7292-40a1-a5b7-a904bebebfc3") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("e31b3afb-bbb9-445b-b1b4-e500f2e4edae"), WielrennerId = new Guid("a8bbec33-6a66-4a65-af1a-adfd0d73bafa") },
                        new { SupporterId = new Guid("be9603fc-7e3c-48ba-83ad-136caef9dafb"), WielrennerId = new Guid("e9b1d522-da7e-48e0-a67e-3b532bedb776") },
                        new { SupporterId = new Guid("e31b3afb-bbb9-445b-b1b4-e500f2e4edae"), WielrennerId = new Guid("e3c807c0-e240-4c56-a6a3-9b32fb928f31") },
                        new { SupporterId = new Guid("e24c574e-3f1e-4732-b7cc-edfca581a3e0"), WielrennerId = new Guid("a8bbec33-6a66-4a65-af1a-adfd0d73bafa") },
                        new { SupporterId = new Guid("be9603fc-7e3c-48ba-83ad-136caef9dafb"), WielrennerId = new Guid("462ba6ff-0b47-4b7d-bcaa-eeb6a96f5faa") },
                        new { SupporterId = new Guid("0371212d-7292-40a1-a5b7-a904bebebfc3"), WielrennerId = new Guid("e9b1d522-da7e-48e0-a67e-3b532bedb776") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("8e128bd2-b8a2-44f0-8ffa-c92b90ddfc94"), Merk = "B-Twin", WielrennerId = new Guid("a8bbec33-6a66-4a65-af1a-adfd0d73bafa"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("66379c2d-7961-4d2b-a82b-6ad5f995d3e7"), Merk = "Moldava", WielrennerId = new Guid("e3c807c0-e240-4c56-a6a3-9b32fb928f31"), Zadel = "Geel zadel" },
                        new { Id = new Guid("fedf3e2c-70ae-4184-92ce-e89a89a9237b"), Merk = "Merckx", WielrennerId = new Guid("462ba6ff-0b47-4b7d-bcaa-eeb6a96f5faa"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<string>("Thropy");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aankomst");

                    b.Property<string>("Name");

                    b.Property<Guid>("PersoonId");

                    b.Property<string>("Start");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Ritten");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("e31b3afb-bbb9-445b-b1b4-e500f2e4edae"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("e24c574e-3f1e-4732-b7cc-edfca581a3e0"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("0371212d-7292-40a1-a5b7-a904bebebfc3"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("be9603fc-7e3c-48ba-83ad-136caef9dafb"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("abe4c259-5672-4988-b3fc-7d1813c6d8a0"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("2e917dea-5485-4840-8029-b64376998111"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("0d0a644b-4970-4f7f-95f4-be7edf731dd2"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("3cd1978f-87bb-4e3f-b05f-3dbfdface01d"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("220f34e6-3431-41c2-805b-fefa6975885e"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("53eb436b-65fd-4eaa-9467-3a133b57d57e"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("c89a77fe-27b5-420c-854f-47ef12c76cc6"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("5f720209-b8ee-4176-8ff5-ec29eb67cd3d"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<double>("GemiddeldKm_h");

                    b.Property<int>("GemiddeldeKM_Rit");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("462ba6ff-0b47-4b7d-bcaa-eeb6a96f5faa"), AantalRecords = 0, Achternaam = "Franckaert", ClubId = new Guid("c6aae2d6-c276-4a9b-811a-ca190df1da6a"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 15.5, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Robin" },
                        new { Id = new Guid("a8bbec33-6a66-4a65-af1a-adfd0d73bafa"), AantalRecords = 0, Achternaam = "Jansma", ClubId = new Guid("971167c3-59e5-4f01-b11f-748a42ba2ac2"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 33.8, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 260, Voornaam = "Johanna" },
                        new { Id = new Guid("e3c807c0-e240-4c56-a6a3-9b32fb928f31"), AantalRecords = 0, Achternaam = "Vissers", ClubId = new Guid("7e6be5fb-2524-4b26-b350-48f9e947fe2c"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 22.6, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 301, Voornaam = "Bert" },
                        new { Id = new Guid("e9b1d522-da7e-48e0-a67e-3b532bedb776"), AantalRecords = 0, Achternaam = "Depardieu", ClubId = new Guid("df422ec0-1900-49f8-8b50-8423dc1224e1"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.5, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 85, Voornaam = "Gerard" },
                        new { Id = new Guid("90a4e7e2-3780-4661-ac2f-27f952e29d46"), AantalRecords = 0, Achternaam = "Van Overmeire", ClubId = new Guid("c6aae2d6-c276-4a9b-811a-ca190df1da6a"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 41.5, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 256, Voornaam = "Marc" },
                        new { Id = new Guid("e02c2c68-c63b-4b89-ad8c-b86e06d551bc"), AantalRecords = 0, Achternaam = "Camara", ClubId = new Guid("971167c3-59e5-4f01-b11f-748a42ba2ac2"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.51, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 504, Voornaam = "Herdy" },
                        new { Id = new Guid("04c9e7fd-58b3-443b-a173-a942939a4437"), AantalRecords = 0, Achternaam = "Donckerwolcke", ClubId = new Guid("df422ec0-1900-49f8-8b50-8423dc1224e1"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.5, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1100, Voornaam = "Thomas" },
                        new { Id = new Guid("8839ac6c-367d-437b-8f23-bc9e48fad2a7"), AantalRecords = 0, Achternaam = "Garnaal", ClubId = new Guid("c6aae2d6-c276-4a9b-811a-ca190df1da6a"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 42.1, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 250, Voornaam = "Sofie" },
                        new { Id = new Guid("0c8bfc9c-3595-4ada-ac94-8332d7deb3d9"), AantalRecords = 0, Achternaam = "Brokkenpap", ClubId = new Guid("c6aae2d6-c276-4a9b-811a-ca190df1da6a"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.5, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 125, Voornaam = "Berend" },
                        new { Id = new Guid("fb93bc5d-2357-43d5-aa00-51267db57be4"), AantalRecords = 0, Achternaam = "Mega", ClubId = new Guid("c6aae2d6-c276-4a9b-811a-ca190df1da6a"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 42.15, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 568, Voornaam = "Mindy" },
                        new { Id = new Guid("b6cc9595-4a40-46a6-bea3-f876caeeeb98"), AantalRecords = 0, Achternaam = "Scarlet", ClubId = new Guid("c6aae2d6-c276-4a9b-811a-ca190df1da6a"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 22.5, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 308, Voornaam = "Johanson" },
                        new { Id = new Guid("d071cc77-a6ef-4ce2-9900-b207bb93ac4a"), AantalRecords = 0, Achternaam = "Beukelaer", ClubId = new Guid("df422ec0-1900-49f8-8b50-8423dc1224e1"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 23.6, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Koekjes" },
                        new { Id = new Guid("a67b65d3-1a36-4d0c-88ad-07dafbb5944c"), AantalRecords = 0, Achternaam = "Mertens", ClubId = new Guid("ce7556d5-82cd-47ad-a8f8-501e7fd1f7d3"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 22.65, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Evelyne" },
                        new { Id = new Guid("1591b0c0-305d-4939-af36-26c03c315cc4"), AantalRecords = 0, Achternaam = "VanHoof", ClubId = new Guid("ce7556d5-82cd-47ad-a8f8-501e7fd1f7d3"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 29.55, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 306, Voornaam = "Emily" },
                        new { Id = new Guid("43b53ef2-6017-4a5c-b434-6a331e8c1ec8"), AantalRecords = 0, Achternaam = "Vanderplas", ClubId = new Guid("c6aae2d6-c276-4a9b-811a-ca190df1da6a"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 33.6, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 59, Voornaam = "Sonja" },
                        new { Id = new Guid("2041a705-48a8-4f4c-bb4c-852f3ffe3b4a"), AantalRecords = 0, Achternaam = "Bambino", ClubId = new Guid("7e6be5fb-2524-4b26-b350-48f9e947fe2c"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 44.2, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 257, Voornaam = "Salvatore" },
                        new { Id = new Guid("7349e3de-e67a-4d60-842c-d3c0075b5973"), AantalRecords = 0, Achternaam = "Zalinski", ClubId = new Guid("971167c3-59e5-4f01-b11f-748a42ba2ac2"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 31.6, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 233, Voornaam = "Wosznjeck" },
                        new { Id = new Guid("33c3daa1-299c-4c30-9980-89dbed58be1f"), AantalRecords = 0, Achternaam = "Debruyne", ClubId = new Guid("ce7556d5-82cd-47ad-a8f8-501e7fd1f7d3"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 15.9, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 450, Voornaam = "Kevin" },
                        new { Id = new Guid("20566b6e-e61d-4889-9dd1-7041f7203034"), AantalRecords = 0, Achternaam = "Hazard", ClubId = new Guid("ce7556d5-82cd-47ad-a8f8-501e7fd1f7d3"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 44.2, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 23, Voornaam = "Eden" },
                        new { Id = new Guid("e7d7ddea-a483-431e-a48b-447dc7f00478"), AantalRecords = 0, Achternaam = "Evenepoel", ClubId = new Guid("971167c3-59e5-4f01-b11f-748a42ba2ac2"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 12.53, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.Property<Guid>("RecordId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("RecordId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("WielrennerRecords");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Ritten")
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany("WielrennerRecords")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Records")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
