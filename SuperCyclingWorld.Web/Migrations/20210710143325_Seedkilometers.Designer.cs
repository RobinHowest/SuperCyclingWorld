// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710143325_Seedkilometers")]
    partial class Seedkilometers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("d9e2fee0-57fe-4c15-89ad-688d6ddedcc7"), Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("f32a3812-fcb9-424a-bfd7-79ac4c859bc4"), Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("7f1bc323-3ea1-4f27-861d-7ec2de2f4e29"), Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("d181aa44-02c1-4b81-b8d4-11d0c3018e98"), Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("f1641c0a-8724-4a21-a323-ea732e1ba1fb"), Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("7f1bc323-3ea1-4f27-861d-7ec2de2f4e29"), SupporterId = new Guid("3725aa52-3949-4555-8be1-8ae7e0dfaad0") },
                        new { ClubId = new Guid("d9e2fee0-57fe-4c15-89ad-688d6ddedcc7"), SupporterId = new Guid("a0457c5f-660c-40f3-9933-1c397ef308e8") },
                        new { ClubId = new Guid("f32a3812-fcb9-424a-bfd7-79ac4c859bc4"), SupporterId = new Guid("c40073c6-7294-49fb-9834-b0fe6f72eb3e") },
                        new { ClubId = new Guid("7f1bc323-3ea1-4f27-861d-7ec2de2f4e29"), SupporterId = new Guid("42f3b2cf-182a-4238-bcc3-4a2c4d9edda6") },
                        new { ClubId = new Guid("d9e2fee0-57fe-4c15-89ad-688d6ddedcc7"), SupporterId = new Guid("3725aa52-3949-4555-8be1-8ae7e0dfaad0") },
                        new { ClubId = new Guid("f1641c0a-8724-4a21-a323-ea732e1ba1fb"), SupporterId = new Guid("42f3b2cf-182a-4238-bcc3-4a2c4d9edda6") },
                        new { ClubId = new Guid("d181aa44-02c1-4b81-b8d4-11d0c3018e98"), SupporterId = new Guid("a0457c5f-660c-40f3-9933-1c397ef308e8") },
                        new { ClubId = new Guid("d9e2fee0-57fe-4c15-89ad-688d6ddedcc7"), SupporterId = new Guid("c40073c6-7294-49fb-9834-b0fe6f72eb3e") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("a0457c5f-660c-40f3-9933-1c397ef308e8"), WielrennerId = new Guid("f2a88249-b0ad-491f-9786-5df9f0702d4a") },
                        new { SupporterId = new Guid("42f3b2cf-182a-4238-bcc3-4a2c4d9edda6"), WielrennerId = new Guid("9025fed5-041a-4af0-ad77-595b4005c444") },
                        new { SupporterId = new Guid("a0457c5f-660c-40f3-9933-1c397ef308e8"), WielrennerId = new Guid("5ffc4bce-8dd7-4424-8811-38b782a25e7e") },
                        new { SupporterId = new Guid("3725aa52-3949-4555-8be1-8ae7e0dfaad0"), WielrennerId = new Guid("f2a88249-b0ad-491f-9786-5df9f0702d4a") },
                        new { SupporterId = new Guid("42f3b2cf-182a-4238-bcc3-4a2c4d9edda6"), WielrennerId = new Guid("ef3f80eb-8d0b-4e28-83ff-1f46ffc4db4c") },
                        new { SupporterId = new Guid("c40073c6-7294-49fb-9834-b0fe6f72eb3e"), WielrennerId = new Guid("9025fed5-041a-4af0-ad77-595b4005c444") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("247f533a-6036-4d00-aaf1-093d7c0782de"), Merk = "B-Twin", WielrennerId = new Guid("f2a88249-b0ad-491f-9786-5df9f0702d4a"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("d44bb046-6e70-4c58-91bd-250c2678a3b2"), Merk = "Moldava", WielrennerId = new Guid("5ffc4bce-8dd7-4424-8811-38b782a25e7e"), Zadel = "Geel zadel" },
                        new { Id = new Guid("7d0d352b-5f39-4250-abeb-4666db975f82"), Merk = "Merckx", WielrennerId = new Guid("ef3f80eb-8d0b-4e28-83ff-1f46ffc4db4c"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("a0457c5f-660c-40f3-9933-1c397ef308e8"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("3725aa52-3949-4555-8be1-8ae7e0dfaad0"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("c40073c6-7294-49fb-9834-b0fe6f72eb3e"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("42f3b2cf-182a-4238-bcc3-4a2c4d9edda6"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("d2ae6619-823a-4ebb-89b9-a8e678722d81"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("e25a502e-daa9-420c-859e-b0a1f2cf4531"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("33febd47-887d-4bba-ab78-b845d0c627b4"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("1ec169be-9b6d-4881-821f-b970d5766697"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("de9a601f-a2d6-4e30-8516-14103a3e9e15"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("a1c832c6-5448-4581-9be7-0b6c8f2ed735"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("64e7776d-0879-4a07-ad00-e7891caee4a4"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("da3993c1-7d99-4706-9ffb-211e8321a6b6"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid?>("ClubId")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("ef3f80eb-8d0b-4e28-83ff-1f46ffc4db4c"), Achternaam = "Franckaert", ClubId = new Guid("7f1bc323-3ea1-4f27-861d-7ec2de2f4e29"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Robin" },
                        new { Id = new Guid("f2a88249-b0ad-491f-9786-5df9f0702d4a"), Achternaam = "Jansma", ClubId = new Guid("d181aa44-02c1-4b81-b8d4-11d0c3018e98"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 260, Voornaam = "Johanna" },
                        new { Id = new Guid("5ffc4bce-8dd7-4424-8811-38b782a25e7e"), Achternaam = "Vissers", ClubId = new Guid("7f1bc323-3ea1-4f27-861d-7ec2de2f4e29"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 301, Voornaam = "Bert" },
                        new { Id = new Guid("9025fed5-041a-4af0-ad77-595b4005c444"), Achternaam = "Depardieu", ClubId = new Guid("f32a3812-fcb9-424a-bfd7-79ac4c859bc4"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 85, Voornaam = "Gerard" },
                        new { Id = new Guid("deaf9bbc-e6ba-4598-87fa-9728221fbe04"), Achternaam = "Van Overmeire", ClubId = new Guid("7f1bc323-3ea1-4f27-861d-7ec2de2f4e29"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 256, Voornaam = "Marc" },
                        new { Id = new Guid("87623e5c-8adb-44f1-9f6b-597776179162"), Achternaam = "Camara", ClubId = new Guid("d181aa44-02c1-4b81-b8d4-11d0c3018e98"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 504, Voornaam = "Herdy" },
                        new { Id = new Guid("e49c5cf8-aeee-4cae-868b-6e70ff0c62cc"), Achternaam = "Donckerwolcke", ClubId = new Guid("d9e2fee0-57fe-4c15-89ad-688d6ddedcc7"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1100, Voornaam = "Thomas" },
                        new { Id = new Guid("8727013c-57d2-4384-9f50-ab13f34aaac0"), Achternaam = "Garnaal", ClubId = new Guid("f32a3812-fcb9-424a-bfd7-79ac4c859bc4"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 250, Voornaam = "Sofie" },
                        new { Id = new Guid("3eef1b01-bf58-4423-a9f1-71caa852cfb2"), Achternaam = "Brokkenpap", ClubId = new Guid("f32a3812-fcb9-424a-bfd7-79ac4c859bc4"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 125, Voornaam = "Berend" },
                        new { Id = new Guid("7f0aa36c-d185-4804-9242-21972bb7277b"), Achternaam = "Mega", ClubId = new Guid("d181aa44-02c1-4b81-b8d4-11d0c3018e98"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 568, Voornaam = "Mindy" },
                        new { Id = new Guid("13feac95-61d2-4de0-9934-fa32a5aa9aee"), Achternaam = "Scarlet", ClubId = new Guid("7f1bc323-3ea1-4f27-861d-7ec2de2f4e29"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 308, Voornaam = "Johanson" },
                        new { Id = new Guid("7b8fa465-8b84-4041-a675-d50acd41ba25"), Achternaam = "Beukelaer", ClubId = new Guid("7f1bc323-3ea1-4f27-861d-7ec2de2f4e29"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Koekjes" },
                        new { Id = new Guid("0c7a7d3b-bc45-4f8d-8109-4a57597dd69c"), Achternaam = "Mertens", ClubId = new Guid("f32a3812-fcb9-424a-bfd7-79ac4c859bc4"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Evelyne" },
                        new { Id = new Guid("f1332ece-f5bd-4f8b-837e-c53d0d883e23"), Achternaam = "VanHoof", ClubId = new Guid("d9e2fee0-57fe-4c15-89ad-688d6ddedcc7"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 306, Voornaam = "Emily" },
                        new { Id = new Guid("102b3188-f86b-4d37-9465-56814bfbb517"), Achternaam = "Vanderplas", ClubId = new Guid("f32a3812-fcb9-424a-bfd7-79ac4c859bc4"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 59, Voornaam = "Sonja" },
                        new { Id = new Guid("e640ad42-89de-4e59-982e-c11ba5baca5d"), Achternaam = "Bambino", ClubId = new Guid("d181aa44-02c1-4b81-b8d4-11d0c3018e98"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 257, Voornaam = "Salvatore" },
                        new { Id = new Guid("488a5f51-53a0-4b07-bd25-1ca1e9a6796d"), Achternaam = "Zalinski", ClubId = new Guid("7f1bc323-3ea1-4f27-861d-7ec2de2f4e29"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 233, Voornaam = "Wosznjeck" },
                        new { Id = new Guid("9cca39e5-4443-4b37-b0eb-d949d818867c"), Achternaam = "Debruyne", ClubId = new Guid("d9e2fee0-57fe-4c15-89ad-688d6ddedcc7"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 450, Voornaam = "Kevin" },
                        new { Id = new Guid("b6373340-ef61-4614-8862-e413b726e5c9"), Achternaam = "Hazard", ClubId = new Guid("d9e2fee0-57fe-4c15-89ad-688d6ddedcc7"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 23, Voornaam = "Eden" },
                        new { Id = new Guid("81be58ea-e56e-4197-990d-178f44ec9f30"), Achternaam = "Evenepoel", ClubId = new Guid("d181aa44-02c1-4b81-b8d4-11d0c3018e98"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.Property<Guid>("RecordId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("RecordId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("WielrennerRecords");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany("WielrennerRecords")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Records")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
