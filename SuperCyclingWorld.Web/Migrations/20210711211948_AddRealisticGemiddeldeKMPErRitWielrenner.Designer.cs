// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210711211948_AddRealisticGemiddeldeKMPErRitWielrenner")]
    partial class AddRealisticGemiddeldeKMPErRitWielrenner
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("c4bb7267-7362-44a4-b4c6-9996f88554e7"), AantalRecords = 0, Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("475a6579-5042-4180-91bd-048aecf84150"), AantalRecords = 0, Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("6e030d6a-2fe0-493e-b5e4-996a8bc91f90"), AantalRecords = 0, Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("26efe7b5-da82-4a1b-9727-72a9b24f4e2e"), AantalRecords = 0, Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("3dc9b764-78e9-486c-9d4f-4a20b5ccd489"), AantalRecords = 0, Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("6e030d6a-2fe0-493e-b5e4-996a8bc91f90"), SupporterId = new Guid("290c9bb1-a8af-4296-ab25-ef64557b72cc") },
                        new { ClubId = new Guid("c4bb7267-7362-44a4-b4c6-9996f88554e7"), SupporterId = new Guid("5489c933-f7f6-4c4b-8640-cd6dbce82475") },
                        new { ClubId = new Guid("475a6579-5042-4180-91bd-048aecf84150"), SupporterId = new Guid("5489c933-f7f6-4c4b-8640-cd6dbce82475") },
                        new { ClubId = new Guid("6e030d6a-2fe0-493e-b5e4-996a8bc91f90"), SupporterId = new Guid("5489c933-f7f6-4c4b-8640-cd6dbce82475") },
                        new { ClubId = new Guid("26efe7b5-da82-4a1b-9727-72a9b24f4e2e"), SupporterId = new Guid("5489c933-f7f6-4c4b-8640-cd6dbce82475") },
                        new { ClubId = new Guid("3dc9b764-78e9-486c-9d4f-4a20b5ccd489"), SupporterId = new Guid("5489c933-f7f6-4c4b-8640-cd6dbce82475") },
                        new { ClubId = new Guid("475a6579-5042-4180-91bd-048aecf84150"), SupporterId = new Guid("c22ccfea-db4c-44d9-9d5c-04a31cec25be") },
                        new { ClubId = new Guid("6e030d6a-2fe0-493e-b5e4-996a8bc91f90"), SupporterId = new Guid("ebee3857-3c33-4296-afb6-cb091cea53e3") },
                        new { ClubId = new Guid("c4bb7267-7362-44a4-b4c6-9996f88554e7"), SupporterId = new Guid("290c9bb1-a8af-4296-ab25-ef64557b72cc") },
                        new { ClubId = new Guid("c4bb7267-7362-44a4-b4c6-9996f88554e7"), SupporterId = new Guid("c22ccfea-db4c-44d9-9d5c-04a31cec25be") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("5489c933-f7f6-4c4b-8640-cd6dbce82475"), WielrennerId = new Guid("889c0085-a089-4d1b-8eb2-6e9e58588f19") },
                        new { SupporterId = new Guid("ebee3857-3c33-4296-afb6-cb091cea53e3"), WielrennerId = new Guid("49d14838-ffc6-4703-8750-8c348a4f7158") },
                        new { SupporterId = new Guid("5489c933-f7f6-4c4b-8640-cd6dbce82475"), WielrennerId = new Guid("2a3d9a40-6169-4b19-81e4-92bacff8c2b7") },
                        new { SupporterId = new Guid("290c9bb1-a8af-4296-ab25-ef64557b72cc"), WielrennerId = new Guid("889c0085-a089-4d1b-8eb2-6e9e58588f19") },
                        new { SupporterId = new Guid("ebee3857-3c33-4296-afb6-cb091cea53e3"), WielrennerId = new Guid("d5493c36-199f-402c-8308-8322a36f5e9b") },
                        new { SupporterId = new Guid("c22ccfea-db4c-44d9-9d5c-04a31cec25be"), WielrennerId = new Guid("49d14838-ffc6-4703-8750-8c348a4f7158") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("28907c6e-11d7-4762-a896-d5cec214e5fa"), Merk = "B-Twin", WielrennerId = new Guid("889c0085-a089-4d1b-8eb2-6e9e58588f19"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("dc84b8aa-a218-4186-ba32-4a781498fb24"), Merk = "Moldava", WielrennerId = new Guid("2a3d9a40-6169-4b19-81e4-92bacff8c2b7"), Zadel = "Geel zadel" },
                        new { Id = new Guid("e0a7f632-ffd9-4f50-ad99-17c73fd00008"), Merk = "Merckx", WielrennerId = new Guid("d5493c36-199f-402c-8308-8322a36f5e9b"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<string>("Thropy");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aankomst");

                    b.Property<string>("Name");

                    b.Property<Guid>("PersoonId");

                    b.Property<string>("Start");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Ritten");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("5489c933-f7f6-4c4b-8640-cd6dbce82475"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("290c9bb1-a8af-4296-ab25-ef64557b72cc"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("c22ccfea-db4c-44d9-9d5c-04a31cec25be"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("ebee3857-3c33-4296-afb6-cb091cea53e3"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("fe899789-f7e3-49a0-ac3b-8451cfad705c"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("d8629184-3f4e-44ff-9ff4-b86aa4d31cc9"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("7eef6c44-c72e-4e48-8b21-b64ba31c1849"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("12482812-c703-429a-8905-5d736489b4f6"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("a1dcf9aa-7145-4716-924d-62a764c56868"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("7354dd50-de79-4ec6-b8b5-48622b93367c"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("00853906-07a3-41f6-9dec-bb5193bf6813"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("e355e6e3-ec25-46d6-a889-2f2f67448d13"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<double>("GemiddeldKm_h");

                    b.Property<int>("GemiddeldeKM_Rit");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("d5493c36-199f-402c-8308-8322a36f5e9b"), AantalRecords = 0, Achternaam = "Franckaert", ClubId = new Guid("3dc9b764-78e9-486c-9d4f-4a20b5ccd489"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 15.5, GemiddeldeKM_Rit = 110, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Robin" },
                        new { Id = new Guid("889c0085-a089-4d1b-8eb2-6e9e58588f19"), AantalRecords = 0, Achternaam = "Jansma", ClubId = new Guid("26efe7b5-da82-4a1b-9727-72a9b24f4e2e"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 33.8, GemiddeldeKM_Rit = 203, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 260, Voornaam = "Johanna" },
                        new { Id = new Guid("2a3d9a40-6169-4b19-81e4-92bacff8c2b7"), AantalRecords = 0, Achternaam = "Vissers", ClubId = new Guid("475a6579-5042-4180-91bd-048aecf84150"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 22.6, GemiddeldeKM_Rit = 150, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 301, Voornaam = "Bert" },
                        new { Id = new Guid("49d14838-ffc6-4703-8750-8c348a4f7158"), AantalRecords = 0, Achternaam = "Depardieu", ClubId = new Guid("475a6579-5042-4180-91bd-048aecf84150"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.5, GemiddeldeKM_Rit = 206, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 85, Voornaam = "Gerard" },
                        new { Id = new Guid("ef90cca0-cdc7-4668-a9e6-237437ab1401"), AantalRecords = 0, Achternaam = "Van Overmeire", ClubId = new Guid("475a6579-5042-4180-91bd-048aecf84150"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 41.5, GemiddeldeKM_Rit = 190, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 256, Voornaam = "Marc" },
                        new { Id = new Guid("c9e4671a-f264-47b8-9ef2-7b2e7e833763"), AantalRecords = 0, Achternaam = "Camara", ClubId = new Guid("c4bb7267-7362-44a4-b4c6-9996f88554e7"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.51, GemiddeldeKM_Rit = 156, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 504, Voornaam = "Herdy" },
                        new { Id = new Guid("005390b5-ec27-49b3-9f8e-25d8495fccba"), AantalRecords = 0, Achternaam = "Donckerwolcke", ClubId = new Guid("3dc9b764-78e9-486c-9d4f-4a20b5ccd489"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.5, GemiddeldeKM_Rit = 202, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1100, Voornaam = "Thomas" },
                        new { Id = new Guid("1a271d48-45f3-48c7-a6a2-224092f1b852"), AantalRecords = 0, Achternaam = "Garnaal", ClubId = new Guid("26efe7b5-da82-4a1b-9727-72a9b24f4e2e"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 42.1, GemiddeldeKM_Rit = 166, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 250, Voornaam = "Sofie" },
                        new { Id = new Guid("bd54483b-f3cf-42bb-a0d0-6d124b543cf9"), AantalRecords = 0, Achternaam = "Brokkenpap", ClubId = new Guid("3dc9b764-78e9-486c-9d4f-4a20b5ccd489"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 20.5, GemiddeldeKM_Rit = 185, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 125, Voornaam = "Berend" },
                        new { Id = new Guid("ff86f8ea-2d90-4f8e-afb7-68ece7ef839e"), AantalRecords = 0, Achternaam = "Mega", ClubId = new Guid("3dc9b764-78e9-486c-9d4f-4a20b5ccd489"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 42.15, GemiddeldeKM_Rit = 230, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 568, Voornaam = "Mindy" },
                        new { Id = new Guid("bc1c6ac2-dfc7-44c7-abd3-00b34e4fb202"), AantalRecords = 0, Achternaam = "Scarlet", ClubId = new Guid("c4bb7267-7362-44a4-b4c6-9996f88554e7"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 22.5, GemiddeldeKM_Rit = 111, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 308, Voornaam = "Johanson" },
                        new { Id = new Guid("12cce350-3fe5-4ccd-b4eb-5f3158741918"), AantalRecords = 0, Achternaam = "Beukelaer", ClubId = new Guid("3dc9b764-78e9-486c-9d4f-4a20b5ccd489"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 23.6, GemiddeldeKM_Rit = 232, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Koekjes" },
                        new { Id = new Guid("5aaa0ea9-615a-4f37-9360-78c804954516"), AantalRecords = 0, Achternaam = "Mertens", ClubId = new Guid("c4bb7267-7362-44a4-b4c6-9996f88554e7"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 22.65, GemiddeldeKM_Rit = 155, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Evelyne" },
                        new { Id = new Guid("77cf6ee3-3447-439b-a8d9-1abfd9e88d11"), AantalRecords = 0, Achternaam = "VanHoof", ClubId = new Guid("c4bb7267-7362-44a4-b4c6-9996f88554e7"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 29.55, GemiddeldeKM_Rit = 136, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 306, Voornaam = "Emily" },
                        new { Id = new Guid("f611a518-938b-43b5-a50d-afd9158ea73e"), AantalRecords = 0, Achternaam = "Vanderplas", ClubId = new Guid("6e030d6a-2fe0-493e-b5e4-996a8bc91f90"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 33.6, GemiddeldeKM_Rit = 163, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 59, Voornaam = "Sonja" },
                        new { Id = new Guid("0e065e22-eccb-4eea-9e93-1b4e98b3cd1e"), AantalRecords = 0, Achternaam = "Bambino", ClubId = new Guid("c4bb7267-7362-44a4-b4c6-9996f88554e7"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 44.2, GemiddeldeKM_Rit = 159, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 257, Voornaam = "Salvatore" },
                        new { Id = new Guid("3a8a41b3-4baa-49f5-b9f5-c947e511b4e4"), AantalRecords = 0, Achternaam = "Zalinski", ClubId = new Guid("26efe7b5-da82-4a1b-9727-72a9b24f4e2e"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 31.6, GemiddeldeKM_Rit = 174, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 233, Voornaam = "Wosznjeck" },
                        new { Id = new Guid("71f413ab-f6f5-43d6-99f0-2c6dabf015e7"), AantalRecords = 0, Achternaam = "Debruyne", ClubId = new Guid("3dc9b764-78e9-486c-9d4f-4a20b5ccd489"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 15.9, GemiddeldeKM_Rit = 165, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 450, Voornaam = "Kevin" },
                        new { Id = new Guid("2fcb0f34-71a9-4dc2-a160-d5436802e479"), AantalRecords = 0, Achternaam = "Hazard", ClubId = new Guid("26efe7b5-da82-4a1b-9727-72a9b24f4e2e"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 44.2, GemiddeldeKM_Rit = 166, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 23, Voornaam = "Eden" },
                        new { Id = new Guid("22bd0d9a-acb0-4a6f-b7ce-a86027a6076c"), AantalRecords = 0, Achternaam = "Evenepoel", ClubId = new Guid("475a6579-5042-4180-91bd-048aecf84150"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 12.53, GemiddeldeKM_Rit = 166, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.Property<Guid>("RecordId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("RecordId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("WielrennerRecords");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Ritten")
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany("WielrennerRecords")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Records")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
