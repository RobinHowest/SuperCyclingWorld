// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710233420_NewSeedLinkClubAndSupporterTestLink")]
    partial class NewSeedLinkClubAndSupporterTestLink
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("f3479a57-9075-4c49-815e-7061cdf2ad10"), AantalRecords = 0, Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("895d9fee-29d0-45c3-ae1a-44ecc7a45dea"), AantalRecords = 0, Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("fe4c6c97-7507-42a4-a3cb-8094a4c68cb8"), AantalRecords = 0, Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("0658c3e5-7e8d-4dd6-afad-fc97060ab561"), AantalRecords = 0, Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("be1279c1-c6f0-4097-8fc2-bbdeb1e67908"), AantalRecords = 0, Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("fe4c6c97-7507-42a4-a3cb-8094a4c68cb8"), SupporterId = new Guid("e8da2a01-f5af-4e6c-b5a7-dd68ae811211") },
                        new { ClubId = new Guid("f3479a57-9075-4c49-815e-7061cdf2ad10"), SupporterId = new Guid("dc282bd8-d3bd-4ab7-802a-e26943a9216b") },
                        new { ClubId = new Guid("895d9fee-29d0-45c3-ae1a-44ecc7a45dea"), SupporterId = new Guid("1a629dd5-8b60-4bce-8f05-d4ed951198bd") },
                        new { ClubId = new Guid("fe4c6c97-7507-42a4-a3cb-8094a4c68cb8"), SupporterId = new Guid("1c833a1d-3e60-4ae8-b5b0-40102bb70cab") },
                        new { ClubId = new Guid("f3479a57-9075-4c49-815e-7061cdf2ad10"), SupporterId = new Guid("e8da2a01-f5af-4e6c-b5a7-dd68ae811211") },
                        new { ClubId = new Guid("be1279c1-c6f0-4097-8fc2-bbdeb1e67908"), SupporterId = new Guid("1c833a1d-3e60-4ae8-b5b0-40102bb70cab") },
                        new { ClubId = new Guid("0658c3e5-7e8d-4dd6-afad-fc97060ab561"), SupporterId = new Guid("dc282bd8-d3bd-4ab7-802a-e26943a9216b") },
                        new { ClubId = new Guid("f3479a57-9075-4c49-815e-7061cdf2ad10"), SupporterId = new Guid("1a629dd5-8b60-4bce-8f05-d4ed951198bd") },
                        new { ClubId = new Guid("be1279c1-c6f0-4097-8fc2-bbdeb1e67908"), SupporterId = new Guid("e8da2a01-f5af-4e6c-b5a7-dd68ae811211") },
                        new { ClubId = new Guid("be1279c1-c6f0-4097-8fc2-bbdeb1e67908"), SupporterId = new Guid("dc282bd8-d3bd-4ab7-802a-e26943a9216b") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("dc282bd8-d3bd-4ab7-802a-e26943a9216b"), WielrennerId = new Guid("97eae049-a3db-419f-9988-51a025851bdf") },
                        new { SupporterId = new Guid("1c833a1d-3e60-4ae8-b5b0-40102bb70cab"), WielrennerId = new Guid("0e1b3078-48fd-4858-be95-a165893af4fb") },
                        new { SupporterId = new Guid("dc282bd8-d3bd-4ab7-802a-e26943a9216b"), WielrennerId = new Guid("94fcc1b9-cd4b-420c-b472-36195e3f09a2") },
                        new { SupporterId = new Guid("e8da2a01-f5af-4e6c-b5a7-dd68ae811211"), WielrennerId = new Guid("97eae049-a3db-419f-9988-51a025851bdf") },
                        new { SupporterId = new Guid("1c833a1d-3e60-4ae8-b5b0-40102bb70cab"), WielrennerId = new Guid("277cc112-0e49-4036-b7d9-a53b9e80e8aa") },
                        new { SupporterId = new Guid("1a629dd5-8b60-4bce-8f05-d4ed951198bd"), WielrennerId = new Guid("0e1b3078-48fd-4858-be95-a165893af4fb") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("30322374-1319-4b9f-b9f9-e557eedfca40"), Merk = "B-Twin", WielrennerId = new Guid("97eae049-a3db-419f-9988-51a025851bdf"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("6122db57-9544-4efb-935f-7138a1a723d8"), Merk = "Moldava", WielrennerId = new Guid("94fcc1b9-cd4b-420c-b472-36195e3f09a2"), Zadel = "Geel zadel" },
                        new { Id = new Guid("bb6ac65c-2a35-430c-a22e-9b44c07a5d94"), Merk = "Merckx", WielrennerId = new Guid("277cc112-0e49-4036-b7d9-a53b9e80e8aa"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("dc282bd8-d3bd-4ab7-802a-e26943a9216b"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("e8da2a01-f5af-4e6c-b5a7-dd68ae811211"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("1a629dd5-8b60-4bce-8f05-d4ed951198bd"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("1c833a1d-3e60-4ae8-b5b0-40102bb70cab"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("a868f236-eb75-4c22-bdc7-df1cd35a0e25"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("62d72360-960c-4d7c-9a60-e2e453c20a3a"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("b1d69ae7-6944-43aa-aa8d-f57119649c9e"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("543e6606-6e86-4531-88ca-1d40f53cdbbb"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("925fa4a8-66fa-4a0d-bafb-ffd9a768d00d"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("c7c50059-733e-400a-baca-05deeda0ee5c"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("43580eb5-2bab-4b18-8ecf-00c36359a390"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("38e79f1b-104d-4330-bb18-196338b39961"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("277cc112-0e49-4036-b7d9-a53b9e80e8aa"), Achternaam = "Franckaert", ClubId = new Guid("fe4c6c97-7507-42a4-a3cb-8094a4c68cb8"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Robin" },
                        new { Id = new Guid("97eae049-a3db-419f-9988-51a025851bdf"), Achternaam = "Jansma", ClubId = new Guid("895d9fee-29d0-45c3-ae1a-44ecc7a45dea"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 260, Voornaam = "Johanna" },
                        new { Id = new Guid("94fcc1b9-cd4b-420c-b472-36195e3f09a2"), Achternaam = "Vissers", ClubId = new Guid("0658c3e5-7e8d-4dd6-afad-fc97060ab561"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 301, Voornaam = "Bert" },
                        new { Id = new Guid("0e1b3078-48fd-4858-be95-a165893af4fb"), Achternaam = "Depardieu", ClubId = new Guid("be1279c1-c6f0-4097-8fc2-bbdeb1e67908"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 85, Voornaam = "Gerard" },
                        new { Id = new Guid("c97dda4e-fff0-4b35-b676-ea4192768dc7"), Achternaam = "Van Overmeire", ClubId = new Guid("f3479a57-9075-4c49-815e-7061cdf2ad10"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 256, Voornaam = "Marc" },
                        new { Id = new Guid("8b0e1450-b57a-4076-a1fc-a3419fa13a94"), Achternaam = "Camara", ClubId = new Guid("f3479a57-9075-4c49-815e-7061cdf2ad10"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 504, Voornaam = "Herdy" },
                        new { Id = new Guid("1e6a37ff-fb9c-4cc1-a9b0-d51c2a3f03e2"), Achternaam = "Donckerwolcke", ClubId = new Guid("be1279c1-c6f0-4097-8fc2-bbdeb1e67908"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1100, Voornaam = "Thomas" },
                        new { Id = new Guid("140bd296-576d-4b4d-9627-c1c3dd8afa52"), Achternaam = "Garnaal", ClubId = new Guid("be1279c1-c6f0-4097-8fc2-bbdeb1e67908"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 250, Voornaam = "Sofie" },
                        new { Id = new Guid("3700bb24-cf66-47ea-b0fb-ee6e8ef15ca0"), Achternaam = "Brokkenpap", ClubId = new Guid("fe4c6c97-7507-42a4-a3cb-8094a4c68cb8"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 125, Voornaam = "Berend" },
                        new { Id = new Guid("63a74f96-11da-4087-b5f1-0dd2e4cce760"), Achternaam = "Mega", ClubId = new Guid("f3479a57-9075-4c49-815e-7061cdf2ad10"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 568, Voornaam = "Mindy" },
                        new { Id = new Guid("a30718a8-9943-485e-ba96-9e9ba37f9340"), Achternaam = "Scarlet", ClubId = new Guid("895d9fee-29d0-45c3-ae1a-44ecc7a45dea"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 308, Voornaam = "Johanson" },
                        new { Id = new Guid("fdac2b86-3bd7-406b-bdb3-4ab70b232374"), Achternaam = "Beukelaer", ClubId = new Guid("fe4c6c97-7507-42a4-a3cb-8094a4c68cb8"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Koekjes" },
                        new { Id = new Guid("18e49739-f643-49e3-a99f-6aad33d20867"), Achternaam = "Mertens", ClubId = new Guid("895d9fee-29d0-45c3-ae1a-44ecc7a45dea"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Evelyne" },
                        new { Id = new Guid("e7ae4a4c-272b-4c76-a86c-e0471a87ce1f"), Achternaam = "VanHoof", ClubId = new Guid("fe4c6c97-7507-42a4-a3cb-8094a4c68cb8"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 306, Voornaam = "Emily" },
                        new { Id = new Guid("50c9a0a3-5397-4266-a384-d01c0069780a"), Achternaam = "Vanderplas", ClubId = new Guid("0658c3e5-7e8d-4dd6-afad-fc97060ab561"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 59, Voornaam = "Sonja" },
                        new { Id = new Guid("3b4e80ba-9abb-43d3-8d7c-5aadbcf803e6"), Achternaam = "Bambino", ClubId = new Guid("f3479a57-9075-4c49-815e-7061cdf2ad10"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 257, Voornaam = "Salvatore" },
                        new { Id = new Guid("cc64df3b-3e86-4305-9802-a8d27f92fd32"), Achternaam = "Zalinski", ClubId = new Guid("fe4c6c97-7507-42a4-a3cb-8094a4c68cb8"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 233, Voornaam = "Wosznjeck" },
                        new { Id = new Guid("a466b2c5-6ee3-4fd5-8a9f-93a537240d3e"), Achternaam = "Debruyne", ClubId = new Guid("be1279c1-c6f0-4097-8fc2-bbdeb1e67908"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 450, Voornaam = "Kevin" },
                        new { Id = new Guid("a749db73-5685-4ca0-988b-66542f682867"), Achternaam = "Hazard", ClubId = new Guid("be1279c1-c6f0-4097-8fc2-bbdeb1e67908"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 23, Voornaam = "Eden" },
                        new { Id = new Guid("ff3989a6-91d0-41c9-966b-268992751ec6"), Achternaam = "Evenepoel", ClubId = new Guid("0658c3e5-7e8d-4dd6-afad-fc97060ab561"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.Property<Guid>("RecordId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("RecordId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("WielrennerRecords");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany("WielrennerRecords")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Records")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
