// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710162822_AddLittletestSeeding2")]
    partial class AddLittletestSeeding2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("4970a64d-32d6-49a1-9f79-18556310f440"), Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("9043158c-7c67-4bab-aa60-1ac6f92d3945"), Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("2f17ac7e-e2f2-416e-ba3d-f146bc787366"), Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("1ceae862-e828-41dd-9289-b0a022cdf061"), Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("3f6a34ad-ceac-474d-9f97-4a39c2861326"), Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("2f17ac7e-e2f2-416e-ba3d-f146bc787366"), SupporterId = new Guid("6f9c152a-7369-4261-89f9-4eb53856888c") },
                        new { ClubId = new Guid("4970a64d-32d6-49a1-9f79-18556310f440"), SupporterId = new Guid("3c2c35df-7b46-465b-8c5a-75aa66156969") },
                        new { ClubId = new Guid("9043158c-7c67-4bab-aa60-1ac6f92d3945"), SupporterId = new Guid("82234998-22b7-4f4b-8108-d7dea256d508") },
                        new { ClubId = new Guid("2f17ac7e-e2f2-416e-ba3d-f146bc787366"), SupporterId = new Guid("a702f1c5-2012-4ca8-af75-0a1e7c745708") },
                        new { ClubId = new Guid("4970a64d-32d6-49a1-9f79-18556310f440"), SupporterId = new Guid("6f9c152a-7369-4261-89f9-4eb53856888c") },
                        new { ClubId = new Guid("3f6a34ad-ceac-474d-9f97-4a39c2861326"), SupporterId = new Guid("a702f1c5-2012-4ca8-af75-0a1e7c745708") },
                        new { ClubId = new Guid("1ceae862-e828-41dd-9289-b0a022cdf061"), SupporterId = new Guid("3c2c35df-7b46-465b-8c5a-75aa66156969") },
                        new { ClubId = new Guid("4970a64d-32d6-49a1-9f79-18556310f440"), SupporterId = new Guid("82234998-22b7-4f4b-8108-d7dea256d508") },
                        new { ClubId = new Guid("3f6a34ad-ceac-474d-9f97-4a39c2861326"), SupporterId = new Guid("6f9c152a-7369-4261-89f9-4eb53856888c") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("3c2c35df-7b46-465b-8c5a-75aa66156969"), WielrennerId = new Guid("1c630941-1fb2-477e-9649-5857bb465e5a") },
                        new { SupporterId = new Guid("a702f1c5-2012-4ca8-af75-0a1e7c745708"), WielrennerId = new Guid("ff068a9b-ec6f-4972-951f-65ddf0be1e61") },
                        new { SupporterId = new Guid("3c2c35df-7b46-465b-8c5a-75aa66156969"), WielrennerId = new Guid("28ccd503-e5dd-46ab-9950-bddb20fad557") },
                        new { SupporterId = new Guid("6f9c152a-7369-4261-89f9-4eb53856888c"), WielrennerId = new Guid("1c630941-1fb2-477e-9649-5857bb465e5a") },
                        new { SupporterId = new Guid("a702f1c5-2012-4ca8-af75-0a1e7c745708"), WielrennerId = new Guid("991edbe2-eea4-4421-a8cf-a5bf23851ab2") },
                        new { SupporterId = new Guid("82234998-22b7-4f4b-8108-d7dea256d508"), WielrennerId = new Guid("ff068a9b-ec6f-4972-951f-65ddf0be1e61") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("c6c0344d-9fce-44da-91de-7f7278f9eb4b"), Merk = "B-Twin", WielrennerId = new Guid("1c630941-1fb2-477e-9649-5857bb465e5a"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("d588a55b-8024-4e60-a0da-c994c2f0d53e"), Merk = "Moldava", WielrennerId = new Guid("28ccd503-e5dd-46ab-9950-bddb20fad557"), Zadel = "Geel zadel" },
                        new { Id = new Guid("f8162a50-8e22-48b6-b0ea-ffcef4274c28"), Merk = "Merckx", WielrennerId = new Guid("991edbe2-eea4-4421-a8cf-a5bf23851ab2"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("3c2c35df-7b46-465b-8c5a-75aa66156969"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("6f9c152a-7369-4261-89f9-4eb53856888c"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("82234998-22b7-4f4b-8108-d7dea256d508"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("a702f1c5-2012-4ca8-af75-0a1e7c745708"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("dd4a15e9-10c7-4423-8c46-cdb3f7a63dc0"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("a1bed1fd-37ee-4a66-bf6c-fef4a5ef92d6"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("9a2745be-bd0b-4137-80dc-6a8c08ea7e6b"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("c2776fd7-6e6f-4009-ad20-05595cd3a2f4"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("3f916b16-54f7-4d6d-b484-507783da5853"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("97de10eb-c741-4956-9119-8d5ccd34e576"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("0676c2c1-995c-42a7-a0a3-970a60826be8"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("45ed9e4c-0f85-4a36-84d4-ce790dc97084"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("991edbe2-eea4-4421-a8cf-a5bf23851ab2"), Achternaam = "Franckaert", ClubId = new Guid("9043158c-7c67-4bab-aa60-1ac6f92d3945"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Robin" },
                        new { Id = new Guid("1c630941-1fb2-477e-9649-5857bb465e5a"), Achternaam = "Jansma", ClubId = new Guid("9043158c-7c67-4bab-aa60-1ac6f92d3945"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 260, Voornaam = "Johanna" },
                        new { Id = new Guid("28ccd503-e5dd-46ab-9950-bddb20fad557"), Achternaam = "Vissers", ClubId = new Guid("3f6a34ad-ceac-474d-9f97-4a39c2861326"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 301, Voornaam = "Bert" },
                        new { Id = new Guid("ff068a9b-ec6f-4972-951f-65ddf0be1e61"), Achternaam = "Depardieu", ClubId = new Guid("2f17ac7e-e2f2-416e-ba3d-f146bc787366"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 85, Voornaam = "Gerard" },
                        new { Id = new Guid("af34b235-9552-474f-b3ae-14195f68ed7d"), Achternaam = "Van Overmeire", ClubId = new Guid("2f17ac7e-e2f2-416e-ba3d-f146bc787366"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 256, Voornaam = "Marc" },
                        new { Id = new Guid("d88b53ed-bc61-4ecf-97e5-cc3b919f310a"), Achternaam = "Camara", ClubId = new Guid("4970a64d-32d6-49a1-9f79-18556310f440"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 504, Voornaam = "Herdy" },
                        new { Id = new Guid("6df7252b-b702-4d9c-93c7-8fd34ff98dcf"), Achternaam = "Donckerwolcke", ClubId = new Guid("1ceae862-e828-41dd-9289-b0a022cdf061"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1100, Voornaam = "Thomas" },
                        new { Id = new Guid("4c4195a5-e2a3-46e7-aa6d-1e5625946d0f"), Achternaam = "Garnaal", ClubId = new Guid("3f6a34ad-ceac-474d-9f97-4a39c2861326"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 250, Voornaam = "Sofie" },
                        new { Id = new Guid("5d05e90c-eeb0-458c-9e24-ca5a8d7fd460"), Achternaam = "Brokkenpap", ClubId = new Guid("4970a64d-32d6-49a1-9f79-18556310f440"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 125, Voornaam = "Berend" },
                        new { Id = new Guid("cb0b938e-a0d7-4626-96ef-a68d4ce34f1c"), Achternaam = "Mega", ClubId = new Guid("9043158c-7c67-4bab-aa60-1ac6f92d3945"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 568, Voornaam = "Mindy" },
                        new { Id = new Guid("b8f6b1d3-1793-46ad-b2da-4bedee397e7e"), Achternaam = "Scarlet", ClubId = new Guid("2f17ac7e-e2f2-416e-ba3d-f146bc787366"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 308, Voornaam = "Johanson" },
                        new { Id = new Guid("ef8e14df-2e22-4ef3-a729-396b054cbaaa"), Achternaam = "Beukelaer", ClubId = new Guid("1ceae862-e828-41dd-9289-b0a022cdf061"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Koekjes" },
                        new { Id = new Guid("92931377-a9c9-437c-8a24-11ad1dea5208"), Achternaam = "Mertens", ClubId = new Guid("1ceae862-e828-41dd-9289-b0a022cdf061"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Evelyne" },
                        new { Id = new Guid("41537fea-3945-4f3f-973f-71c193e15f7f"), Achternaam = "VanHoof", ClubId = new Guid("1ceae862-e828-41dd-9289-b0a022cdf061"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 306, Voornaam = "Emily" },
                        new { Id = new Guid("f90da381-77b3-4e97-a9df-25af2ae9a34a"), Achternaam = "Vanderplas", ClubId = new Guid("1ceae862-e828-41dd-9289-b0a022cdf061"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 59, Voornaam = "Sonja" },
                        new { Id = new Guid("679bbd72-87e8-4fd3-90c4-553444ec0f11"), Achternaam = "Bambino", ClubId = new Guid("4970a64d-32d6-49a1-9f79-18556310f440"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 257, Voornaam = "Salvatore" },
                        new { Id = new Guid("0c51e230-8741-4e89-8e53-00b21dbce485"), Achternaam = "Zalinski", ClubId = new Guid("1ceae862-e828-41dd-9289-b0a022cdf061"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 233, Voornaam = "Wosznjeck" },
                        new { Id = new Guid("2e19af0f-3289-4c8c-b7cb-5b14d086f043"), Achternaam = "Debruyne", ClubId = new Guid("3f6a34ad-ceac-474d-9f97-4a39c2861326"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 450, Voornaam = "Kevin" },
                        new { Id = new Guid("448fa4bd-1980-4966-ac23-33b7d14cf71f"), Achternaam = "Hazard", ClubId = new Guid("9043158c-7c67-4bab-aa60-1ac6f92d3945"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 23, Voornaam = "Eden" },
                        new { Id = new Guid("6cee4373-2ca7-4d67-80fe-14e61fa4f526"), Achternaam = "Evenepoel", ClubId = new Guid("2f17ac7e-e2f2-416e-ba3d-f146bc787366"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.Property<Guid>("RecordId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("RecordId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("WielrennerRecords");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany("WielrennerRecords")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Records")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
