// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710105239_AddLedenToClub")]
    partial class AddLedenToClub
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("b6f66765-ca41-41e1-99cd-cd164ddb6e9b"), Clubnaam = "WTC" },
                        new { Id = new Guid("703084c6-44c7-44a2-8a3a-3ed585171d75"), Clubnaam = "DCTV" },
                        new { Id = new Guid("f28f61a2-a7fa-4ff3-82a2-247af348a0f4"), Clubnaam = "De lustige rijders" },
                        new { Id = new Guid("1c35a2e0-a1c0-4c6e-94ef-4c37c33422e9"), Clubnaam = "WTC Melsele" },
                        new { Id = new Guid("3ccece87-cfce-4ab5-86e9-b038aae4df80"), Clubnaam = "The master cyclists" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("f28f61a2-a7fa-4ff3-82a2-247af348a0f4"), SupporterId = new Guid("d31a367c-0a8b-4831-9613-30a6bc6dd2fb") },
                        new { ClubId = new Guid("b6f66765-ca41-41e1-99cd-cd164ddb6e9b"), SupporterId = new Guid("28e28b97-4881-446b-86ac-1075708d2467") },
                        new { ClubId = new Guid("703084c6-44c7-44a2-8a3a-3ed585171d75"), SupporterId = new Guid("d97d020f-114f-4892-9555-a14de0bc5a0e") },
                        new { ClubId = new Guid("f28f61a2-a7fa-4ff3-82a2-247af348a0f4"), SupporterId = new Guid("8a8cc9a5-0443-47ee-bc49-41652659e896") },
                        new { ClubId = new Guid("b6f66765-ca41-41e1-99cd-cd164ddb6e9b"), SupporterId = new Guid("d31a367c-0a8b-4831-9613-30a6bc6dd2fb") },
                        new { ClubId = new Guid("3ccece87-cfce-4ab5-86e9-b038aae4df80"), SupporterId = new Guid("8a8cc9a5-0443-47ee-bc49-41652659e896") },
                        new { ClubId = new Guid("1c35a2e0-a1c0-4c6e-94ef-4c37c33422e9"), SupporterId = new Guid("28e28b97-4881-446b-86ac-1075708d2467") },
                        new { ClubId = new Guid("b6f66765-ca41-41e1-99cd-cd164ddb6e9b"), SupporterId = new Guid("d97d020f-114f-4892-9555-a14de0bc5a0e") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("28e28b97-4881-446b-86ac-1075708d2467"), WielrennerId = new Guid("f73fac46-1d34-42db-8c25-30a4b564241a") },
                        new { SupporterId = new Guid("8a8cc9a5-0443-47ee-bc49-41652659e896"), WielrennerId = new Guid("a0fe90c5-fac6-477c-9d10-d1d30c1139b0") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("d1fafbab-50a8-492b-9fa0-552c2d7b8ffe"), Merk = "B-Twin", WielrennerId = new Guid("f73fac46-1d34-42db-8c25-30a4b564241a"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("de12a019-0bab-4f11-b430-b2278c18b9d3"), Merk = "Moldava", WielrennerId = new Guid("2c34e09c-a4a0-4294-b8dc-35a28bbadee8"), Zadel = "Geel zadel" },
                        new { Id = new Guid("bfaeafaa-89e5-4561-add2-3eb55bb11078"), Merk = "Merckx", WielrennerId = new Guid("1aa2812b-b898-4136-9154-0ac4630afd81"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("28e28b97-4881-446b-86ac-1075708d2467"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("d31a367c-0a8b-4831-9613-30a6bc6dd2fb"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("d97d020f-114f-4892-9555-a14de0bc5a0e"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("8a8cc9a5-0443-47ee-bc49-41652659e896"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid?>("ClubId")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("1aa2812b-b898-4136-9154-0ac4630afd81"), Achternaam = "Franckaert", ClubId = new Guid("b6f66765-ca41-41e1-99cd-cd164ddb6e9b"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Robin" },
                        new { Id = new Guid("f73fac46-1d34-42db-8c25-30a4b564241a"), Achternaam = "Jansma", ClubId = new Guid("703084c6-44c7-44a2-8a3a-3ed585171d75"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Johanna" },
                        new { Id = new Guid("2c34e09c-a4a0-4294-b8dc-35a28bbadee8"), Achternaam = "Vissers", ClubId = new Guid("f28f61a2-a7fa-4ff3-82a2-247af348a0f4"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("a0fe90c5-fac6-477c-9d10-d1d30c1139b0"), Achternaam = "Depardieu", ClubId = new Guid("1c35a2e0-a1c0-4c6e-94ef-4c37c33422e9"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Gerard" },
                        new { Id = new Guid("51dc42b2-26cf-4ce7-82d1-fb2f6b234cb8"), Achternaam = "Van Overmeire", ClubId = new Guid("3ccece87-cfce-4ab5-86e9-b038aae4df80"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marc" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
