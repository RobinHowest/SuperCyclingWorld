// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210719154820_AddRecordHistory2")]
    partial class AddRecordHistory2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("76146591-004d-4d4b-9c92-ac4655571fa2"), AantalRecords = 0, Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("cebce923-1654-4da3-ab39-260c83b77735"), AantalRecords = 0, Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("5261d7ed-e2be-4fca-9724-a7f95d93c030"), AantalRecords = 0, Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("563d53d5-3056-45ad-a1c8-341aa26c713a"), AantalRecords = 0, Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("df5604c8-8921-4e10-ae65-df7a1e7c6def"), AantalRecords = 0, Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("5261d7ed-e2be-4fca-9724-a7f95d93c030"), SupporterId = new Guid("6452bbee-4e0d-42bb-83cb-41cd6e24bea5") },
                        new { ClubId = new Guid("76146591-004d-4d4b-9c92-ac4655571fa2"), SupporterId = new Guid("af21f127-db18-4921-9f43-ddb8795c7cae") },
                        new { ClubId = new Guid("cebce923-1654-4da3-ab39-260c83b77735"), SupporterId = new Guid("af21f127-db18-4921-9f43-ddb8795c7cae") },
                        new { ClubId = new Guid("5261d7ed-e2be-4fca-9724-a7f95d93c030"), SupporterId = new Guid("af21f127-db18-4921-9f43-ddb8795c7cae") },
                        new { ClubId = new Guid("563d53d5-3056-45ad-a1c8-341aa26c713a"), SupporterId = new Guid("af21f127-db18-4921-9f43-ddb8795c7cae") },
                        new { ClubId = new Guid("df5604c8-8921-4e10-ae65-df7a1e7c6def"), SupporterId = new Guid("af21f127-db18-4921-9f43-ddb8795c7cae") },
                        new { ClubId = new Guid("cebce923-1654-4da3-ab39-260c83b77735"), SupporterId = new Guid("982e1006-3967-47b4-b631-f728056d3e3e") },
                        new { ClubId = new Guid("5261d7ed-e2be-4fca-9724-a7f95d93c030"), SupporterId = new Guid("330c73d2-a16a-48ab-924b-50b427f87ee3") },
                        new { ClubId = new Guid("76146591-004d-4d4b-9c92-ac4655571fa2"), SupporterId = new Guid("6452bbee-4e0d-42bb-83cb-41cd6e24bea5") },
                        new { ClubId = new Guid("76146591-004d-4d4b-9c92-ac4655571fa2"), SupporterId = new Guid("982e1006-3967-47b4-b631-f728056d3e3e") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("af21f127-db18-4921-9f43-ddb8795c7cae"), WielrennerId = new Guid("2a2159ba-1d17-47b0-a949-8af63f8c1a63") },
                        new { SupporterId = new Guid("330c73d2-a16a-48ab-924b-50b427f87ee3"), WielrennerId = new Guid("04453c14-15a5-4616-89eb-1cc233ddb858") },
                        new { SupporterId = new Guid("af21f127-db18-4921-9f43-ddb8795c7cae"), WielrennerId = new Guid("294a5dbb-9df4-4950-b102-a14ade6818c7") },
                        new { SupporterId = new Guid("6452bbee-4e0d-42bb-83cb-41cd6e24bea5"), WielrennerId = new Guid("2a2159ba-1d17-47b0-a949-8af63f8c1a63") },
                        new { SupporterId = new Guid("330c73d2-a16a-48ab-924b-50b427f87ee3"), WielrennerId = new Guid("a8b9b35d-290d-4f84-be86-5f142f3d9926") },
                        new { SupporterId = new Guid("982e1006-3967-47b4-b631-f728056d3e3e"), WielrennerId = new Guid("04453c14-15a5-4616-89eb-1cc233ddb858") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("d8b3a9a0-3f92-4aef-b30f-85465ef7f852"), Merk = "B-Twin", WielrennerId = new Guid("2a2159ba-1d17-47b0-a949-8af63f8c1a63"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("173a8be2-bd13-4f75-bd8c-b5379bdda172"), Merk = "Moldava", WielrennerId = new Guid("294a5dbb-9df4-4950-b102-a14ade6818c7"), Zadel = "Geel zadel" },
                        new { Id = new Guid("45dd75f6-1dae-4e61-ae3d-f28bc4cbe144"), Merk = "Merckx", WielrennerId = new Guid("a8b9b35d-290d-4f84-be86-5f142f3d9926"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<string>("Thropy");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Record");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aankomst");

                    b.Property<string>("Name");

                    b.Property<Guid>("PersoonId");

                    b.Property<string>("Start");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Ritten");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("af21f127-db18-4921-9f43-ddb8795c7cae"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("6452bbee-4e0d-42bb-83cb-41cd6e24bea5"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("982e1006-3967-47b4-b631-f728056d3e3e"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("330c73d2-a16a-48ab-924b-50b427f87ee3"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("9f8841da-501f-4a2f-b4a1-7e7dc2a99a95"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("6b9b80be-b723-4476-b2d9-42219a150ddb"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("387affc6-34d9-44a9-8145-441eca511554"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("87856043-d04f-4267-9933-fcd2949037ba"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("7a9ae06d-6ea8-4a71-ba44-3d1ec15cf387"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("874a86df-1e68-42a0-a039-92a4b0eb26c4"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("8962cf78-9067-4291-bd05-a448911f77fd"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("beab6730-67d1-4fff-b266-bdc189a729a3"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<double>("GemiddeldKm_h");

                    b.Property<int>("GemiddeldeKM_Rit");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("a8b9b35d-290d-4f84-be86-5f142f3d9926"), AantalRecords = 0, Achternaam = "Franckaert", ClubId = new Guid("76146591-004d-4d4b-9c92-ac4655571fa2"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 31.0, GemiddeldeKM_Rit = 10, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 100, Voornaam = "Robin" },
                        new { Id = new Guid("2a2159ba-1d17-47b0-a949-8af63f8c1a63"), AantalRecords = 0, Achternaam = "Jansma", ClubId = new Guid("563d53d5-3056-45ad-a1c8-341aa26c713a"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 32.0, GemiddeldeKM_Rit = 20, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 101, Voornaam = "Johanna" },
                        new { Id = new Guid("294a5dbb-9df4-4950-b102-a14ade6818c7"), AantalRecords = 0, Achternaam = "Vissers", ClubId = new Guid("df5604c8-8921-4e10-ae65-df7a1e7c6def"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 33.0, GemiddeldeKM_Rit = 30, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 102, Voornaam = "Bert" },
                        new { Id = new Guid("04453c14-15a5-4616-89eb-1cc233ddb858"), AantalRecords = 0, Achternaam = "Depardieu", ClubId = new Guid("df5604c8-8921-4e10-ae65-df7a1e7c6def"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 34.0, GemiddeldeKM_Rit = 40, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Gerard" },
                        new { Id = new Guid("f75407e2-8a97-4f4f-9051-3f266fe2f546"), AantalRecords = 0, Achternaam = "Van Overmeire", ClubId = new Guid("563d53d5-3056-45ad-a1c8-341aa26c713a"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 35.0, GemiddeldeKM_Rit = 50, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 104, Voornaam = "Marc" },
                        new { Id = new Guid("812a047a-c778-4496-8dc3-d6ed9825e2de"), AantalRecords = 0, Achternaam = "Camara", ClubId = new Guid("cebce923-1654-4da3-ab39-260c83b77735"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 36.0, GemiddeldeKM_Rit = 60, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 105, Voornaam = "Herdy" },
                        new { Id = new Guid("56eb8839-95f3-4af9-a81d-9615c7141a7a"), AantalRecords = 0, Achternaam = "Donckerwolcke", ClubId = new Guid("563d53d5-3056-45ad-a1c8-341aa26c713a"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 37.0, GemiddeldeKM_Rit = 70, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 106, Voornaam = "Thomas" },
                        new { Id = new Guid("a716d5c4-f263-4a90-9e10-0edf468c905a"), AantalRecords = 0, Achternaam = "Garnaal", ClubId = new Guid("df5604c8-8921-4e10-ae65-df7a1e7c6def"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 38.0, GemiddeldeKM_Rit = 80, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 107, Voornaam = "Sofie" },
                        new { Id = new Guid("a1c453ff-3aff-4d5e-8aeb-9406a6169325"), AantalRecords = 0, Achternaam = "Brokkenpap", ClubId = new Guid("5261d7ed-e2be-4fca-9724-a7f95d93c030"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 39.0, GemiddeldeKM_Rit = 90, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 108, Voornaam = "Berend" },
                        new { Id = new Guid("3725d26c-9c90-4da7-896e-632829177408"), AantalRecords = 0, Achternaam = "Mega", ClubId = new Guid("df5604c8-8921-4e10-ae65-df7a1e7c6def"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 40.0, GemiddeldeKM_Rit = 5, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 109, Voornaam = "Mindy" },
                        new { Id = new Guid("49234ac9-93de-4622-add6-7774df8b8667"), AantalRecords = 0, Achternaam = "Scarlet", ClubId = new Guid("df5604c8-8921-4e10-ae65-df7a1e7c6def"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 41.0, GemiddeldeKM_Rit = 6, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Johanson" },
                        new { Id = new Guid("c6b434db-3313-4b3f-b9b6-1d53c3b703ec"), AantalRecords = 0, Achternaam = "Beukelaer", ClubId = new Guid("563d53d5-3056-45ad-a1c8-341aa26c713a"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 42.0, GemiddeldeKM_Rit = 7, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Koekjes" },
                        new { Id = new Guid("e40e5ad9-3eb5-4abe-9b72-bdcb3cdb1402"), AantalRecords = 0, Achternaam = "Mertens", ClubId = new Guid("cebce923-1654-4da3-ab39-260c83b77735"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 43.0, GemiddeldeKM_Rit = 8, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 112, Voornaam = "Evelyne" },
                        new { Id = new Guid("d9f19d9e-72bd-4086-a715-4dd1c94b2448"), AantalRecords = 0, Achternaam = "VanHoof", ClubId = new Guid("cebce923-1654-4da3-ab39-260c83b77735"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 44.0, GemiddeldeKM_Rit = 9, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 113, Voornaam = "Emily" },
                        new { Id = new Guid("d9561014-5fff-4ce9-9331-eb386148c1d0"), AantalRecords = 0, Achternaam = "Vanderplas", ClubId = new Guid("cebce923-1654-4da3-ab39-260c83b77735"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 45.0, GemiddeldeKM_Rit = 10, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 114, Voornaam = "Sonja" },
                        new { Id = new Guid("c7e7db0b-8ef5-4c08-b0c2-2971f24970b1"), AantalRecords = 0, Achternaam = "Bambino", ClubId = new Guid("df5604c8-8921-4e10-ae65-df7a1e7c6def"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 46.0, GemiddeldeKM_Rit = 11, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 115, Voornaam = "Salvatore" },
                        new { Id = new Guid("de41aa2e-e3a6-4d5f-a27b-3879143e7899"), AantalRecords = 0, Achternaam = "Zalinski", ClubId = new Guid("563d53d5-3056-45ad-a1c8-341aa26c713a"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 47.0, GemiddeldeKM_Rit = 12, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 116, Voornaam = "Wosznjeck" },
                        new { Id = new Guid("6c22d35c-8dbb-4f67-94c9-76679b08a92f"), AantalRecords = 0, Achternaam = "Debruyne", ClubId = new Guid("cebce923-1654-4da3-ab39-260c83b77735"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 48.0, GemiddeldeKM_Rit = 13, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 117, Voornaam = "Kevin" },
                        new { Id = new Guid("7d9493f3-b098-4086-a4a6-6a010a5ecfb5"), AantalRecords = 0, Achternaam = "Hazard", ClubId = new Guid("df5604c8-8921-4e10-ae65-df7a1e7c6def"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 49.0, GemiddeldeKM_Rit = 14, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 118, Voornaam = "Eden" },
                        new { Id = new Guid("0aadb9e8-e50d-40fc-8152-8fe49c35470d"), AantalRecords = 0, Achternaam = "Evenepoel", ClubId = new Guid("76146591-004d-4d4b-9c92-ac4655571fa2"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 50.0, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 119, Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Web.RecordZoeker.RecordHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("RecordId");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("RecordId");

                    b.ToTable("RecordHistories");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Ritten")
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Web.RecordZoeker.RecordHistory", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany()
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
