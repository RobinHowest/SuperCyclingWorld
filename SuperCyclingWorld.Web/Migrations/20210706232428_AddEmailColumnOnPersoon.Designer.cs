// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210706232428_AddEmailColumnOnPersoon")]
    partial class AddEmailColumnOnPersoon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Clubnaam");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("073323f8-8958-471b-8d8e-73c506f2ea3c"), Clubnaam = "WTC" },
                        new { Id = new Guid("ffb79e00-99c6-479c-a332-f3ab9206754b"), Clubnaam = "DCTV" },
                        new { Id = new Guid("2c3cd140-94ed-438a-843d-4490077aa6a2"), Clubnaam = "De lustige rijders" },
                        new { Id = new Guid("3281084b-a7b7-4568-859b-1de8b4e65148"), Clubnaam = "WTC Melsele" },
                        new { Id = new Guid("8fc6d591-b3cd-479f-810f-e1628359decd"), Clubnaam = "The master cyclists" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("2c3cd140-94ed-438a-843d-4490077aa6a2"), SupporterId = new Guid("14347ccb-e9ca-4199-9f87-7a178f156796") },
                        new { ClubId = new Guid("073323f8-8958-471b-8d8e-73c506f2ea3c"), SupporterId = new Guid("09e8bd9f-92c9-45ad-a258-86391670126d") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("09e8bd9f-92c9-45ad-a258-86391670126d"), WielrennerId = new Guid("6e0dce39-cf21-4cc4-9311-11763db6fa7e") },
                        new { SupporterId = new Guid("a702386b-f7c1-437d-a856-64a498699429"), WielrennerId = new Guid("a23dc392-e058-419c-85b9-d854fd204b20") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("81b3f9de-6de5-4a7d-b35a-4d1dea71f45f"), Merk = "B-Twin", WielrennerId = new Guid("a23dc392-e058-419c-85b9-d854fd204b20"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("5384c599-c941-425c-b190-75513408c3c7"), Merk = "Moldava", WielrennerId = new Guid("0dc5483e-c088-4b7f-aa0d-b48b66d794ab"), Zadel = "Geel zadel" },
                        new { Id = new Guid("cdb3940c-dd23-45c4-b05b-702ae034c28e"), Merk = "Merckx", WielrennerId = new Guid("6e0dce39-cf21-4cc4-9311-11763db6fa7e"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("09e8bd9f-92c9-45ad-a258-86391670126d"), Achternaam = "The Pooh", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Winnie" },
                        new { Id = new Guid("14347ccb-e9ca-4199-9f87-7a178f156796"), Achternaam = "Van Achtmaal", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Thomas" },
                        new { Id = new Guid("f9ea5789-5ed5-417d-a8f8-07777b93fda5"), Achternaam = "VanKerkhove", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Nico" },
                        new { Id = new Guid("a702386b-f7c1-437d-a856-64a498699429"), Achternaam = "Kronenburg", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Koen" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("0dc5483e-c088-4b7f-aa0d-b48b66d794ab"), Achternaam = "Franckaert", ClubId = new Guid("073323f8-8958-471b-8d8e-73c506f2ea3c"), GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Robin" },
                        new { Id = new Guid("6e0dce39-cf21-4cc4-9311-11763db6fa7e"), Achternaam = "Jansma", ClubId = new Guid("ffb79e00-99c6-479c-a332-f3ab9206754b"), GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Johanna" },
                        new { Id = new Guid("62f78622-1b4e-49e5-a0dd-4e17996eff9b"), Achternaam = "Vissers", ClubId = new Guid("2c3cd140-94ed-438a-843d-4490077aa6a2"), GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Bert" },
                        new { Id = new Guid("a23dc392-e058-419c-85b9-d854fd204b20"), Achternaam = "Depardieu", ClubId = new Guid("3281084b-a7b7-4568-859b-1de8b4e65148"), GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Gerard" },
                        new { Id = new Guid("a1cda936-9e09-43ba-947f-4372b4b1ed1b"), Achternaam = "Van Overmeire", ClubId = new Guid("8fc6d591-b3cd-479f-810f-e1628359decd"), GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Marc" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
