// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210711023245_SeedZoeveel4")]
    partial class SeedZoeveel4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("2fbffee6-e6ee-4bba-a8f7-9390858041a3"), AantalRecords = 0, Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("23beb59d-8b23-427c-9be0-9e6703e7b812"), AantalRecords = 0, Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("e063e21c-c9fe-4932-ac04-249d859e1372"), AantalRecords = 0, Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("beba65da-7a83-4408-b113-c4a710395f2d"), AantalRecords = 0, Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("4258f6d9-d0a8-438d-8c45-37138be80126"), AantalRecords = 0, Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("e063e21c-c9fe-4932-ac04-249d859e1372"), SupporterId = new Guid("692c13ce-404c-4b82-9320-2e82770b0816") },
                        new { ClubId = new Guid("2fbffee6-e6ee-4bba-a8f7-9390858041a3"), SupporterId = new Guid("fa6c4523-71ed-492e-bb17-28886b900634") },
                        new { ClubId = new Guid("23beb59d-8b23-427c-9be0-9e6703e7b812"), SupporterId = new Guid("fa6c4523-71ed-492e-bb17-28886b900634") },
                        new { ClubId = new Guid("e063e21c-c9fe-4932-ac04-249d859e1372"), SupporterId = new Guid("fa6c4523-71ed-492e-bb17-28886b900634") },
                        new { ClubId = new Guid("beba65da-7a83-4408-b113-c4a710395f2d"), SupporterId = new Guid("fa6c4523-71ed-492e-bb17-28886b900634") },
                        new { ClubId = new Guid("4258f6d9-d0a8-438d-8c45-37138be80126"), SupporterId = new Guid("fa6c4523-71ed-492e-bb17-28886b900634") },
                        new { ClubId = new Guid("23beb59d-8b23-427c-9be0-9e6703e7b812"), SupporterId = new Guid("5d54f761-d43b-45c1-8cc4-359a77317f6b") },
                        new { ClubId = new Guid("e063e21c-c9fe-4932-ac04-249d859e1372"), SupporterId = new Guid("2238160b-1511-487a-9c79-2d821bd503da") },
                        new { ClubId = new Guid("2fbffee6-e6ee-4bba-a8f7-9390858041a3"), SupporterId = new Guid("692c13ce-404c-4b82-9320-2e82770b0816") },
                        new { ClubId = new Guid("2fbffee6-e6ee-4bba-a8f7-9390858041a3"), SupporterId = new Guid("5d54f761-d43b-45c1-8cc4-359a77317f6b") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("fa6c4523-71ed-492e-bb17-28886b900634"), WielrennerId = new Guid("025c8358-b101-4155-aec4-c632f4ff8ab6") },
                        new { SupporterId = new Guid("2238160b-1511-487a-9c79-2d821bd503da"), WielrennerId = new Guid("14530110-920d-4705-aa6a-0d3d3ba45cc9") },
                        new { SupporterId = new Guid("fa6c4523-71ed-492e-bb17-28886b900634"), WielrennerId = new Guid("54e79755-0ea1-4b33-843c-e6abea8d698f") },
                        new { SupporterId = new Guid("692c13ce-404c-4b82-9320-2e82770b0816"), WielrennerId = new Guid("025c8358-b101-4155-aec4-c632f4ff8ab6") },
                        new { SupporterId = new Guid("2238160b-1511-487a-9c79-2d821bd503da"), WielrennerId = new Guid("183a21e6-2b4f-449f-b72c-d8e7173dce84") },
                        new { SupporterId = new Guid("5d54f761-d43b-45c1-8cc4-359a77317f6b"), WielrennerId = new Guid("14530110-920d-4705-aa6a-0d3d3ba45cc9") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("e74b61d2-0248-4bb5-897a-04fe3b532f11"), Merk = "B-Twin", WielrennerId = new Guid("025c8358-b101-4155-aec4-c632f4ff8ab6"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("c5b347a2-3ee4-49d5-a7b1-93f1b0d7f81e"), Merk = "Moldava", WielrennerId = new Guid("54e79755-0ea1-4b33-843c-e6abea8d698f"), Zadel = "Geel zadel" },
                        new { Id = new Guid("9d4f0740-96da-41bc-b2e6-bcf98810c77e"), Merk = "Merckx", WielrennerId = new Guid("183a21e6-2b4f-449f-b72c-d8e7173dce84"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("fa6c4523-71ed-492e-bb17-28886b900634"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("692c13ce-404c-4b82-9320-2e82770b0816"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("5d54f761-d43b-45c1-8cc4-359a77317f6b"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("2238160b-1511-487a-9c79-2d821bd503da"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("70d93253-e84c-4334-b4a8-406ffdafd17b"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("7915b66b-af45-4758-be45-6069a83fd491"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("e8bc79e7-0e01-4282-9bcf-de460005fbf9"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("0ffeeb0e-993b-4d6f-bc90-0c7bcbfdc3e7"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("4b5fc1f5-37e4-4224-8ff4-67deda1e7716"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("45229593-9dd4-401e-af9c-5dedbdc81b01"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("e2a83f31-fc2c-44c4-822d-9e642d7c6d5a"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("58bddbf2-52cb-4c80-8332-a6f96de2489e"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("183a21e6-2b4f-449f-b72c-d8e7173dce84"), AantalRecords = 0, Achternaam = "Franckaert", ClubId = new Guid("2fbffee6-e6ee-4bba-a8f7-9390858041a3"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Robin" },
                        new { Id = new Guid("025c8358-b101-4155-aec4-c632f4ff8ab6"), AantalRecords = 0, Achternaam = "Jansma", ClubId = new Guid("4258f6d9-d0a8-438d-8c45-37138be80126"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 260, Voornaam = "Johanna" },
                        new { Id = new Guid("54e79755-0ea1-4b33-843c-e6abea8d698f"), AantalRecords = 0, Achternaam = "Vissers", ClubId = new Guid("23beb59d-8b23-427c-9be0-9e6703e7b812"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 301, Voornaam = "Bert" },
                        new { Id = new Guid("14530110-920d-4705-aa6a-0d3d3ba45cc9"), AantalRecords = 0, Achternaam = "Depardieu", ClubId = new Guid("beba65da-7a83-4408-b113-c4a710395f2d"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 85, Voornaam = "Gerard" },
                        new { Id = new Guid("5f981b1b-b8f8-40a3-aa2a-8e0b48b2da1a"), AantalRecords = 0, Achternaam = "Van Overmeire", ClubId = new Guid("2fbffee6-e6ee-4bba-a8f7-9390858041a3"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 256, Voornaam = "Marc" },
                        new { Id = new Guid("2571be8c-f2a0-4963-a7ce-48a91daafdc4"), AantalRecords = 0, Achternaam = "Camara", ClubId = new Guid("e063e21c-c9fe-4932-ac04-249d859e1372"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 504, Voornaam = "Herdy" },
                        new { Id = new Guid("b1a7d555-a131-4b9f-a6a2-2a6a39531283"), AantalRecords = 0, Achternaam = "Donckerwolcke", ClubId = new Guid("e063e21c-c9fe-4932-ac04-249d859e1372"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1100, Voornaam = "Thomas" },
                        new { Id = new Guid("3a9c75b9-7e3a-487b-9050-2d4218e40f5e"), AantalRecords = 0, Achternaam = "Garnaal", ClubId = new Guid("beba65da-7a83-4408-b113-c4a710395f2d"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 250, Voornaam = "Sofie" },
                        new { Id = new Guid("11f7ba47-fa67-441d-b739-efaee24bd2cc"), AantalRecords = 0, Achternaam = "Brokkenpap", ClubId = new Guid("23beb59d-8b23-427c-9be0-9e6703e7b812"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 125, Voornaam = "Berend" },
                        new { Id = new Guid("55ff3aff-6e50-4803-bba4-a730c54e5491"), AantalRecords = 0, Achternaam = "Mega", ClubId = new Guid("4258f6d9-d0a8-438d-8c45-37138be80126"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 568, Voornaam = "Mindy" },
                        new { Id = new Guid("601313e2-c21a-440f-9308-618652277aeb"), AantalRecords = 0, Achternaam = "Scarlet", ClubId = new Guid("4258f6d9-d0a8-438d-8c45-37138be80126"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 308, Voornaam = "Johanson" },
                        new { Id = new Guid("1e53316f-f258-4d54-8e0d-bed9ca51bf10"), AantalRecords = 0, Achternaam = "Beukelaer", ClubId = new Guid("2fbffee6-e6ee-4bba-a8f7-9390858041a3"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Koekjes" },
                        new { Id = new Guid("2de6dbc2-af2e-42e3-94fe-cb7ef4eb95eb"), AantalRecords = 0, Achternaam = "Mertens", ClubId = new Guid("2fbffee6-e6ee-4bba-a8f7-9390858041a3"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Evelyne" },
                        new { Id = new Guid("db2162c3-d73b-476d-803c-7531fb196789"), AantalRecords = 0, Achternaam = "VanHoof", ClubId = new Guid("2fbffee6-e6ee-4bba-a8f7-9390858041a3"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 306, Voornaam = "Emily" },
                        new { Id = new Guid("c7dc1cfd-9cc7-496c-b551-549a1d88ec87"), AantalRecords = 0, Achternaam = "Vanderplas", ClubId = new Guid("4258f6d9-d0a8-438d-8c45-37138be80126"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 59, Voornaam = "Sonja" },
                        new { Id = new Guid("3c9c745b-a3f5-4111-911a-5b82dbbc9146"), AantalRecords = 0, Achternaam = "Bambino", ClubId = new Guid("23beb59d-8b23-427c-9be0-9e6703e7b812"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 257, Voornaam = "Salvatore" },
                        new { Id = new Guid("be9c003f-48b5-4822-a5fd-b555d56036cb"), AantalRecords = 0, Achternaam = "Zalinski", ClubId = new Guid("2fbffee6-e6ee-4bba-a8f7-9390858041a3"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 233, Voornaam = "Wosznjeck" },
                        new { Id = new Guid("024af9ca-6f4f-4ebb-bb42-a877c3bd7c19"), AantalRecords = 0, Achternaam = "Debruyne", ClubId = new Guid("beba65da-7a83-4408-b113-c4a710395f2d"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 450, Voornaam = "Kevin" },
                        new { Id = new Guid("41ef20f7-4471-4254-9686-3d7f2175f83c"), AantalRecords = 0, Achternaam = "Hazard", ClubId = new Guid("beba65da-7a83-4408-b113-c4a710395f2d"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 23, Voornaam = "Eden" },
                        new { Id = new Guid("4e2c9925-7efb-4d6d-b906-d4719317b6cc"), AantalRecords = 0, Achternaam = "Evenepoel", ClubId = new Guid("23beb59d-8b23-427c-9be0-9e6703e7b812"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.Property<Guid>("RecordId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("RecordId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("WielrennerRecords");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany("WielrennerRecords")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Records")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
