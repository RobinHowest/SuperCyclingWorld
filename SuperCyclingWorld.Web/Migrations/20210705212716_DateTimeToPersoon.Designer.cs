// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210705212716_DateTimeToPersoon")]
    partial class DateTimeToPersoon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Clubnaam");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("ee7adf43-cf28-4fad-ad69-4fc90fb2a364"), Clubnaam = "WTC" },
                        new { Id = new Guid("54e989d9-134c-45c0-b43e-3479b9325dd5"), Clubnaam = "DCTV" },
                        new { Id = new Guid("d5f1c49b-229a-4083-9844-b60ac2ecdb5b"), Clubnaam = "De lustige rijders" },
                        new { Id = new Guid("410ffefd-d2c1-4d0c-a755-6613a119c2af"), Clubnaam = "WTC Melsele" },
                        new { Id = new Guid("76c5c639-a23d-4391-8074-6a695b6a8eec"), Clubnaam = "The master cyclists" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("d5f1c49b-229a-4083-9844-b60ac2ecdb5b"), SupporterId = new Guid("2b2e839d-0162-4d34-872a-0061c9e69aa0") },
                        new { ClubId = new Guid("ee7adf43-cf28-4fad-ad69-4fc90fb2a364"), SupporterId = new Guid("eb6af8c6-8ef0-4626-a91f-63d8d186b721") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("eb6af8c6-8ef0-4626-a91f-63d8d186b721"), WielrennerId = new Guid("030f213f-b261-4ec9-bfc7-0a93444f64b2") },
                        new { SupporterId = new Guid("7c8199a3-438a-4428-96e5-512608b93389"), WielrennerId = new Guid("ef006d70-5fd2-497a-97db-ab6537c1d12b") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("98420178-a094-4b36-8c2e-56684e505ad6"), Merk = "B-Twin", WielrennerId = new Guid("ef006d70-5fd2-497a-97db-ab6537c1d12b"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("0ca56df7-1fcd-4b7d-b2ec-a0c2bf620917"), Merk = "Moldava", WielrennerId = new Guid("d5ede78c-e319-44df-9f37-55ed626ce1a3"), Zadel = "Geel zadel" },
                        new { Id = new Guid("4066a619-f202-4470-9361-cedaf7a300ff"), Merk = "Merckx", WielrennerId = new Guid("030f213f-b261-4ec9-bfc7-0a93444f64b2"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("eb6af8c6-8ef0-4626-a91f-63d8d186b721"), Achternaam = "The Pooh", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Voornaam = "Winnie" },
                        new { Id = new Guid("2b2e839d-0162-4d34-872a-0061c9e69aa0"), Achternaam = "Van Achtmaal", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Voornaam = "Thomas" },
                        new { Id = new Guid("d7c0b553-0de7-4e76-b898-9d78c71538f7"), Achternaam = "VanKerkhove", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Voornaam = "Nico" },
                        new { Id = new Guid("7c8199a3-438a-4428-96e5-512608b93389"), Achternaam = "Kronenburg", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Voornaam = "Koen" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("d5ede78c-e319-44df-9f37-55ed626ce1a3"), Achternaam = "Franckaert", ClubId = new Guid("ee7adf43-cf28-4fad-ad69-4fc90fb2a364"), GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Voornaam = "Robin" },
                        new { Id = new Guid("030f213f-b261-4ec9-bfc7-0a93444f64b2"), Achternaam = "Jansma", ClubId = new Guid("54e989d9-134c-45c0-b43e-3479b9325dd5"), GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Voornaam = "Johanna" },
                        new { Id = new Guid("99f56b9f-22b1-4928-9925-f505ca1c6dc7"), Achternaam = "Vissers", ClubId = new Guid("d5f1c49b-229a-4083-9844-b60ac2ecdb5b"), GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Voornaam = "Bert" },
                        new { Id = new Guid("ef006d70-5fd2-497a-97db-ab6537c1d12b"), Achternaam = "Depardieu", ClubId = new Guid("410ffefd-d2c1-4d0c-a755-6613a119c2af"), GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Voornaam = "Gerard" },
                        new { Id = new Guid("1392be3c-7d23-4fa8-baf9-811e8c6c9130"), Achternaam = "Van Overmeire", ClubId = new Guid("76c5c639-a23d-4391-8074-6a695b6a8eec"), GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Voornaam = "Marc" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
