// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710123457_WielrennerRecords3")]
    partial class WielrennerRecords3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("80bcb85e-f32c-41fb-a369-7a2067e486a9"), Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("d0121570-8ca0-4a1b-ab0c-2d0c4b099b10"), Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("125b3482-91ad-4dac-88e3-7e7b87e5b9d5"), Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("b81344fa-ced0-4d12-b903-f8d865403b9f"), Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("f6a95b4b-c403-40dc-92b1-50b26aa0b00b"), Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("125b3482-91ad-4dac-88e3-7e7b87e5b9d5"), SupporterId = new Guid("b7ae1113-e8ca-4e2b-a2cf-96be1ed45f5d") },
                        new { ClubId = new Guid("80bcb85e-f32c-41fb-a369-7a2067e486a9"), SupporterId = new Guid("0fedb7ac-4434-4450-9257-e9fec17b1366") },
                        new { ClubId = new Guid("d0121570-8ca0-4a1b-ab0c-2d0c4b099b10"), SupporterId = new Guid("8ff56b90-e675-424c-98fe-a45bfa7016cb") },
                        new { ClubId = new Guid("125b3482-91ad-4dac-88e3-7e7b87e5b9d5"), SupporterId = new Guid("8112bb46-450f-4785-aa62-e7bb35dcf7aa") },
                        new { ClubId = new Guid("80bcb85e-f32c-41fb-a369-7a2067e486a9"), SupporterId = new Guid("b7ae1113-e8ca-4e2b-a2cf-96be1ed45f5d") },
                        new { ClubId = new Guid("f6a95b4b-c403-40dc-92b1-50b26aa0b00b"), SupporterId = new Guid("8112bb46-450f-4785-aa62-e7bb35dcf7aa") },
                        new { ClubId = new Guid("b81344fa-ced0-4d12-b903-f8d865403b9f"), SupporterId = new Guid("0fedb7ac-4434-4450-9257-e9fec17b1366") },
                        new { ClubId = new Guid("80bcb85e-f32c-41fb-a369-7a2067e486a9"), SupporterId = new Guid("8ff56b90-e675-424c-98fe-a45bfa7016cb") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("0fedb7ac-4434-4450-9257-e9fec17b1366"), WielrennerId = new Guid("09e6f343-df37-42d7-bdb0-a51d256c5dbd") },
                        new { SupporterId = new Guid("8112bb46-450f-4785-aa62-e7bb35dcf7aa"), WielrennerId = new Guid("485acdb5-df46-459f-a02f-e39f537bb369") },
                        new { SupporterId = new Guid("0fedb7ac-4434-4450-9257-e9fec17b1366"), WielrennerId = new Guid("8c21bef4-ef18-4ec7-90fc-9a1f4c8d87cf") },
                        new { SupporterId = new Guid("b7ae1113-e8ca-4e2b-a2cf-96be1ed45f5d"), WielrennerId = new Guid("09e6f343-df37-42d7-bdb0-a51d256c5dbd") },
                        new { SupporterId = new Guid("8112bb46-450f-4785-aa62-e7bb35dcf7aa"), WielrennerId = new Guid("4690d765-84e3-4b2d-bbba-bddb8c9a235a") },
                        new { SupporterId = new Guid("8ff56b90-e675-424c-98fe-a45bfa7016cb"), WielrennerId = new Guid("485acdb5-df46-459f-a02f-e39f537bb369") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("bd347052-a949-42bf-854b-c556e08f7156"), Merk = "B-Twin", WielrennerId = new Guid("09e6f343-df37-42d7-bdb0-a51d256c5dbd"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("ccaf3fea-a631-4c17-8d65-5966b796fab8"), Merk = "Moldava", WielrennerId = new Guid("8c21bef4-ef18-4ec7-90fc-9a1f4c8d87cf"), Zadel = "Geel zadel" },
                        new { Id = new Guid("bbc0b5b3-c626-451c-9129-375ca80d8373"), Merk = "Merckx", WielrennerId = new Guid("4690d765-84e3-4b2d-bbba-bddb8c9a235a"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("0fedb7ac-4434-4450-9257-e9fec17b1366"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("b7ae1113-e8ca-4e2b-a2cf-96be1ed45f5d"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("8ff56b90-e675-424c-98fe-a45bfa7016cb"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("8112bb46-450f-4785-aa62-e7bb35dcf7aa"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("5b7a4207-ab99-46a6-8677-d13b8073746a"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("2f8175bd-0c94-47ab-99b1-3b88fc08f407"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("8850c833-e0f5-4b6a-a3bf-44616fe7ace9"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("5655dcea-1089-4a0c-8541-f65be06d5318"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("21aff2f8-595b-4941-a9bb-296a0b937206"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("134b3b5d-90d7-45f5-af8e-4e6898b000fa"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("579dfdc0-c397-4edc-9794-bdd21da9e5de"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("97d05014-f77d-46f3-8a3c-7a29b1068f9b"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid?>("ClubId")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("4690d765-84e3-4b2d-bbba-bddb8c9a235a"), Achternaam = "Franckaert", ClubId = new Guid("d0121570-8ca0-4a1b-ab0c-2d0c4b099b10"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Robin" },
                        new { Id = new Guid("09e6f343-df37-42d7-bdb0-a51d256c5dbd"), Achternaam = "Jansma", ClubId = new Guid("b81344fa-ced0-4d12-b903-f8d865403b9f"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Johanna" },
                        new { Id = new Guid("8c21bef4-ef18-4ec7-90fc-9a1f4c8d87cf"), Achternaam = "Vissers", ClubId = new Guid("80bcb85e-f32c-41fb-a369-7a2067e486a9"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("485acdb5-df46-459f-a02f-e39f537bb369"), Achternaam = "Depardieu", ClubId = new Guid("d0121570-8ca0-4a1b-ab0c-2d0c4b099b10"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Gerard" },
                        new { Id = new Guid("d1a53b5f-ab8c-4d9c-a4a4-d28b73d18f15"), Achternaam = "Van Overmeire", ClubId = new Guid("d0121570-8ca0-4a1b-ab0c-2d0c4b099b10"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marc" },
                        new { Id = new Guid("4783c547-4a33-437e-ba45-098b47a20feb"), Achternaam = "Camara", ClubId = new Guid("b81344fa-ced0-4d12-b903-f8d865403b9f"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Herdy" },
                        new { Id = new Guid("0b537ded-d7bb-4a7f-a509-88acaa21ab2c"), Achternaam = "Donckerwolcke", ClubId = new Guid("d0121570-8ca0-4a1b-ab0c-2d0c4b099b10"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("bee50d24-a6f4-4527-9fca-5dc1ca0b4c4a"), Achternaam = "Garnaal", ClubId = new Guid("b81344fa-ced0-4d12-b903-f8d865403b9f"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Sofie" },
                        new { Id = new Guid("489c8dbb-ca16-4aa9-b62d-13d9a8cb806e"), Achternaam = "Brokkenpap", ClubId = new Guid("125b3482-91ad-4dac-88e3-7e7b87e5b9d5"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Berend" },
                        new { Id = new Guid("ca4952c2-b104-4b1c-a66a-04d31212cc93"), Achternaam = "Mega", ClubId = new Guid("b81344fa-ced0-4d12-b903-f8d865403b9f"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Mindy" },
                        new { Id = new Guid("a7c5f557-8185-4757-8412-a22d127172e0"), Achternaam = "Scarlet", ClubId = new Guid("b81344fa-ced0-4d12-b903-f8d865403b9f"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Johanson" },
                        new { Id = new Guid("c7b50ad0-6c56-4ecf-b889-45e1daeffa6f"), Achternaam = "Beukelaer", ClubId = new Guid("b81344fa-ced0-4d12-b903-f8d865403b9f"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koekjes" },
                        new { Id = new Guid("aaca6b2e-20f5-4111-bd8d-1566396c75cb"), Achternaam = "Mertens", ClubId = new Guid("125b3482-91ad-4dac-88e3-7e7b87e5b9d5"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Evelyne" },
                        new { Id = new Guid("2ffcee1d-d4d7-43e5-9f01-30368bc9c385"), Achternaam = "VanHoof", ClubId = new Guid("80bcb85e-f32c-41fb-a369-7a2067e486a9"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Emily" },
                        new { Id = new Guid("361fd7d6-84d6-45ec-b69d-a744667a6941"), Achternaam = "Vanderplas", ClubId = new Guid("b81344fa-ced0-4d12-b903-f8d865403b9f"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Sonja" },
                        new { Id = new Guid("0c7ad8e8-6915-474c-9c45-3bd1daf899f1"), Achternaam = "Bambino", ClubId = new Guid("b81344fa-ced0-4d12-b903-f8d865403b9f"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Salvatore" },
                        new { Id = new Guid("c49b8b08-0cdd-4a9e-96b9-0b1f7ec3c80a"), Achternaam = "Zalinski", ClubId = new Guid("f6a95b4b-c403-40dc-92b1-50b26aa0b00b"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Wosznjeck" },
                        new { Id = new Guid("8eba4739-4583-4f5e-bee2-f710147933ac"), Achternaam = "Debruyne", ClubId = new Guid("f6a95b4b-c403-40dc-92b1-50b26aa0b00b"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Kevin" },
                        new { Id = new Guid("6b44ee49-c2de-4f02-ae06-4fc682e0b8fd"), Achternaam = "Hazard", ClubId = new Guid("125b3482-91ad-4dac-88e3-7e7b87e5b9d5"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Eden" },
                        new { Id = new Guid("944ba1be-e23d-4d01-91b1-7d93051dc0d7"), Achternaam = "Evenepoel", ClubId = new Guid("80bcb85e-f32c-41fb-a369-7a2067e486a9"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.Property<Guid>("RecordId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("RecordId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("WielrennerRecords");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany()
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Records")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
