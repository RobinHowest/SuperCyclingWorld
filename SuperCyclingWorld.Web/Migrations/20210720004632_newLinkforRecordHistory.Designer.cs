// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210720004632_newLinkforRecordHistory")]
    partial class newLinkforRecordHistory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("ad91816d-f7aa-45ff-b4e6-2afae577e55b"), AantalRecords = 0, Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("42e2857f-03ea-4ef4-952d-dcfb974ca31b"), AantalRecords = 0, Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("8648cfd4-4a5b-4e89-8b6f-96bcb93bca1b"), AantalRecords = 0, Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("13be705c-968d-400f-b78e-e26f03af2e90"), AantalRecords = 0, Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("01fbed77-ce92-4996-8fc2-6d85d62d15e3"), AantalRecords = 0, Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("8648cfd4-4a5b-4e89-8b6f-96bcb93bca1b"), SupporterId = new Guid("9477bb0f-3b0d-4361-996c-4a33927f4c46") },
                        new { ClubId = new Guid("ad91816d-f7aa-45ff-b4e6-2afae577e55b"), SupporterId = new Guid("5150e001-a7f1-4afc-805a-624ab3fb3c69") },
                        new { ClubId = new Guid("42e2857f-03ea-4ef4-952d-dcfb974ca31b"), SupporterId = new Guid("5150e001-a7f1-4afc-805a-624ab3fb3c69") },
                        new { ClubId = new Guid("8648cfd4-4a5b-4e89-8b6f-96bcb93bca1b"), SupporterId = new Guid("5150e001-a7f1-4afc-805a-624ab3fb3c69") },
                        new { ClubId = new Guid("13be705c-968d-400f-b78e-e26f03af2e90"), SupporterId = new Guid("5150e001-a7f1-4afc-805a-624ab3fb3c69") },
                        new { ClubId = new Guid("01fbed77-ce92-4996-8fc2-6d85d62d15e3"), SupporterId = new Guid("5150e001-a7f1-4afc-805a-624ab3fb3c69") },
                        new { ClubId = new Guid("42e2857f-03ea-4ef4-952d-dcfb974ca31b"), SupporterId = new Guid("687cdbf9-ad3b-4196-9150-c24fe3a9e900") },
                        new { ClubId = new Guid("8648cfd4-4a5b-4e89-8b6f-96bcb93bca1b"), SupporterId = new Guid("ee5b1add-7f60-425d-8c79-75aafaa6f506") },
                        new { ClubId = new Guid("ad91816d-f7aa-45ff-b4e6-2afae577e55b"), SupporterId = new Guid("9477bb0f-3b0d-4361-996c-4a33927f4c46") },
                        new { ClubId = new Guid("ad91816d-f7aa-45ff-b4e6-2afae577e55b"), SupporterId = new Guid("687cdbf9-ad3b-4196-9150-c24fe3a9e900") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("5150e001-a7f1-4afc-805a-624ab3fb3c69"), WielrennerId = new Guid("b86fcd8a-4bc3-499a-bebf-b302cd741df4") },
                        new { SupporterId = new Guid("ee5b1add-7f60-425d-8c79-75aafaa6f506"), WielrennerId = new Guid("980dda79-5259-44b0-a4b3-6ad74ecd1822") },
                        new { SupporterId = new Guid("5150e001-a7f1-4afc-805a-624ab3fb3c69"), WielrennerId = new Guid("ecb9368f-cddd-41ca-b800-558cdf257d8a") },
                        new { SupporterId = new Guid("9477bb0f-3b0d-4361-996c-4a33927f4c46"), WielrennerId = new Guid("b86fcd8a-4bc3-499a-bebf-b302cd741df4") },
                        new { SupporterId = new Guid("ee5b1add-7f60-425d-8c79-75aafaa6f506"), WielrennerId = new Guid("e87f18e3-cc94-4987-9a6e-90ccd59be2d7") },
                        new { SupporterId = new Guid("687cdbf9-ad3b-4196-9150-c24fe3a9e900"), WielrennerId = new Guid("980dda79-5259-44b0-a4b3-6ad74ecd1822") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("b57144cd-e3a3-462b-b212-d480273b43c2"), Merk = "B-Twin", WielrennerId = new Guid("b86fcd8a-4bc3-499a-bebf-b302cd741df4"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("7a17665b-ca8e-494c-954d-e1cd81313246"), Merk = "Moldava", WielrennerId = new Guid("ecb9368f-cddd-41ca-b800-558cdf257d8a"), Zadel = "Geel zadel" },
                        new { Id = new Guid("58ec35e7-fdb1-41d1-8803-3bd6f35b5b29"), Merk = "Merckx", WielrennerId = new Guid("e87f18e3-cc94-4987-9a6e-90ccd59be2d7"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aankomst");

                    b.Property<string>("Name");

                    b.Property<Guid>("PersoonId");

                    b.Property<string>("Start");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Ritten");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("5150e001-a7f1-4afc-805a-624ab3fb3c69"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("9477bb0f-3b0d-4361-996c-4a33927f4c46"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("687cdbf9-ad3b-4196-9150-c24fe3a9e900"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("ee5b1add-7f60-425d-8c79-75aafaa6f506"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("75d6bb69-a4dc-4c66-b1d3-165fedc46007"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("aab8316e-bf52-4768-b168-1d9926d8e57d"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("3a79fde0-de87-418b-b6f6-37823bcc702c"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("8d46eeb9-5e99-479e-bd6e-0d816117c4b0"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("c12b46d9-112b-442f-bca9-5246cf931263"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("998385b3-b7df-4f6f-bd2a-bc84908de3bd"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("74387139-7c9c-4fad-898f-0178c3d94c6c"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("8379484a-0ff1-47ae-ae33-681b192fe684"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<double>("GemiddeldKm_h");

                    b.Property<int>("GemiddeldeKM_Rit");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.Property<int>("WattageRecord");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("e87f18e3-cc94-4987-9a6e-90ccd59be2d7"), AantalRecords = 0, Achternaam = "Franckaert", ClubId = new Guid("42e2857f-03ea-4ef4-952d-dcfb974ca31b"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 31.0, GemiddeldeKM_Rit = 10, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 100, Voornaam = "Robin", WattageRecord = 55 },
                        new { Id = new Guid("b86fcd8a-4bc3-499a-bebf-b302cd741df4"), AantalRecords = 0, Achternaam = "Jansma", ClubId = new Guid("42e2857f-03ea-4ef4-952d-dcfb974ca31b"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 32.0, GemiddeldeKM_Rit = 20, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 101, Voornaam = "Johanna", WattageRecord = 66 },
                        new { Id = new Guid("ecb9368f-cddd-41ca-b800-558cdf257d8a"), AantalRecords = 0, Achternaam = "Vissers", ClubId = new Guid("8648cfd4-4a5b-4e89-8b6f-96bcb93bca1b"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 33.0, GemiddeldeKM_Rit = 30, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 102, Voornaam = "Bert", WattageRecord = 77 },
                        new { Id = new Guid("980dda79-5259-44b0-a4b3-6ad74ecd1822"), AantalRecords = 0, Achternaam = "Depardieu", ClubId = new Guid("42e2857f-03ea-4ef4-952d-dcfb974ca31b"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 34.0, GemiddeldeKM_Rit = 40, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Gerard", WattageRecord = 88 },
                        new { Id = new Guid("35c5e8d0-596a-47f9-b90e-066a19057990"), AantalRecords = 0, Achternaam = "Van Overmeire", ClubId = new Guid("ad91816d-f7aa-45ff-b4e6-2afae577e55b"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 35.0, GemiddeldeKM_Rit = 50, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 104, Voornaam = "Marc", WattageRecord = 99 },
                        new { Id = new Guid("cba457cf-add3-4695-b734-192583526be0"), AantalRecords = 0, Achternaam = "Camara", ClubId = new Guid("42e2857f-03ea-4ef4-952d-dcfb974ca31b"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 36.0, GemiddeldeKM_Rit = 60, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 105, Voornaam = "Herdy", WattageRecord = 41 },
                        new { Id = new Guid("6a20ea27-176a-446a-9c72-13a3842a3428"), AantalRecords = 0, Achternaam = "Donckerwolcke", ClubId = new Guid("8648cfd4-4a5b-4e89-8b6f-96bcb93bca1b"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 37.0, GemiddeldeKM_Rit = 70, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 106, Voornaam = "Thomas", WattageRecord = 105 },
                        new { Id = new Guid("836d943c-0ca5-45a1-83bf-89c48ae696a1"), AantalRecords = 0, Achternaam = "Garnaal", ClubId = new Guid("8648cfd4-4a5b-4e89-8b6f-96bcb93bca1b"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 38.0, GemiddeldeKM_Rit = 80, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 107, Voornaam = "Sofie", WattageRecord = 50 },
                        new { Id = new Guid("2de06264-3fb8-4222-a006-9c1388745167"), AantalRecords = 0, Achternaam = "Brokkenpap", ClubId = new Guid("01fbed77-ce92-4996-8fc2-6d85d62d15e3"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 39.0, GemiddeldeKM_Rit = 90, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 108, Voornaam = "Berend", WattageRecord = 30 },
                        new { Id = new Guid("89cb3954-5c2b-4948-b2ea-06551dd71f46"), AantalRecords = 0, Achternaam = "Mega", ClubId = new Guid("42e2857f-03ea-4ef4-952d-dcfb974ca31b"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 40.0, GemiddeldeKM_Rit = 5, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 109, Voornaam = "Mindy", WattageRecord = 31 },
                        new { Id = new Guid("e7518336-1beb-4142-89c8-c935e84dcb8f"), AantalRecords = 0, Achternaam = "Scarlet", ClubId = new Guid("13be705c-968d-400f-b78e-e26f03af2e90"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 41.0, GemiddeldeKM_Rit = 6, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Johanson", WattageRecord = 32 },
                        new { Id = new Guid("1e903ced-e72e-4411-bf44-c365e1b60ccd"), AantalRecords = 0, Achternaam = "Beukelaer", ClubId = new Guid("8648cfd4-4a5b-4e89-8b6f-96bcb93bca1b"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 42.0, GemiddeldeKM_Rit = 7, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Koekjes", WattageRecord = 33 },
                        new { Id = new Guid("60038384-05a6-4d63-b685-727dc52f466d"), AantalRecords = 0, Achternaam = "Mertens", ClubId = new Guid("42e2857f-03ea-4ef4-952d-dcfb974ca31b"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 43.0, GemiddeldeKM_Rit = 8, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 112, Voornaam = "Evelyne", WattageRecord = 34 },
                        new { Id = new Guid("03df1298-d547-4c0e-97ea-79cc89508817"), AantalRecords = 0, Achternaam = "VanHoof", ClubId = new Guid("13be705c-968d-400f-b78e-e26f03af2e90"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 44.0, GemiddeldeKM_Rit = 9, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 113, Voornaam = "Emily", WattageRecord = 35 },
                        new { Id = new Guid("a0a8635d-3706-4cb5-ab44-49f8ad36d0da"), AantalRecords = 0, Achternaam = "Vanderplas", ClubId = new Guid("42e2857f-03ea-4ef4-952d-dcfb974ca31b"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 45.0, GemiddeldeKM_Rit = 10, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 114, Voornaam = "Sonja", WattageRecord = 36 },
                        new { Id = new Guid("9e523d4a-b927-4786-a13c-55ed12afec8b"), AantalRecords = 0, Achternaam = "Bambino", ClubId = new Guid("42e2857f-03ea-4ef4-952d-dcfb974ca31b"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 46.0, GemiddeldeKM_Rit = 11, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 115, Voornaam = "Salvatore", WattageRecord = 37 },
                        new { Id = new Guid("8411411b-7a11-4bd6-aa00-04e49bb7e6b7"), AantalRecords = 0, Achternaam = "Zalinski", ClubId = new Guid("8648cfd4-4a5b-4e89-8b6f-96bcb93bca1b"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 47.0, GemiddeldeKM_Rit = 12, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 116, Voornaam = "Wosznjeck", WattageRecord = 38 },
                        new { Id = new Guid("a98f43cd-d118-46d0-bd43-c12b41416a21"), AantalRecords = 0, Achternaam = "Debruyne", ClubId = new Guid("01fbed77-ce92-4996-8fc2-6d85d62d15e3"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 48.0, GemiddeldeKM_Rit = 13, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 117, Voornaam = "Kevin", WattageRecord = 39 },
                        new { Id = new Guid("87ae63e4-82cb-4562-9b85-0d47c76aeb40"), AantalRecords = 0, Achternaam = "Hazard", ClubId = new Guid("ad91816d-f7aa-45ff-b4e6-2afae577e55b"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 49.0, GemiddeldeKM_Rit = 14, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 118, Voornaam = "Eden", WattageRecord = 21 },
                        new { Id = new Guid("0aa11f4c-d492-4d2b-a1bb-99190ffcd0b0"), AantalRecords = 0, Achternaam = "Evenepoel", ClubId = new Guid("ad91816d-f7aa-45ff-b4e6-2afae577e55b"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 50.0, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 119, Voornaam = "Remco", WattageRecord = 12 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Web.RecordZoeker.RecordHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<Guid>("RecordId");

                    b.Property<string>("Recordnaam");

                    b.Property<DateTime>("Timestamp");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("Id");

                    b.ToTable("RecordHistories");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Ritten")
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
