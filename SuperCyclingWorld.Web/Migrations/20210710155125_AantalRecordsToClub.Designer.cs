// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710155125_AantalRecordsToClub")]
    partial class AantalRecordsToClub
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("745b3969-eafd-4a37-939b-0a30f4d14c42"), Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("2e2c8704-567f-44db-a674-26649a31e243"), Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("ee17d8e0-ced4-4792-8404-c573c2d4ed04"), Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("5dad3bcd-5423-4b4d-9bbf-f73d8842772d"), Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("c5e50a47-1fa0-490f-bfd1-400416386ef8"), Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("ee17d8e0-ced4-4792-8404-c573c2d4ed04"), SupporterId = new Guid("9029ec6a-15f9-4eee-b274-89f57f81693c") },
                        new { ClubId = new Guid("745b3969-eafd-4a37-939b-0a30f4d14c42"), SupporterId = new Guid("5868e40d-dc2e-43ee-813f-1be6c012dcb0") },
                        new { ClubId = new Guid("2e2c8704-567f-44db-a674-26649a31e243"), SupporterId = new Guid("451c725a-45a2-4f9b-98c3-ce595352667f") },
                        new { ClubId = new Guid("ee17d8e0-ced4-4792-8404-c573c2d4ed04"), SupporterId = new Guid("806bda6a-84b8-453f-8e59-2d1ca7484c5d") },
                        new { ClubId = new Guid("745b3969-eafd-4a37-939b-0a30f4d14c42"), SupporterId = new Guid("9029ec6a-15f9-4eee-b274-89f57f81693c") },
                        new { ClubId = new Guid("c5e50a47-1fa0-490f-bfd1-400416386ef8"), SupporterId = new Guid("806bda6a-84b8-453f-8e59-2d1ca7484c5d") },
                        new { ClubId = new Guid("5dad3bcd-5423-4b4d-9bbf-f73d8842772d"), SupporterId = new Guid("5868e40d-dc2e-43ee-813f-1be6c012dcb0") },
                        new { ClubId = new Guid("745b3969-eafd-4a37-939b-0a30f4d14c42"), SupporterId = new Guid("451c725a-45a2-4f9b-98c3-ce595352667f") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("5868e40d-dc2e-43ee-813f-1be6c012dcb0"), WielrennerId = new Guid("5318234d-1318-4278-a69a-2c58fc0f8c24") },
                        new { SupporterId = new Guid("806bda6a-84b8-453f-8e59-2d1ca7484c5d"), WielrennerId = new Guid("a407a370-dbcc-4a82-af8d-9af308512d09") },
                        new { SupporterId = new Guid("5868e40d-dc2e-43ee-813f-1be6c012dcb0"), WielrennerId = new Guid("58470357-c242-446e-8dff-4bdf9c83a42c") },
                        new { SupporterId = new Guid("9029ec6a-15f9-4eee-b274-89f57f81693c"), WielrennerId = new Guid("5318234d-1318-4278-a69a-2c58fc0f8c24") },
                        new { SupporterId = new Guid("806bda6a-84b8-453f-8e59-2d1ca7484c5d"), WielrennerId = new Guid("dfaee7d0-a57c-4d96-8b20-b133120c1f6f") },
                        new { SupporterId = new Guid("451c725a-45a2-4f9b-98c3-ce595352667f"), WielrennerId = new Guid("a407a370-dbcc-4a82-af8d-9af308512d09") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("bae1b48a-4252-45fc-8c81-069e92858774"), Merk = "B-Twin", WielrennerId = new Guid("5318234d-1318-4278-a69a-2c58fc0f8c24"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("c14722c5-07af-43e4-8aaf-d5f3bc8faa95"), Merk = "Moldava", WielrennerId = new Guid("58470357-c242-446e-8dff-4bdf9c83a42c"), Zadel = "Geel zadel" },
                        new { Id = new Guid("c79d26da-d34c-41b8-9016-8584f47ebcda"), Merk = "Merckx", WielrennerId = new Guid("dfaee7d0-a57c-4d96-8b20-b133120c1f6f"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("5868e40d-dc2e-43ee-813f-1be6c012dcb0"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("9029ec6a-15f9-4eee-b274-89f57f81693c"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("451c725a-45a2-4f9b-98c3-ce595352667f"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("806bda6a-84b8-453f-8e59-2d1ca7484c5d"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("76efa838-c80f-4728-90bd-508670e1ffbf"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("92baf6f3-a96a-424f-9c3b-6f417bb56322"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("ee287df7-e81a-4cd2-a489-09027473f59f"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("67b57944-7889-4e2f-9caf-8d90a201881d"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("7129dce8-2512-44f4-81fe-645b32bf3aae"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("9b06436e-bc3a-4513-b472-738af1ecb252"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("04e39160-eba3-4a73-b64f-354f301dbe8a"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("ed9c6fa3-c097-4bba-9746-eec97166446e"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("dfaee7d0-a57c-4d96-8b20-b133120c1f6f"), Achternaam = "Franckaert", ClubId = new Guid("5dad3bcd-5423-4b4d-9bbf-f73d8842772d"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Robin" },
                        new { Id = new Guid("5318234d-1318-4278-a69a-2c58fc0f8c24"), Achternaam = "Jansma", ClubId = new Guid("5dad3bcd-5423-4b4d-9bbf-f73d8842772d"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 260, Voornaam = "Johanna" },
                        new { Id = new Guid("58470357-c242-446e-8dff-4bdf9c83a42c"), Achternaam = "Vissers", ClubId = new Guid("ee17d8e0-ced4-4792-8404-c573c2d4ed04"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 301, Voornaam = "Bert" },
                        new { Id = new Guid("a407a370-dbcc-4a82-af8d-9af308512d09"), Achternaam = "Depardieu", ClubId = new Guid("5dad3bcd-5423-4b4d-9bbf-f73d8842772d"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 85, Voornaam = "Gerard" },
                        new { Id = new Guid("77f2b596-ed80-49c7-9a15-8e764d01db63"), Achternaam = "Van Overmeire", ClubId = new Guid("5dad3bcd-5423-4b4d-9bbf-f73d8842772d"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 256, Voornaam = "Marc" },
                        new { Id = new Guid("0634ce45-8b83-4b96-be60-7651c709547b"), Achternaam = "Camara", ClubId = new Guid("5dad3bcd-5423-4b4d-9bbf-f73d8842772d"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 504, Voornaam = "Herdy" },
                        new { Id = new Guid("db54d54d-0da3-4655-9c52-6429a7a85395"), Achternaam = "Donckerwolcke", ClubId = new Guid("5dad3bcd-5423-4b4d-9bbf-f73d8842772d"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1100, Voornaam = "Thomas" },
                        new { Id = new Guid("04af8132-644e-42ce-922b-64e0e44843d8"), Achternaam = "Garnaal", ClubId = new Guid("c5e50a47-1fa0-490f-bfd1-400416386ef8"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 250, Voornaam = "Sofie" },
                        new { Id = new Guid("00eeeb2b-a733-4294-8bf4-c86a80e1a3be"), Achternaam = "Brokkenpap", ClubId = new Guid("c5e50a47-1fa0-490f-bfd1-400416386ef8"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 125, Voornaam = "Berend" },
                        new { Id = new Guid("17f26329-c361-4732-9f12-c3c005e09538"), Achternaam = "Mega", ClubId = new Guid("c5e50a47-1fa0-490f-bfd1-400416386ef8"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 568, Voornaam = "Mindy" },
                        new { Id = new Guid("cd5e5c4f-08e7-40e7-904e-1a3deaf6f64f"), Achternaam = "Scarlet", ClubId = new Guid("2e2c8704-567f-44db-a674-26649a31e243"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 308, Voornaam = "Johanson" },
                        new { Id = new Guid("206a866c-4b63-4a5a-8b21-e73e06c0b974"), Achternaam = "Beukelaer", ClubId = new Guid("c5e50a47-1fa0-490f-bfd1-400416386ef8"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Koekjes" },
                        new { Id = new Guid("40ebb97c-94c1-4482-afa3-4ec4379054d6"), Achternaam = "Mertens", ClubId = new Guid("ee17d8e0-ced4-4792-8404-c573c2d4ed04"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Evelyne" },
                        new { Id = new Guid("251a755e-8bda-4015-b14c-80a425b89f0b"), Achternaam = "VanHoof", ClubId = new Guid("745b3969-eafd-4a37-939b-0a30f4d14c42"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 306, Voornaam = "Emily" },
                        new { Id = new Guid("ca7d2a38-2650-4c6a-a3d5-3e1aeea8653f"), Achternaam = "Vanderplas", ClubId = new Guid("5dad3bcd-5423-4b4d-9bbf-f73d8842772d"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 59, Voornaam = "Sonja" },
                        new { Id = new Guid("3eac50db-3fe5-474e-b2d9-791818ac85a2"), Achternaam = "Bambino", ClubId = new Guid("5dad3bcd-5423-4b4d-9bbf-f73d8842772d"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 257, Voornaam = "Salvatore" },
                        new { Id = new Guid("0a56518b-abbb-46de-a33a-aac3557e08df"), Achternaam = "Zalinski", ClubId = new Guid("c5e50a47-1fa0-490f-bfd1-400416386ef8"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 233, Voornaam = "Wosznjeck" },
                        new { Id = new Guid("f0f5a076-5386-4103-8c7d-df44b0b589a4"), Achternaam = "Debruyne", ClubId = new Guid("ee17d8e0-ced4-4792-8404-c573c2d4ed04"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 450, Voornaam = "Kevin" },
                        new { Id = new Guid("382d98d2-52ae-4ee4-be1f-a4a0977e898f"), Achternaam = "Hazard", ClubId = new Guid("2e2c8704-567f-44db-a674-26649a31e243"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 23, Voornaam = "Eden" },
                        new { Id = new Guid("f2537ae5-9070-4f84-af99-4f90fd927029"), Achternaam = "Evenepoel", ClubId = new Guid("c5e50a47-1fa0-490f-bfd1-400416386ef8"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.Property<Guid>("RecordId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("RecordId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("WielrennerRecords");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany("WielrennerRecords")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Records")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
