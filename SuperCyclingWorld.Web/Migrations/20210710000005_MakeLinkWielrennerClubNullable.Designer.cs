// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710000005_MakeLinkWielrennerClubNullable")]
    partial class MakeLinkWielrennerClubNullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("b2e1ff3a-73eb-4c0d-a77a-be0da8566f84"), Clubnaam = "WTC" },
                        new { Id = new Guid("00d08bb8-d5f7-4265-9192-94caa9404ec9"), Clubnaam = "DCTV" },
                        new { Id = new Guid("48867849-c0b0-4b53-837e-39e9aec165bb"), Clubnaam = "De lustige rijders" },
                        new { Id = new Guid("67287cac-8b2e-4ae1-ba22-d2be0b96e66b"), Clubnaam = "WTC Melsele" },
                        new { Id = new Guid("32aca63b-f490-4016-a68e-542ac01b8e9b"), Clubnaam = "The master cyclists" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("48867849-c0b0-4b53-837e-39e9aec165bb"), SupporterId = new Guid("325ec1a7-e37d-497e-9d77-d0f4f9a50849") },
                        new { ClubId = new Guid("b2e1ff3a-73eb-4c0d-a77a-be0da8566f84"), SupporterId = new Guid("e39f6eb7-0bd3-47df-8502-070ed309c3e9") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("e39f6eb7-0bd3-47df-8502-070ed309c3e9"), WielrennerId = new Guid("0fa40bbc-a8be-470d-91d4-35314132af86") },
                        new { SupporterId = new Guid("c485fcf3-79c2-46fd-a6a6-39396ae2951a"), WielrennerId = new Guid("8af338af-4036-4de0-b8e8-ac78266ad774") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("96541709-35c6-4b4a-a80a-66f3a4fa0480"), Merk = "B-Twin", WielrennerId = new Guid("0fa40bbc-a8be-470d-91d4-35314132af86"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("159f2c00-3d7b-4b87-80f5-2fcaa88bfb11"), Merk = "Moldava", WielrennerId = new Guid("0cbcd1b1-c221-4057-af34-ddcaf7def7e8"), Zadel = "Geel zadel" },
                        new { Id = new Guid("91d29a02-e128-4281-a77c-c2c70dab3e63"), Merk = "Merckx", WielrennerId = new Guid("28b464d7-acb8-4901-82e4-2fec3760dd23"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("e39f6eb7-0bd3-47df-8502-070ed309c3e9"), Achternaam = "The Pooh", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Winnie" },
                        new { Id = new Guid("325ec1a7-e37d-497e-9d77-d0f4f9a50849"), Achternaam = "Van Achtmaal", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Thomas" },
                        new { Id = new Guid("a3ec6493-a912-4cb1-b4c8-77c9eff052f3"), Achternaam = "VanKerkhove", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Nico" },
                        new { Id = new Guid("c485fcf3-79c2-46fd-a6a6-39396ae2951a"), Achternaam = "Kronenburg", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Koen" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid?>("ClubId")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("28b464d7-acb8-4901-82e4-2fec3760dd23"), Achternaam = "Franckaert", ClubId = new Guid("b2e1ff3a-73eb-4c0d-a77a-be0da8566f84"), GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Robin" },
                        new { Id = new Guid("0fa40bbc-a8be-470d-91d4-35314132af86"), Achternaam = "Jansma", ClubId = new Guid("00d08bb8-d5f7-4265-9192-94caa9404ec9"), GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Johanna" },
                        new { Id = new Guid("0cbcd1b1-c221-4057-af34-ddcaf7def7e8"), Achternaam = "Vissers", ClubId = new Guid("48867849-c0b0-4b53-837e-39e9aec165bb"), GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Bert" },
                        new { Id = new Guid("8af338af-4036-4de0-b8e8-ac78266ad774"), Achternaam = "Depardieu", ClubId = new Guid("67287cac-8b2e-4ae1-ba22-d2be0b96e66b"), GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Gerard" },
                        new { Id = new Guid("61269fd3-6696-44f6-bb71-55bca62f599c"), Achternaam = "Van Overmeire", ClubId = new Guid("32aca63b-f490-4016-a68e-542ac01b8e9b"), GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Marc" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
