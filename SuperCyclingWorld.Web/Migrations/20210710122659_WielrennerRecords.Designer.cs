// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710122659_WielrennerRecords")]
    partial class WielrennerRecords
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("6578a3ea-08b1-4049-8790-9a6bc38974bc"), Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("97ed76cb-9f8e-4547-a293-0947533c6322"), Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("8318f2f2-cf36-46ff-ac34-57bf167dd9f7"), Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("eb397a64-2044-46a5-b044-993e052dbe21"), Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("a0954cf7-796d-4bbc-9123-7fb9dde1ce13"), Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("8318f2f2-cf36-46ff-ac34-57bf167dd9f7"), SupporterId = new Guid("fe015baa-02dc-4ce8-bc73-d3d833978b84") },
                        new { ClubId = new Guid("6578a3ea-08b1-4049-8790-9a6bc38974bc"), SupporterId = new Guid("14f5678d-6304-4acd-aa8f-ae8b810f76ff") },
                        new { ClubId = new Guid("97ed76cb-9f8e-4547-a293-0947533c6322"), SupporterId = new Guid("b9c2dd2c-a44d-466c-bf0c-7118f96db0cd") },
                        new { ClubId = new Guid("8318f2f2-cf36-46ff-ac34-57bf167dd9f7"), SupporterId = new Guid("c8e89702-d798-4a9d-b021-916f55088f9c") },
                        new { ClubId = new Guid("6578a3ea-08b1-4049-8790-9a6bc38974bc"), SupporterId = new Guid("fe015baa-02dc-4ce8-bc73-d3d833978b84") },
                        new { ClubId = new Guid("a0954cf7-796d-4bbc-9123-7fb9dde1ce13"), SupporterId = new Guid("c8e89702-d798-4a9d-b021-916f55088f9c") },
                        new { ClubId = new Guid("eb397a64-2044-46a5-b044-993e052dbe21"), SupporterId = new Guid("14f5678d-6304-4acd-aa8f-ae8b810f76ff") },
                        new { ClubId = new Guid("6578a3ea-08b1-4049-8790-9a6bc38974bc"), SupporterId = new Guid("b9c2dd2c-a44d-466c-bf0c-7118f96db0cd") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("14f5678d-6304-4acd-aa8f-ae8b810f76ff"), WielrennerId = new Guid("891e1273-1fee-430e-b94b-9ebb9c2d5cb2") },
                        new { SupporterId = new Guid("c8e89702-d798-4a9d-b021-916f55088f9c"), WielrennerId = new Guid("0072bde4-324b-4bec-bd3d-11f8b3a8d429") },
                        new { SupporterId = new Guid("14f5678d-6304-4acd-aa8f-ae8b810f76ff"), WielrennerId = new Guid("4eb535cf-f66d-4e1c-9eeb-944e49a14ca5") },
                        new { SupporterId = new Guid("fe015baa-02dc-4ce8-bc73-d3d833978b84"), WielrennerId = new Guid("891e1273-1fee-430e-b94b-9ebb9c2d5cb2") },
                        new { SupporterId = new Guid("c8e89702-d798-4a9d-b021-916f55088f9c"), WielrennerId = new Guid("b8ae5f5c-52ff-4c89-a193-d3673aee30d2") },
                        new { SupporterId = new Guid("b9c2dd2c-a44d-466c-bf0c-7118f96db0cd"), WielrennerId = new Guid("0072bde4-324b-4bec-bd3d-11f8b3a8d429") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("a8b0834e-5e9b-4804-8887-684ba4b5bef1"), Merk = "B-Twin", WielrennerId = new Guid("891e1273-1fee-430e-b94b-9ebb9c2d5cb2"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("99061927-f768-4d86-b5e1-b66d8a6dedb1"), Merk = "Moldava", WielrennerId = new Guid("4eb535cf-f66d-4e1c-9eeb-944e49a14ca5"), Zadel = "Geel zadel" },
                        new { Id = new Guid("922f07e7-5239-4626-a6d0-0df059231bfa"), Merk = "Merckx", WielrennerId = new Guid("b8ae5f5c-52ff-4c89-a193-d3673aee30d2"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Record");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("14f5678d-6304-4acd-aa8f-ae8b810f76ff"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("fe015baa-02dc-4ce8-bc73-d3d833978b84"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("b9c2dd2c-a44d-466c-bf0c-7118f96db0cd"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("c8e89702-d798-4a9d-b021-916f55088f9c"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("7e9bac83-be9e-4c80-ba30-a3b6a05b4238"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("22515542-1fa1-4dd2-b5e0-8d13e0933f8c"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("0f1c2d6d-18ca-4cf5-8f1c-ab1008abb023"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("13c6d9e6-db14-4424-8977-0f2fdbb2972b"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("429b606e-78b0-43e8-bed4-5c9360805eb2"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("097a08ed-4c10-4b5a-8257-90ff8c7442bb"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("cfdc0a9b-146c-431d-856c-6082756341d0"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("1bea80c7-941c-444b-91af-eb9fd9f6262a"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid?>("ClubId")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("b8ae5f5c-52ff-4c89-a193-d3673aee30d2"), Achternaam = "Franckaert", ClubId = new Guid("6578a3ea-08b1-4049-8790-9a6bc38974bc"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Robin" },
                        new { Id = new Guid("891e1273-1fee-430e-b94b-9ebb9c2d5cb2"), Achternaam = "Jansma", ClubId = new Guid("eb397a64-2044-46a5-b044-993e052dbe21"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Johanna" },
                        new { Id = new Guid("4eb535cf-f66d-4e1c-9eeb-944e49a14ca5"), Achternaam = "Vissers", ClubId = new Guid("a0954cf7-796d-4bbc-9123-7fb9dde1ce13"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("0072bde4-324b-4bec-bd3d-11f8b3a8d429"), Achternaam = "Depardieu", ClubId = new Guid("a0954cf7-796d-4bbc-9123-7fb9dde1ce13"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Gerard" },
                        new { Id = new Guid("d48a8bd2-e377-43eb-b843-54e8ee4bc3b7"), Achternaam = "Van Overmeire", ClubId = new Guid("6578a3ea-08b1-4049-8790-9a6bc38974bc"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marc" },
                        new { Id = new Guid("13bfbcb7-b5eb-429d-9dcc-bcd23f951847"), Achternaam = "Camara", ClubId = new Guid("6578a3ea-08b1-4049-8790-9a6bc38974bc"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Herdy" },
                        new { Id = new Guid("973a8a73-ba2f-460a-85c8-dbb7dceb7cb5"), Achternaam = "Donckerwolcke", ClubId = new Guid("a0954cf7-796d-4bbc-9123-7fb9dde1ce13"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("691c388c-aed4-4b21-a0bd-82da980fa6ff"), Achternaam = "Garnaal", ClubId = new Guid("a0954cf7-796d-4bbc-9123-7fb9dde1ce13"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Sofie" },
                        new { Id = new Guid("3f840b58-310a-4584-a47b-6d967339280b"), Achternaam = "Brokkenpap", ClubId = new Guid("6578a3ea-08b1-4049-8790-9a6bc38974bc"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Berend" },
                        new { Id = new Guid("41bf269d-5cdd-4961-9c7a-cb10bed065b6"), Achternaam = "Mega", ClubId = new Guid("97ed76cb-9f8e-4547-a293-0947533c6322"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Mindy" },
                        new { Id = new Guid("f7da1553-d0b5-4c68-ae5f-ff88b8f7213a"), Achternaam = "Scarlet", ClubId = new Guid("a0954cf7-796d-4bbc-9123-7fb9dde1ce13"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Johanson" },
                        new { Id = new Guid("32aa830f-acaa-448e-a31a-acf3b62bf2b2"), Achternaam = "Beukelaer", ClubId = new Guid("97ed76cb-9f8e-4547-a293-0947533c6322"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koekjes" },
                        new { Id = new Guid("c9c46416-1337-48fb-aeab-88ba6db2bb8c"), Achternaam = "Mertens", ClubId = new Guid("6578a3ea-08b1-4049-8790-9a6bc38974bc"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Evelyne" },
                        new { Id = new Guid("fafab49e-a3be-4ddd-b5d9-23b94017c4b8"), Achternaam = "VanHoof", ClubId = new Guid("a0954cf7-796d-4bbc-9123-7fb9dde1ce13"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Emily" },
                        new { Id = new Guid("c4448a46-dc96-4d59-a14a-fa4f178aefe1"), Achternaam = "Vanderplas", ClubId = new Guid("97ed76cb-9f8e-4547-a293-0947533c6322"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Sonja" },
                        new { Id = new Guid("343c422e-79d3-4cdf-83c2-1f9bdc06b2db"), Achternaam = "Bambino", ClubId = new Guid("8318f2f2-cf36-46ff-ac34-57bf167dd9f7"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Salvatore" },
                        new { Id = new Guid("72764d21-0f0c-49b0-9138-e0697b5305af"), Achternaam = "Zalinski", ClubId = new Guid("6578a3ea-08b1-4049-8790-9a6bc38974bc"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Wosznjeck" },
                        new { Id = new Guid("60ba045e-9c5c-4221-bba9-38ca1f1d4ab0"), Achternaam = "Debruyne", ClubId = new Guid("a0954cf7-796d-4bbc-9123-7fb9dde1ce13"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Kevin" },
                        new { Id = new Guid("3b91dc4c-e965-4c60-a276-3eebb3b22aaf"), Achternaam = "Hazard", ClubId = new Guid("8318f2f2-cf36-46ff-ac34-57bf167dd9f7"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Eden" },
                        new { Id = new Guid("d192323a-38af-44c3-b8dd-b7b84571ebc3"), Achternaam = "Evenepoel", ClubId = new Guid("8318f2f2-cf36-46ff-ac34-57bf167dd9f7"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.Property<Guid>("RecordId");

                    b.Property<Guid>("WielrennersId");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("RecordId", "WielrennersId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("WielrennerRecords");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany()
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Records")
                        .HasForeignKey("WielrennerId");
                });
#pragma warning restore 612, 618
        }
    }
}
