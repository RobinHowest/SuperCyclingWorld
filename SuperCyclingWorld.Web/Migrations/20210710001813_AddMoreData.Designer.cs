// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710001813_AddMoreData")]
    partial class AddMoreData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("a341cac4-58ba-43ad-bbda-5f703065dd38"), Clubnaam = "WTC" },
                        new { Id = new Guid("b525fa9c-b993-4366-8711-80a3cca5b163"), Clubnaam = "DCTV" },
                        new { Id = new Guid("cb3b0acd-aff1-4bab-8428-d5c540d52120"), Clubnaam = "De lustige rijders" },
                        new { Id = new Guid("c203f560-6d5d-49e3-ad54-08a929ab9bcf"), Clubnaam = "WTC Melsele" },
                        new { Id = new Guid("f7f9b309-5874-4bba-a411-29fb9250e163"), Clubnaam = "The master cyclists" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("cb3b0acd-aff1-4bab-8428-d5c540d52120"), SupporterId = new Guid("5c2e5c9a-947b-4e57-a858-df95e0e28514") },
                        new { ClubId = new Guid("a341cac4-58ba-43ad-bbda-5f703065dd38"), SupporterId = new Guid("fc77f870-5d67-4b33-9c23-c0fe68d76979") },
                        new { ClubId = new Guid("b525fa9c-b993-4366-8711-80a3cca5b163"), SupporterId = new Guid("06bc3217-7455-406a-9f59-9f01f6ccd413") },
                        new { ClubId = new Guid("cb3b0acd-aff1-4bab-8428-d5c540d52120"), SupporterId = new Guid("b7ed3989-5b95-4d88-88a3-cfeef159d71d") },
                        new { ClubId = new Guid("a341cac4-58ba-43ad-bbda-5f703065dd38"), SupporterId = new Guid("5c2e5c9a-947b-4e57-a858-df95e0e28514") },
                        new { ClubId = new Guid("f7f9b309-5874-4bba-a411-29fb9250e163"), SupporterId = new Guid("b7ed3989-5b95-4d88-88a3-cfeef159d71d") },
                        new { ClubId = new Guid("c203f560-6d5d-49e3-ad54-08a929ab9bcf"), SupporterId = new Guid("fc77f870-5d67-4b33-9c23-c0fe68d76979") },
                        new { ClubId = new Guid("a341cac4-58ba-43ad-bbda-5f703065dd38"), SupporterId = new Guid("06bc3217-7455-406a-9f59-9f01f6ccd413") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("fc77f870-5d67-4b33-9c23-c0fe68d76979"), WielrennerId = new Guid("9dee5d07-9324-4faa-ab8f-3d1ad122cfe2") },
                        new { SupporterId = new Guid("b7ed3989-5b95-4d88-88a3-cfeef159d71d"), WielrennerId = new Guid("35267da1-50b3-42e8-b150-d62501ebb305") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("95976d72-83e9-403f-a9d5-3352d1dde34b"), Merk = "B-Twin", WielrennerId = new Guid("9dee5d07-9324-4faa-ab8f-3d1ad122cfe2"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("15a57e79-be6f-4987-93b6-7f0b4cab549b"), Merk = "Moldava", WielrennerId = new Guid("8ea21d26-8860-479d-920f-1234f94fc490"), Zadel = "Geel zadel" },
                        new { Id = new Guid("a9d48cae-6080-4fee-a6bc-8fb798259b4a"), Merk = "Merckx", WielrennerId = new Guid("c5d3923c-7277-46e9-acb7-057c915fc35a"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("fc77f870-5d67-4b33-9c23-c0fe68d76979"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("5c2e5c9a-947b-4e57-a858-df95e0e28514"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("06bc3217-7455-406a-9f59-9f01f6ccd413"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("b7ed3989-5b95-4d88-88a3-cfeef159d71d"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid?>("ClubId")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("c5d3923c-7277-46e9-acb7-057c915fc35a"), Achternaam = "Franckaert", ClubId = new Guid("a341cac4-58ba-43ad-bbda-5f703065dd38"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Robin" },
                        new { Id = new Guid("9dee5d07-9324-4faa-ab8f-3d1ad122cfe2"), Achternaam = "Jansma", ClubId = new Guid("b525fa9c-b993-4366-8711-80a3cca5b163"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Johanna" },
                        new { Id = new Guid("8ea21d26-8860-479d-920f-1234f94fc490"), Achternaam = "Vissers", ClubId = new Guid("cb3b0acd-aff1-4bab-8428-d5c540d52120"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("35267da1-50b3-42e8-b150-d62501ebb305"), Achternaam = "Depardieu", ClubId = new Guid("c203f560-6d5d-49e3-ad54-08a929ab9bcf"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Gerard" },
                        new { Id = new Guid("81528586-62c4-414a-89c9-5613f847ef08"), Achternaam = "Van Overmeire", ClubId = new Guid("f7f9b309-5874-4bba-a411-29fb9250e163"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marc" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
