// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710000428_CorrectFullSeed")]
    partial class CorrectFullSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("825641d4-280f-4d9a-9297-7443d8a62f88"), Clubnaam = "WTC" },
                        new { Id = new Guid("1514d656-9f72-4a69-b1d9-84d937db1dd7"), Clubnaam = "DCTV" },
                        new { Id = new Guid("c92889ba-f116-4be1-8691-d3edf72d26c4"), Clubnaam = "De lustige rijders" },
                        new { Id = new Guid("cb407ed9-3a28-4505-8ecf-fa102c536ef3"), Clubnaam = "WTC Melsele" },
                        new { Id = new Guid("a90d2b88-b68d-46df-8c41-c98aaff558df"), Clubnaam = "The master cyclists" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("c92889ba-f116-4be1-8691-d3edf72d26c4"), SupporterId = new Guid("eb3be317-94f1-4b6f-9354-554099f36551") },
                        new { ClubId = new Guid("825641d4-280f-4d9a-9297-7443d8a62f88"), SupporterId = new Guid("f7e1a1e0-7c1e-4302-aa2e-1e898adb7a90") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("f7e1a1e0-7c1e-4302-aa2e-1e898adb7a90"), WielrennerId = new Guid("e3cc3bdb-2cf2-42bb-a59c-874e2686bfcb") },
                        new { SupporterId = new Guid("13b6812a-14a1-4ff7-ac71-a00f3be721f4"), WielrennerId = new Guid("04c3cbda-23fa-425d-a727-3fbe8a192e27") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("cf981342-1e5e-4466-be11-604416f09cb6"), Merk = "B-Twin", WielrennerId = new Guid("e3cc3bdb-2cf2-42bb-a59c-874e2686bfcb"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("8b243a18-bf1f-4662-9255-4d312e9c8043"), Merk = "Moldava", WielrennerId = new Guid("78445b86-2c9e-4bd8-bafc-20a82f14c287"), Zadel = "Geel zadel" },
                        new { Id = new Guid("56e3ac8e-a800-4aba-ac3f-48d4fdcbf814"), Merk = "Merckx", WielrennerId = new Guid("3f1e09d0-1d6d-4266-b332-85a447dabfbf"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("f7e1a1e0-7c1e-4302-aa2e-1e898adb7a90"), Achternaam = "The Pooh", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Winnie" },
                        new { Id = new Guid("eb3be317-94f1-4b6f-9354-554099f36551"), Achternaam = "Van Achtmaal", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Thomas" },
                        new { Id = new Guid("44f4e620-1d7b-40e5-98ca-fe9d563aecf6"), Achternaam = "VanKerkhove", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Nico" },
                        new { Id = new Guid("13b6812a-14a1-4ff7-ac71-a00f3be721f4"), Achternaam = "Kronenburg", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "123", Voornaam = "Koen" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid?>("ClubId")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("3f1e09d0-1d6d-4266-b332-85a447dabfbf"), Achternaam = "Franckaert", ClubId = new Guid("825641d4-280f-4d9a-9297-7443d8a62f88"), GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Robin" },
                        new { Id = new Guid("e3cc3bdb-2cf2-42bb-a59c-874e2686bfcb"), Achternaam = "Jansma", ClubId = new Guid("1514d656-9f72-4a69-b1d9-84d937db1dd7"), GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Johanna" },
                        new { Id = new Guid("78445b86-2c9e-4bd8-bafc-20a82f14c287"), Achternaam = "Vissers", ClubId = new Guid("c92889ba-f116-4be1-8691-d3edf72d26c4"), GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("04c3cbda-23fa-425d-a727-3fbe8a192e27"), Achternaam = "Depardieu", ClubId = new Guid("cb407ed9-3a28-4505-8ecf-fa102c536ef3"), GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Gerard" },
                        new { Id = new Guid("8a4ee18b-9fe3-43f1-9450-26f7ea13f652"), Achternaam = "Van Overmeire", ClubId = new Guid("a90d2b88-b68d-46df-8c41-c98aaff558df"), GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marc" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
