// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210719234740_AddWattageToWielrenners")]
    partial class AddWattageToWielrenners
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("230c4718-aefe-47da-998b-ecd6377a8837"), AantalRecords = 0, Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("7ad261ce-b2bb-4810-b2c6-968d7e64dd95"), AantalRecords = 0, Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("4533a7c2-90cd-4e81-aedf-59341a3aa662"), AantalRecords = 0, Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("f18b7c45-1872-49de-95ae-09b4a292b97c"), AantalRecords = 0, Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("87d66671-6599-483c-b02a-abca56747af9"), AantalRecords = 0, Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("4533a7c2-90cd-4e81-aedf-59341a3aa662"), SupporterId = new Guid("a2d1b03a-37c5-41e1-a97e-3215d3c3bc24") },
                        new { ClubId = new Guid("230c4718-aefe-47da-998b-ecd6377a8837"), SupporterId = new Guid("874b9406-7732-47d0-9e43-d812d6789317") },
                        new { ClubId = new Guid("7ad261ce-b2bb-4810-b2c6-968d7e64dd95"), SupporterId = new Guid("874b9406-7732-47d0-9e43-d812d6789317") },
                        new { ClubId = new Guid("4533a7c2-90cd-4e81-aedf-59341a3aa662"), SupporterId = new Guid("874b9406-7732-47d0-9e43-d812d6789317") },
                        new { ClubId = new Guid("f18b7c45-1872-49de-95ae-09b4a292b97c"), SupporterId = new Guid("874b9406-7732-47d0-9e43-d812d6789317") },
                        new { ClubId = new Guid("87d66671-6599-483c-b02a-abca56747af9"), SupporterId = new Guid("874b9406-7732-47d0-9e43-d812d6789317") },
                        new { ClubId = new Guid("7ad261ce-b2bb-4810-b2c6-968d7e64dd95"), SupporterId = new Guid("02afb729-62a0-4ea8-b456-937e31f466a4") },
                        new { ClubId = new Guid("4533a7c2-90cd-4e81-aedf-59341a3aa662"), SupporterId = new Guid("38b7fb3b-faab-4cae-b0e0-e1f6f3004be8") },
                        new { ClubId = new Guid("230c4718-aefe-47da-998b-ecd6377a8837"), SupporterId = new Guid("a2d1b03a-37c5-41e1-a97e-3215d3c3bc24") },
                        new { ClubId = new Guid("230c4718-aefe-47da-998b-ecd6377a8837"), SupporterId = new Guid("02afb729-62a0-4ea8-b456-937e31f466a4") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("874b9406-7732-47d0-9e43-d812d6789317"), WielrennerId = new Guid("fd7a8758-f0dd-4e0d-938b-a518b739cb78") },
                        new { SupporterId = new Guid("38b7fb3b-faab-4cae-b0e0-e1f6f3004be8"), WielrennerId = new Guid("4edc29c8-ee9a-4e09-bec4-4ed1a2aa39a7") },
                        new { SupporterId = new Guid("874b9406-7732-47d0-9e43-d812d6789317"), WielrennerId = new Guid("09e38bda-45f7-4da0-8646-af37771a4a2a") },
                        new { SupporterId = new Guid("a2d1b03a-37c5-41e1-a97e-3215d3c3bc24"), WielrennerId = new Guid("fd7a8758-f0dd-4e0d-938b-a518b739cb78") },
                        new { SupporterId = new Guid("38b7fb3b-faab-4cae-b0e0-e1f6f3004be8"), WielrennerId = new Guid("3794a162-4ee1-409f-b817-eb9705b3fcfe") },
                        new { SupporterId = new Guid("02afb729-62a0-4ea8-b456-937e31f466a4"), WielrennerId = new Guid("4edc29c8-ee9a-4e09-bec4-4ed1a2aa39a7") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("5664d80b-4592-4ffa-93ce-ac4e823892e0"), Merk = "B-Twin", WielrennerId = new Guid("fd7a8758-f0dd-4e0d-938b-a518b739cb78"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("066b5640-bd16-48a7-9c8d-6a16007a1bde"), Merk = "Moldava", WielrennerId = new Guid("09e38bda-45f7-4da0-8646-af37771a4a2a"), Zadel = "Geel zadel" },
                        new { Id = new Guid("d2d0ef24-9686-4550-8de7-63afcdc22960"), Merk = "Merckx", WielrennerId = new Guid("3794a162-4ee1-409f-b817-eb9705b3fcfe"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<string>("Thropy");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Record");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Aankomst");

                    b.Property<string>("Name");

                    b.Property<Guid>("PersoonId");

                    b.Property<string>("Start");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Ritten");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("874b9406-7732-47d0-9e43-d812d6789317"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("a2d1b03a-37c5-41e1-a97e-3215d3c3bc24"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("02afb729-62a0-4ea8-b456-937e31f466a4"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("38b7fb3b-faab-4cae-b0e0-e1f6f3004be8"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("c10dc505-2316-4920-bd43-65827f112fbf"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("1a74c971-91b8-4052-9ae0-d6603c0a3e26"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("6b18f5f1-3aec-453e-a8cf-cbcfbd1cd623"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("04c22870-db87-44ba-8826-dfddff287f16"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("87baa3df-73fd-4610-a74c-65384cbc6a7a"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("d503544a-5236-4215-bb29-0a438d66c0ca"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("948b42de-98ef-40a5-b632-04b83762e13e"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("ee7ee5ec-c062-49ac-aa0a-3c649c77dc1d"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<double>("GemiddeldKm_h");

                    b.Property<int>("GemiddeldeKM_Rit");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.Property<int>("WattageRecord");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("3794a162-4ee1-409f-b817-eb9705b3fcfe"), AantalRecords = 0, Achternaam = "Franckaert", ClubId = new Guid("7ad261ce-b2bb-4810-b2c6-968d7e64dd95"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 31.0, GemiddeldeKM_Rit = 10, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 100, Voornaam = "Robin", WattageRecord = 55 },
                        new { Id = new Guid("fd7a8758-f0dd-4e0d-938b-a518b739cb78"), AantalRecords = 0, Achternaam = "Jansma", ClubId = new Guid("f18b7c45-1872-49de-95ae-09b4a292b97c"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 32.0, GemiddeldeKM_Rit = 20, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 101, Voornaam = "Johanna", WattageRecord = 66 },
                        new { Id = new Guid("09e38bda-45f7-4da0-8646-af37771a4a2a"), AantalRecords = 0, Achternaam = "Vissers", ClubId = new Guid("7ad261ce-b2bb-4810-b2c6-968d7e64dd95"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 33.0, GemiddeldeKM_Rit = 30, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 102, Voornaam = "Bert", WattageRecord = 77 },
                        new { Id = new Guid("4edc29c8-ee9a-4e09-bec4-4ed1a2aa39a7"), AantalRecords = 0, Achternaam = "Depardieu", ClubId = new Guid("4533a7c2-90cd-4e81-aedf-59341a3aa662"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 34.0, GemiddeldeKM_Rit = 40, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Gerard", WattageRecord = 88 },
                        new { Id = new Guid("32f6aba1-d349-45a9-a9cd-1ad70b26ed65"), AantalRecords = 0, Achternaam = "Van Overmeire", ClubId = new Guid("230c4718-aefe-47da-998b-ecd6377a8837"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 35.0, GemiddeldeKM_Rit = 50, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 104, Voornaam = "Marc", WattageRecord = 99 },
                        new { Id = new Guid("67293b00-f9e8-4f4c-8a63-380143e43b8e"), AantalRecords = 0, Achternaam = "Camara", ClubId = new Guid("7ad261ce-b2bb-4810-b2c6-968d7e64dd95"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 36.0, GemiddeldeKM_Rit = 60, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 105, Voornaam = "Herdy", WattageRecord = 41 },
                        new { Id = new Guid("231f75a4-84ad-44f6-9032-e9b44ac37567"), AantalRecords = 0, Achternaam = "Donckerwolcke", ClubId = new Guid("87d66671-6599-483c-b02a-abca56747af9"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 37.0, GemiddeldeKM_Rit = 70, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 106, Voornaam = "Thomas", WattageRecord = 105 },
                        new { Id = new Guid("2218c363-a8fa-4ed6-b019-c6eb7a55b211"), AantalRecords = 0, Achternaam = "Garnaal", ClubId = new Guid("f18b7c45-1872-49de-95ae-09b4a292b97c"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 38.0, GemiddeldeKM_Rit = 80, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 107, Voornaam = "Sofie", WattageRecord = 50 },
                        new { Id = new Guid("afe8145c-bba3-42b4-932e-11ac03444407"), AantalRecords = 0, Achternaam = "Brokkenpap", ClubId = new Guid("7ad261ce-b2bb-4810-b2c6-968d7e64dd95"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 39.0, GemiddeldeKM_Rit = 90, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 108, Voornaam = "Berend", WattageRecord = 30 },
                        new { Id = new Guid("2af1658e-e7bf-4910-9d85-5d96d9b9b99a"), AantalRecords = 0, Achternaam = "Mega", ClubId = new Guid("230c4718-aefe-47da-998b-ecd6377a8837"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 40.0, GemiddeldeKM_Rit = 5, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 109, Voornaam = "Mindy", WattageRecord = 31 },
                        new { Id = new Guid("0ea2c770-d9ae-4dce-8167-a2ca8be4ec32"), AantalRecords = 0, Achternaam = "Scarlet", ClubId = new Guid("230c4718-aefe-47da-998b-ecd6377a8837"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 41.0, GemiddeldeKM_Rit = 6, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Johanson", WattageRecord = 32 },
                        new { Id = new Guid("19106615-be3e-48b1-9017-6f0fd91b6e19"), AantalRecords = 0, Achternaam = "Beukelaer", ClubId = new Guid("87d66671-6599-483c-b02a-abca56747af9"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 42.0, GemiddeldeKM_Rit = 7, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Koekjes", WattageRecord = 33 },
                        new { Id = new Guid("ecac6b8c-1570-4c73-8b00-a924c761cd0a"), AantalRecords = 0, Achternaam = "Mertens", ClubId = new Guid("230c4718-aefe-47da-998b-ecd6377a8837"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 43.0, GemiddeldeKM_Rit = 8, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 112, Voornaam = "Evelyne", WattageRecord = 34 },
                        new { Id = new Guid("f485ed8b-ba3c-477d-bd02-a30a62a346bd"), AantalRecords = 0, Achternaam = "VanHoof", ClubId = new Guid("230c4718-aefe-47da-998b-ecd6377a8837"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 44.0, GemiddeldeKM_Rit = 9, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 113, Voornaam = "Emily", WattageRecord = 35 },
                        new { Id = new Guid("edbacb65-46bb-4675-99f6-76dcdbef252a"), AantalRecords = 0, Achternaam = "Vanderplas", ClubId = new Guid("f18b7c45-1872-49de-95ae-09b4a292b97c"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 45.0, GemiddeldeKM_Rit = 10, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 114, Voornaam = "Sonja", WattageRecord = 36 },
                        new { Id = new Guid("2573986f-d42a-4a91-b0eb-caecf65c3fd6"), AantalRecords = 0, Achternaam = "Bambino", ClubId = new Guid("4533a7c2-90cd-4e81-aedf-59341a3aa662"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 46.0, GemiddeldeKM_Rit = 11, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 115, Voornaam = "Salvatore", WattageRecord = 37 },
                        new { Id = new Guid("c10cdece-a870-41c8-84d4-af539187b5db"), AantalRecords = 0, Achternaam = "Zalinski", ClubId = new Guid("87d66671-6599-483c-b02a-abca56747af9"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 47.0, GemiddeldeKM_Rit = 12, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 116, Voornaam = "Wosznjeck", WattageRecord = 38 },
                        new { Id = new Guid("0c2fd336-7a65-4caf-99b6-d4bcf6c51777"), AantalRecords = 0, Achternaam = "Debruyne", ClubId = new Guid("7ad261ce-b2bb-4810-b2c6-968d7e64dd95"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 48.0, GemiddeldeKM_Rit = 13, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 117, Voornaam = "Kevin", WattageRecord = 39 },
                        new { Id = new Guid("fccd1cda-e8fe-4c34-9ae6-3c45062c224d"), AantalRecords = 0, Achternaam = "Hazard", ClubId = new Guid("f18b7c45-1872-49de-95ae-09b4a292b97c"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 49.0, GemiddeldeKM_Rit = 14, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 118, Voornaam = "Eden", WattageRecord = 21 },
                        new { Id = new Guid("c5fff7d3-49a3-44b4-bc2f-55470e5c1a0e"), AantalRecords = 0, Achternaam = "Evenepoel", ClubId = new Guid("f18b7c45-1872-49de-95ae-09b4a292b97c"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), GemiddeldKm_h = 50.0, GemiddeldeKM_Rit = 15, Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 119, Voornaam = "Remco", WattageRecord = 12 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Web.RecordZoeker.RecordHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("RecordId");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("RecordId");

                    b.ToTable("RecordHistories");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Rit", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Ritten")
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Web.RecordZoeker.RecordHistory", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany()
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
