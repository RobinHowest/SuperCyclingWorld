// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210710111743_AddMoreSeedFanRegistratie")]
    partial class AddMoreSeedFanRegistratie
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("d8221b19-986d-4b51-9b2b-dfbf98f3675f"), Clubnaam = "WTC" },
                        new { Id = new Guid("8791dc62-40b5-46a8-9bc9-b859ccd91a7d"), Clubnaam = "DCTV" },
                        new { Id = new Guid("36f6d6db-8967-45c0-9969-fe8660735399"), Clubnaam = "De lustige rijders" },
                        new { Id = new Guid("be341ed7-35c9-4743-bbb0-065a0ef9aede"), Clubnaam = "WTC Melsele" },
                        new { Id = new Guid("051c340d-0b62-4fed-a0c3-586c6f56ea4f"), Clubnaam = "The master cyclists" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("36f6d6db-8967-45c0-9969-fe8660735399"), SupporterId = new Guid("6d73509e-6c41-4586-bc2a-c62ab3a91fe0") },
                        new { ClubId = new Guid("d8221b19-986d-4b51-9b2b-dfbf98f3675f"), SupporterId = new Guid("ff197918-e32a-4af1-b845-807af2ea51f5") },
                        new { ClubId = new Guid("8791dc62-40b5-46a8-9bc9-b859ccd91a7d"), SupporterId = new Guid("b9d31529-ba6f-43ac-aac8-443229d2ae63") },
                        new { ClubId = new Guid("36f6d6db-8967-45c0-9969-fe8660735399"), SupporterId = new Guid("8669c852-8810-45fe-b95a-e0433c77da36") },
                        new { ClubId = new Guid("d8221b19-986d-4b51-9b2b-dfbf98f3675f"), SupporterId = new Guid("6d73509e-6c41-4586-bc2a-c62ab3a91fe0") },
                        new { ClubId = new Guid("051c340d-0b62-4fed-a0c3-586c6f56ea4f"), SupporterId = new Guid("8669c852-8810-45fe-b95a-e0433c77da36") },
                        new { ClubId = new Guid("be341ed7-35c9-4743-bbb0-065a0ef9aede"), SupporterId = new Guid("ff197918-e32a-4af1-b845-807af2ea51f5") },
                        new { ClubId = new Guid("d8221b19-986d-4b51-9b2b-dfbf98f3675f"), SupporterId = new Guid("b9d31529-ba6f-43ac-aac8-443229d2ae63") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("ff197918-e32a-4af1-b845-807af2ea51f5"), WielrennerId = new Guid("59d02212-23d0-4247-b1e3-cdf8fe37bcec") },
                        new { SupporterId = new Guid("8669c852-8810-45fe-b95a-e0433c77da36"), WielrennerId = new Guid("99cd747f-41ca-4ea0-852b-778c6be1d576") },
                        new { SupporterId = new Guid("ff197918-e32a-4af1-b845-807af2ea51f5"), WielrennerId = new Guid("dfe3d9a6-6177-48d0-b398-22a62fe67d91") },
                        new { SupporterId = new Guid("6d73509e-6c41-4586-bc2a-c62ab3a91fe0"), WielrennerId = new Guid("59d02212-23d0-4247-b1e3-cdf8fe37bcec") },
                        new { SupporterId = new Guid("8669c852-8810-45fe-b95a-e0433c77da36"), WielrennerId = new Guid("2c8b6977-30c9-4fc0-bcc0-0c17edf8973a") },
                        new { SupporterId = new Guid("b9d31529-ba6f-43ac-aac8-443229d2ae63"), WielrennerId = new Guid("99cd747f-41ca-4ea0-852b-778c6be1d576") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("599b0492-9985-4365-af08-6e0f414c2920"), Merk = "B-Twin", WielrennerId = new Guid("59d02212-23d0-4247-b1e3-cdf8fe37bcec"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("df503b3b-f842-4535-8f01-9278a5a5aa55"), Merk = "Moldava", WielrennerId = new Guid("dfe3d9a6-6177-48d0-b398-22a62fe67d91"), Zadel = "Geel zadel" },
                        new { Id = new Guid("e0a12aea-e55e-4e96-960d-e26c7a1fe1c7"), Merk = "Merckx", WielrennerId = new Guid("2c8b6977-30c9-4fc0-bcc0-0c17edf8973a"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("ff197918-e32a-4af1-b845-807af2ea51f5"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("6d73509e-6c41-4586-bc2a-c62ab3a91fe0"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("b9d31529-ba6f-43ac-aac8-443229d2ae63"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("8669c852-8810-45fe-b95a-e0433c77da36"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid?>("ClubId")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("2c8b6977-30c9-4fc0-bcc0-0c17edf8973a"), Achternaam = "Franckaert", ClubId = new Guid("d8221b19-986d-4b51-9b2b-dfbf98f3675f"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Robin" },
                        new { Id = new Guid("59d02212-23d0-4247-b1e3-cdf8fe37bcec"), Achternaam = "Jansma", ClubId = new Guid("8791dc62-40b5-46a8-9bc9-b859ccd91a7d"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Johanna" },
                        new { Id = new Guid("dfe3d9a6-6177-48d0-b398-22a62fe67d91"), Achternaam = "Vissers", ClubId = new Guid("36f6d6db-8967-45c0-9969-fe8660735399"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("99cd747f-41ca-4ea0-852b-778c6be1d576"), Achternaam = "Depardieu", ClubId = new Guid("be341ed7-35c9-4743-bbb0-065a0ef9aede"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Gerard" },
                        new { Id = new Guid("cc64fabe-8a93-4d62-b067-48e4dcb8a940"), Achternaam = "Van Overmeire", ClubId = new Guid("051c340d-0b62-4fed-a0c3-586c6f56ea4f"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marc" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
