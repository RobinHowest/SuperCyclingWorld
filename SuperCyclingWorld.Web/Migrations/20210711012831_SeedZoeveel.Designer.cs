// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialCyclingWorld.Web.Data;

namespace SuperCyclingWorld.Web.Migrations
{
    [DbContext(typeof(SCWDbContext))]
    [Migration("20210711012831_SeedZoeveel")]
    partial class SeedZoeveel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AantalRecords");

                    b.Property<Guid?>("Clubleider");

                    b.Property<string>("Clubnaam");

                    b.Property<int>("Oprichtingsjaar");

                    b.HasKey("Id");

                    b.ToTable("Clubs");

                    b.HasData(
                        new { Id = new Guid("e0b28711-1f52-49b6-a2de-837250874584"), AantalRecords = 0, Clubnaam = "WTC", Oprichtingsjaar = 2001 },
                        new { Id = new Guid("c67b75f8-b57b-4a00-b786-2577ac7ec780"), AantalRecords = 0, Clubnaam = "DCTV", Oprichtingsjaar = 2016 },
                        new { Id = new Guid("f20be404-910e-4e7c-acf6-20e08c193f69"), AantalRecords = 0, Clubnaam = "De lustige rijders", Oprichtingsjaar = 1991 },
                        new { Id = new Guid("f19f21c4-dfd4-4226-bc09-d825618f4c52"), AantalRecords = 0, Clubnaam = "WTC Melsele", Oprichtingsjaar = 1966 },
                        new { Id = new Guid("d6f03a52-053a-425a-b951-54080673b3d2"), AantalRecords = 0, Clubnaam = "The master cyclists", Oprichtingsjaar = 2011 }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.Property<Guid>("ClubId");

                    b.Property<Guid>("SupporterId");

                    b.HasKey("ClubId", "SupporterId");

                    b.HasIndex("SupporterId");

                    b.ToTable("ClubSupporter");

                    b.HasData(
                        new { ClubId = new Guid("f20be404-910e-4e7c-acf6-20e08c193f69"), SupporterId = new Guid("90d54095-1d75-4084-81f7-f57ac1c3c170") },
                        new { ClubId = new Guid("e0b28711-1f52-49b6-a2de-837250874584"), SupporterId = new Guid("aae7a773-ad0f-49c2-846e-5b10d5c6c1bf") },
                        new { ClubId = new Guid("c67b75f8-b57b-4a00-b786-2577ac7ec780"), SupporterId = new Guid("e5ac8556-a52b-4392-91b8-4a43386e4e6a") },
                        new { ClubId = new Guid("f20be404-910e-4e7c-acf6-20e08c193f69"), SupporterId = new Guid("a7354a08-18eb-4500-8e65-833275050212") },
                        new { ClubId = new Guid("e0b28711-1f52-49b6-a2de-837250874584"), SupporterId = new Guid("90d54095-1d75-4084-81f7-f57ac1c3c170") },
                        new { ClubId = new Guid("d6f03a52-053a-425a-b951-54080673b3d2"), SupporterId = new Guid("a7354a08-18eb-4500-8e65-833275050212") },
                        new { ClubId = new Guid("f19f21c4-dfd4-4226-bc09-d825618f4c52"), SupporterId = new Guid("aae7a773-ad0f-49c2-846e-5b10d5c6c1bf") },
                        new { ClubId = new Guid("e0b28711-1f52-49b6-a2de-837250874584"), SupporterId = new Guid("e5ac8556-a52b-4392-91b8-4a43386e4e6a") },
                        new { ClubId = new Guid("d6f03a52-053a-425a-b951-54080673b3d2"), SupporterId = new Guid("90d54095-1d75-4084-81f7-f57ac1c3c170") },
                        new { ClubId = new Guid("d6f03a52-053a-425a-b951-54080673b3d2"), SupporterId = new Guid("aae7a773-ad0f-49c2-846e-5b10d5c6c1bf") },
                        new { ClubId = new Guid("d6f03a52-053a-425a-b951-54080673b3d2"), SupporterId = new Guid("e5ac8556-a52b-4392-91b8-4a43386e4e6a") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.Property<Guid>("SupporterId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("SupporterId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("FanRegistratie");

                    b.HasData(
                        new { SupporterId = new Guid("aae7a773-ad0f-49c2-846e-5b10d5c6c1bf"), WielrennerId = new Guid("39512d83-a1e8-46cb-93e4-f3b018e656c6") },
                        new { SupporterId = new Guid("a7354a08-18eb-4500-8e65-833275050212"), WielrennerId = new Guid("8d78d624-d785-4948-b02d-8f6683f59b15") },
                        new { SupporterId = new Guid("aae7a773-ad0f-49c2-846e-5b10d5c6c1bf"), WielrennerId = new Guid("c3b9f256-d41c-44ff-8091-0eb62bfc812a") },
                        new { SupporterId = new Guid("90d54095-1d75-4084-81f7-f57ac1c3c170"), WielrennerId = new Guid("39512d83-a1e8-46cb-93e4-f3b018e656c6") },
                        new { SupporterId = new Guid("a7354a08-18eb-4500-8e65-833275050212"), WielrennerId = new Guid("9a05108c-2e52-48e5-81e3-b1ee43bb2eae") },
                        new { SupporterId = new Guid("e5ac8556-a52b-4392-91b8-4a43386e4e6a"), WielrennerId = new Guid("8d78d624-d785-4948-b02d-8f6683f59b15") }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Merk");

                    b.Property<Guid>("WielrennerId");

                    b.Property<string>("Zadel");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Fietsen");

                    b.HasData(
                        new { Id = new Guid("c17877a5-3f21-4f1e-b1f2-01e73816dc36"), Merk = "B-Twin", WielrennerId = new Guid("39512d83-a1e8-46cb-93e4-f3b018e656c6"), Zadel = "Zwart zadel" },
                        new { Id = new Guid("d4fc2144-88c2-40d6-95fb-f9b725e5cf59"), Merk = "Moldava", WielrennerId = new Guid("c3b9f256-d41c-44ff-8091-0eb62bfc812a"), Zadel = "Geel zadel" },
                        new { Id = new Guid("95ac02ed-22a0-491e-8fb1-b4f4adb641ce"), Merk = "Merckx", WielrennerId = new Guid("9a05108c-2e52-48e5-81e3-b1ee43bb2eae"), Zadel = "Oranje zadel" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecordCijfer");

                    b.Property<string>("RecordEenheid");

                    b.Property<int>("RecordType");

                    b.Property<string>("Recordnaam");

                    b.Property<Guid?>("WielrennerId");

                    b.HasKey("Id");

                    b.HasIndex("WielrennerId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Supporter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.ToTable("Supporters");

                    b.HasData(
                        new { Id = new Guid("aae7a773-ad0f-49c2-846e-5b10d5c6c1bf"), Achternaam = "The Pooh", Email = "ThePooh@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Winnie" },
                        new { Id = new Guid("90d54095-1d75-4084-81f7-f57ac1c3c170"), Achternaam = "Van Achtmaal", Email = "VanAchtmaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Thomas" },
                        new { Id = new Guid("e5ac8556-a52b-4392-91b8-4a43386e4e6a"), Achternaam = "VanKerkhove", Email = "VanKerkhove@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Nico" },
                        new { Id = new Guid("a7354a08-18eb-4500-8e65-833275050212"), Achternaam = "Kronenburg", Email = "Kronenburg@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Koen" },
                        new { Id = new Guid("afcc75cc-b658-4714-9a3e-2e2636af02dd"), Achternaam = "Van Kruisem", Email = "VanKruisem@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Willy" },
                        new { Id = new Guid("489127cb-6c93-425b-9a3f-15ee6f3c03c1"), Achternaam = "Wezemaal", Email = "Wezemaal@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Bert" },
                        new { Id = new Guid("7a2c9f6e-dd8a-48f2-805e-f42f791a6af5"), Achternaam = "Opdorp", Email = "Opdorp@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Alfons" },
                        new { Id = new Guid("5e2b777f-ce67-4920-8e9b-b5db09ca9d88"), Achternaam = "AppelGate", Email = "Appelgate@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Christina" },
                        new { Id = new Guid("b421fb4f-b832-44ca-81e6-80f0325107f5"), Achternaam = "Monroe", Email = "Monroe@live.be", GeboorteDatum = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Marlyn" },
                        new { Id = new Guid("56e2deb8-e339-4b6a-9489-fddfabaa90d3"), Achternaam = "Clooney", Email = "Clooney@live.be", GeboorteDatum = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "George" },
                        new { Id = new Guid("21135017-d03f-4ff2-825e-84e95da910b7"), Achternaam = "Peeters", Email = "Peeters@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Jan" },
                        new { Id = new Guid("e5ac6b8d-3c39-4748-b953-55083e9d7c42"), Achternaam = "Reyns", Email = "Reyns@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", Voornaam = "Rita" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Achternaam");

                    b.Property<Guid>("ClubId");

                    b.Property<string>("Email");

                    b.Property<DateTime>("GeboorteDatum");

                    b.Property<string>("Paswoord");

                    b.Property<int>("TotaalAantalGeredenKilometers");

                    b.Property<string>("Voornaam");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("Wielrenners");

                    b.HasData(
                        new { Id = new Guid("9a05108c-2e52-48e5-81e3-b1ee43bb2eae"), Achternaam = "Franckaert", ClubId = new Guid("c67b75f8-b57b-4a00-b786-2577ac7ec780"), Email = "Franckaert@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 103, Voornaam = "Robin" },
                        new { Id = new Guid("39512d83-a1e8-46cb-93e4-f3b018e656c6"), Achternaam = "Jansma", ClubId = new Guid("d6f03a52-053a-425a-b951-54080673b3d2"), Email = "Jansma@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 260, Voornaam = "Johanna" },
                        new { Id = new Guid("c3b9f256-d41c-44ff-8091-0eb62bfc812a"), Achternaam = "Vissers", ClubId = new Guid("d6f03a52-053a-425a-b951-54080673b3d2"), Email = "Vissers@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 301, Voornaam = "Bert" },
                        new { Id = new Guid("8d78d624-d785-4948-b02d-8f6683f59b15"), Achternaam = "Depardieu", ClubId = new Guid("f20be404-910e-4e7c-acf6-20e08c193f69"), Email = "Depardieu@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 85, Voornaam = "Gerard" },
                        new { Id = new Guid("7a63826a-b3c6-4e7b-8787-1057d46c63b9"), Achternaam = "Van Overmeire", ClubId = new Guid("d6f03a52-053a-425a-b951-54080673b3d2"), Email = "VanOvermeire@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 256, Voornaam = "Marc" },
                        new { Id = new Guid("a249de8a-efff-4f75-a241-f8870b4ae98c"), Achternaam = "Camara", ClubId = new Guid("d6f03a52-053a-425a-b951-54080673b3d2"), Email = "Camara@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 504, Voornaam = "Herdy" },
                        new { Id = new Guid("4fc0968c-f7f7-466c-a011-183bc5b23122"), Achternaam = "Donckerwolcke", ClubId = new Guid("f20be404-910e-4e7c-acf6-20e08c193f69"), Email = "Donckerwolcke@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1100, Voornaam = "Thomas" },
                        new { Id = new Guid("e3d489ae-ece1-4c9e-bf39-af037295e01b"), Achternaam = "Garnaal", ClubId = new Guid("f19f21c4-dfd4-4226-bc09-d825618f4c52"), Email = "Garnaal@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 250, Voornaam = "Sofie" },
                        new { Id = new Guid("78d8615c-19eb-4e4b-adaa-6b4a514e0a57"), Achternaam = "Brokkenpap", ClubId = new Guid("e0b28711-1f52-49b6-a2de-837250874584"), Email = "Brokkenpap@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 125, Voornaam = "Berend" },
                        new { Id = new Guid("41cc1054-ea2e-47b5-82f0-1dca727687ff"), Achternaam = "Mega", ClubId = new Guid("c67b75f8-b57b-4a00-b786-2577ac7ec780"), Email = "Mega@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 568, Voornaam = "Mindy" },
                        new { Id = new Guid("6f889fab-da8f-478c-b2fb-582e09e8ce85"), Achternaam = "Scarlet", ClubId = new Guid("f20be404-910e-4e7c-acf6-20e08c193f69"), Email = "Scarlet@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 308, Voornaam = "Johanson" },
                        new { Id = new Guid("9f96e6ae-80cb-4b54-8dc0-d62202bd1981"), Achternaam = "Beukelaer", ClubId = new Guid("f20be404-910e-4e7c-acf6-20e08c193f69"), Email = "Beukelaer@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 1250, Voornaam = "Koekjes" },
                        new { Id = new Guid("171803c9-62a2-4feb-a3b6-97fcad761ba7"), Achternaam = "Mertens", ClubId = new Guid("f20be404-910e-4e7c-acf6-20e08c193f69"), Email = "Mertens@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 110, Voornaam = "Evelyne" },
                        new { Id = new Guid("9d45e58b-9023-4205-9cc2-7cb06bbee005"), Achternaam = "VanHoof", ClubId = new Guid("c67b75f8-b57b-4a00-b786-2577ac7ec780"), Email = "Vanhoof@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 306, Voornaam = "Emily" },
                        new { Id = new Guid("911bc918-dfbb-430d-8728-a919cb838fb5"), Achternaam = "Vanderplas", ClubId = new Guid("d6f03a52-053a-425a-b951-54080673b3d2"), Email = "Vanderplas@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 59, Voornaam = "Sonja" },
                        new { Id = new Guid("4e5c5735-90a6-4f20-997a-c63111d81d32"), Achternaam = "Bambino", ClubId = new Guid("e0b28711-1f52-49b6-a2de-837250874584"), Email = "Bambino@live.be", GeboorteDatum = new DateTime(1981, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 257, Voornaam = "Salvatore" },
                        new { Id = new Guid("6c32fc81-0fff-4e3a-b4f6-7995b7ef53fd"), Achternaam = "Zalinski", ClubId = new Guid("c67b75f8-b57b-4a00-b786-2577ac7ec780"), Email = "Zalinski@live.be", GeboorteDatum = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 233, Voornaam = "Wosznjeck" },
                        new { Id = new Guid("02f60061-c2ca-4647-bbed-e2a1bfa45493"), Achternaam = "Debruyne", ClubId = new Guid("d6f03a52-053a-425a-b951-54080673b3d2"), Email = "Debruyne@live.be", GeboorteDatum = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 450, Voornaam = "Kevin" },
                        new { Id = new Guid("e88e7fc1-5e91-4e6f-ae04-ca3a8f3d6d59"), Achternaam = "Hazard", ClubId = new Guid("c67b75f8-b57b-4a00-b786-2577ac7ec780"), Email = "Hazard@live.be", GeboorteDatum = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 23, Voornaam = "Eden" },
                        new { Id = new Guid("c27cc3c9-b1b4-4710-a965-33e7fd8a7446"), Achternaam = "Evenepoel", ClubId = new Guid("f19f21c4-dfd4-4226-bc09-d825618f4c52"), Email = "Evenepoel@live.be", GeboorteDatum = new DateTime(1979, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Paswoord = "202CB962AC59075B964B07152D234B70", TotaalAantalGeredenKilometers = 111, Voornaam = "Remco" }
                    );
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.Property<Guid>("RecordId");

                    b.Property<Guid>("WielrennerId");

                    b.HasKey("RecordId", "WielrennerId");

                    b.HasIndex("WielrennerId");

                    b.ToTable("WielrennerRecords");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.ClubSupporter", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club")
                        .WithMany("ClubSupporters")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Clubs")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.FanRegistratie", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Supporter")
                        .WithMany("Wielrenners")
                        .HasForeignKey("SupporterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Wielrenners")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Fiets", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner")
                        .WithMany("Fietsen")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Record", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany()
                        .HasForeignKey("WielrennerId");
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.Wielrenner", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Club", "Club")
                        .WithMany("Leden")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SuperCyclingWorld.Core.Entities.WielrennerRecords", b =>
                {
                    b.HasOne("SuperCyclingWorld.Core.Entities.Record", "Record")
                        .WithMany("WielrennerRecords")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SuperCyclingWorld.Core.Entities.Wielrenner", "Wielrenner")
                        .WithMany("Records")
                        .HasForeignKey("WielrennerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
